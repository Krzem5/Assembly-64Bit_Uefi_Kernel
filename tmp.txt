
build\dbg_kernel.elf:     file format elf64-x86-64
build\dbg_kernel.elf
architecture: i386:x86-64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0xffffffffc0000000

Program Header:
    LOAD off    0x0000000000200000 vaddr 0xffffffffc0000000 paddr 0x0000000000000000 align 2**21
         filesz 0x0000000000009be0 memsz 0x0000000000009be0 flags rwx

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00006a60  ffffffffc0000000  0000000000000000  00200000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000890  ffffffffc0006a60  0000000000006a60  00206a60  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000330  ffffffffc00072f0  00000000000072f0  002072f0  2**5
                  ALLOC
  3 .text_unmap   000025c0  ffffffffc0007620  0000000000007620  00207620  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
SYMBOL TABLE:
ffffffffc0000000 l    d  .text	0000000000000000 .text
ffffffffc0006a60 l    d  .data	0000000000000000 .data
ffffffffc00072f0 l    d  .bss	0000000000000000 .bss
ffffffffc0007620 l    d  .text_unmap	0000000000000000 .text_unmap
0000000000000000 l    df *ABS*	0000000000000000 src/kernel/asm/kentry.asm
ffffffffc000005e l       .text	0000000000000000 _start._loop
0000000000000000 l    df *ABS*	0000000000000000 src/kernel/asm/apic.asm
ffffffffc00000b0 l       .text	0000000000000000 _asm_isr_h_call
ffffffffc0007968 l       .text_unmap	0000000000000000 asm_apic_setup._end
0000000000000000 l    df *ABS*	0000000000000000 src/kernel/asm/ap_startup.asm
ffffffffc00079c0 l       .text_unmap	0000000000000000 asm_ap_startup._init_pml4
ffffffffc00079c8 l       .text_unmap	0000000000000000 asm_ap_startup._init_cpu_data
ffffffffc00079d0 l       .text_unmap	0000000000000000 asm_ap_startup._idt
ffffffffc00079e0 l       .text_unmap	0000000000000000 asm_ap_startup._gdt
0000000000000008 l       *ABS*	0000000000000000 asm_ap_startup._gdt_code
0000000000000010 l       *ABS*	0000000000000000 asm_ap_startup._gdt_data
ffffffffc00079f8 l       .text_unmap	0000000000000000 asm_ap_startup._gdt_ptr
ffffffffc0007a08 l       .text_unmap	0000000000000000 asm_ap_startup._64bit_code
00000000000000d0 l       *ABS*	0000000000000000 asm_ap_startup_len
ffffffffc0007a40 l       .text_unmap	0000000000000000 _asm_ap_startup_kernel
ffffffffc0000120 l       .text	0000000000000000 _asm_ap_startup_kernel_wait
ffffffffc0000129 l       .text	0000000000000000 _asm_ap_startup_kernel_wait._w_loop
ffffffffc000012b l       .text	0000000000000000 _asm_ap_startup_kernel_wait._start_w
ffffffffc000013b l       .text	0000000000000000 _asm_ap_startup_kernel_wait._loop
0000000000000000 l    df *ABS*	0000000000000000 src/kernel/asm/cpu.asm
0000000000000000 l    df *ABS*	0000000000000000 src/kernel/asm/cpu_info.asm
0000000000000000 l    df *ABS*	0000000000000000 src/kernel/asm/fatal_error.asm
ffffffffc0000171 l       .text	0000000000000000 asm_halt_cpu._asm_l
0000000000000000 l    df *ABS*	0000000000000000 src/kernel/asm/irq.asm
ffffffffc0000180 l       .text	0000000000000000 _asm_irq_h_call
0000000000000000 l    df *ABS*	0000000000000000 src/kernel/asm/isr.asm
ffffffffc0000230 l       .text	0000000000000000 _asm_isr_h_call
0000000000000000 l    df *ABS*	0000000000000000 src/kernel/asm/lock.asm
ffffffffc0000367 l       .text	0000000000000000 asm_lock_acquire._loop
ffffffffc000036c l       .text	0000000000000000 asm_lock_acquire._start
0000000000000000 l    df *ABS*	0000000000000000 src/kernel/asm/msr.asm
0000000000000000 l    df *ABS*	0000000000000000 src/kernel/asm/ports.asm
0000000000000000 l    df *ABS*	0000000000000000 src/kernel/asm/thread.asm
0000000000000000 l    df *ABS*	0000000000000000 src/kernel/asm/vm.asm
0000000000000000 l    df *ABS*	0000000000000000 src/libc/asm/alloc.asm
0000000000000000 l    df *ABS*	0000000000000000 src/kernel/asm/gdt.asm
ffffffffc0007b5e l       .text_unmap	0000000000000000 asm_setup_gdt._new_cs
ffffffffc0006aa4 l       .data	0000000000000000 gdt64_start
0000000000000008 l       *ABS*	0000000000000000 gdt64_code
0000000000000010 l       *ABS*	0000000000000000 gdt64_data
ffffffffc0006abc l       .data	0000000000000000 gdt64_pointer
0000000000000000 l    df *ABS*	0000000000000000 src/kernel/asm/idt.asm
ffffffffc0005e60 g       .text	0000000000000000 .refptr.gfx_fill_rect
ffffffffc000038a g       .text	0000000000000000 asm_wrmsr
ffffffffc00001da g       .text	0000000000000000 asm_irq5
ffffffffc0007538 g       .bss	0000000000000000 _console_w
ffffffffc0002300 g       .text	0000000000000000 scheduler_start
ffffffffc0006060 g       .text	0000000000000000 .refptr.fatal_error
ffffffffc0004c80 g       .text	0000000000000000 .refptr.asm_cpu_setup_data
ffffffffc0007380 g       .bss	0000000000000000 _tm_p
ffffffffc0001cb0 g       .text	0000000000000000 paging_unmap_page
ffffffffc0007ec0 g       .text_unmap	0000000000000000 apic_init
ffffffffc0004a60 g       .text	0000000000000000 .refptr.asm_apic_lint0_int
ffffffffc0000296 g       .text	0000000000000000 asm_isr7
ffffffffc0000314 g       .text	0000000000000000 asm_isr24
ffffffffc0000140 g       .text	0000000000000000 asm_current_cpu
ffffffffc0000101 g       .text	0000000000000000 asm_apic_spurious_int
ffffffffc0004330 g       .text	0000000000000000 printf
ffffffffc00045f0 g       .text	0000000000000000 .refptr.kernel_process
ffffffffc0007b3f g       .text_unmap	0000000000000000 asm_setup_gdt
ffffffffc0002900 g       .text	0000000000000000 __vprintf_write_uint
ffffffffc0000000 g       *ABS*	0000000000000000 ___KERNEL_BASE_VA__
ffffffffc0004730 g       .text	0000000000000000 .refptr.paging_init
ffffffffc0004680 g       .text	0000000000000000 .refptr.cpu_info_init
ffffffffc0006bf0 g       .data	0000000000000000 _tm_us_r
ffffffffc0005580 g       .text	0000000000000000 .refptr.asm_isr28
ffffffffc00056d0 g       .text	0000000000000000 .refptr.asm_isr7
ffffffffc0007420 g       .bss	0000000000000000 isr_hl
ffffffffc0000540 g       .text	0000000000000000 fatal_error_line
ffffffffc00050a0 g       .text	0000000000000000 .refptr.asm_irq13
ffffffffc0007f60 g       .text_unmap	0000000000000000 cpu_init
ffffffffc0007558 g       .bss	0000000000000000 _gfx_vmem_w
ffffffffc00002e7 g       .text	0000000000000000 asm_isr19
ffffffffc0007570 g       .bss	0000000000000000 _pg_va_to_pa
ffffffffc00002bc g       .text	0000000000000000 asm_isr14
ffffffffc00002f0 g       .text	0000000000000000 asm_isr20
ffffffffc0001bc0 g       .text	0000000000000000 paging_reverse_translate
ffffffffc0007528 g       .bss	0000000000000000 _console_bf
ffffffffc00055b0 g       .text	0000000000000000 .refptr.asm_isr25
ffffffffc00055e0 g       .text	0000000000000000 .refptr.asm_isr22
ffffffffc0002ed0 g       .text	0000000000000000 __vprintf_buffer
ffffffffc00046d0 g       .text	0000000000000000 .refptr._console_vprint
ffffffffc00048b0 g       .text	0000000000000000 .refptr.hpet_timer_init
ffffffffc00005b0 g       .text	0000000000000000 hpet_timer_get_us
ffffffffc0000210 g       .text	0000000000000000 asm_irq13
ffffffffc00001c8 g       .text	0000000000000000 asm_irq2
ffffffffc00072f8 g       .bss	0000000000000000 _dt_ptr
ffffffffc0000090 g       .text	0000000000000000 thread2
ffffffffc0006020 g       .text	0000000000000000 .refptr.pm_set_free
ffffffffc00075b0 g       .bss	0000000000000000 _nsi
ffffffffc0004ea0 g       .text	0000000000000000 .refptr.regiser_irq_handler
ffffffffc0004630 g       .text	0000000000000000 .refptr.process_init
ffffffffc00018b0 g       .text	0000000000000000 gfx_fill_rect
ffffffffc0005690 g       .text	0000000000000000 .refptr.asm_isr11
ffffffffc0000620 g       .text	0000000000000000 set_idt_entry
ffffffffc000032f g       .text	0000000000000000 asm_isr27
ffffffffc0001460 g       .text	0000000000000000 gfx_print_char
ffffffffc00010b0 g       .text	0000000000000000 _console_print_char
ffffffffc0005610 g       .text	0000000000000000 .refptr.asm_isr19
ffffffffc00045c0 g       .text	0000000000000000 .refptr.___KERNEL_UNMAP_START__
ffffffffc0004700 g       .text	0000000000000000 .refptr.gfx_init
ffffffffc0006ce0 g       .data	0000000000000000 _f_msg
ffffffffc0005fd0 g       .text	0000000000000000 .refptr.paging_map_page
ffffffffc0006070 g       .text	0000000000000000 .refptr.pm_get_free
ffffffffc0004c60 g       .text	0000000000000000 .refptr.fatal_error_line
ffffffffc0002120 g       .text	0000000000000000 vm_release
ffffffffc0000272 g       .text	0000000000000000 asm_isr1
ffffffffc0007af6 g       .text_unmap	0000000000000000 asm_setup_ap_startup_data
ffffffffc0004c50 g       .text	0000000000000000 .refptr.paging_identity_map
ffffffffc0004eb0 g       .text	0000000000000000 .refptr.asm_setup_idt
ffffffffc0007b80 g       .text_unmap	0000000000000000 acpi_init
ffffffffc0005620 g       .text	0000000000000000 .refptr.asm_isr18
ffffffffc0004660 g       .text	0000000000000000 .refptr.acpi_init
ffffffffc00024d0 g       .text	0000000000000000 malloc
ffffffffc00055c0 g       .text	0000000000000000 .refptr.asm_isr24
ffffffffc0004640 g       .text	0000000000000000 .refptr.cpu_init
ffffffffc00075cc g       .bss	0000000000000000 pll
ffffffffc00001bc g       .text	0000000000000000 asm_irq0
ffffffffc0008d60 g       .text_unmap	0000000000000000 hpet_timer_init
ffffffffc0005700 g       .text	0000000000000000 .refptr.asm_isr4
ffffffffc0002830 g       .text	0000000000000000 __vprintf_buffer_reserve_func
ffffffffc0004bf0 g       .text	0000000000000000 .refptr.paging_identity_unmap
ffffffffc00075b8 g       .bss	0000000000000000 sl
ffffffffc0001ec0 g       .text	0000000000000000 pm_get_free
ffffffffc000028a g       .text	0000000000000000 asm_isr5
ffffffffc0008270 g       .text_unmap	0000000000000000 cpu_info_init
ffffffffc0003b20 g       .text	0000000000000000 __vprintf_raw
ffffffffc00050e0 g       .text	0000000000000000 .refptr.asm_irq9
ffffffffc0005150 g       .text	0000000000000000 .refptr.asm_irq2
ffffffffc0005170 g       .text	0000000000000000 .refptr.asm_irq0
ffffffffc0005120 g       .text	0000000000000000 .refptr.asm_irq5
ffffffffc0005110 g       .text	0000000000000000 .refptr.asm_irq6
ffffffffc0005e40 g       .text	0000000000000000 .refptr.asm_lock_acquire
ffffffffc0007300 g       .bss	0000000000000000 _apic_t_per_us
ffffffffc00073a0 g       .bss	0000000000000000 irq_hl
ffffffffc00055d0 g       .text	0000000000000000 .refptr.asm_isr23
ffffffffc00046c0 g       .text	0000000000000000 .refptr.asm_setup_gdt
ffffffffc00005d0 g       .text	0000000000000000 hpet_timer_spinwait
ffffffffc0007590 g       .bss	0000000000000000 _pg_dt
ffffffffc0009b80 g       .text_unmap	0000000000000000 thread_init
ffffffffc00072e0 g       .data	0000000000000000 FONT_SPLEEN
ffffffffc00075e0 g       .bss	0000000000000000 scheduler_ready
ffffffffc00021c0 g       .text	0000000000000000 lock_create
ffffffffc0004380 g       .text	0000000000000000 __asm_fill_zero
ffffffffc00009c0 g       .text	0000000000000000 unregiser_isr_handler
ffffffffc000034a g       .text	0000000000000000 asm_isr30
ffffffffc00002de g       .text	0000000000000000 asm_isr18
ffffffffc00003c9 g       .text	0000000000000000 asm_port_out32
ffffffffc00056b0 g       .text	0000000000000000 .refptr.asm_isr9
ffffffffc00056a0 g       .text	0000000000000000 .refptr.asm_isr10
ffffffffc00004e0 g       .text	0000000000000000 apic_send_ipi
ffffffffc0007600 g       .bss	0000000000000000 __libc_alloc_head
ffffffffc0000219 g       .text	0000000000000000 asm_irq14
ffffffffc0002080 g       .text	0000000000000000 vm_commit
ffffffffc0000222 g       .text	0000000000000000 asm_irq15
ffffffffc00050c0 g       .text	0000000000000000 .refptr.asm_irq11
ffffffffc00075b4 g       .bss	0000000000000000 sll
ffffffffc0001360 g       .text	0000000000000000 _console_print
ffffffffc0005730 g       .text	0000000000000000 .refptr.asm_isr1
ffffffffc0004a90 g       .text	0000000000000000 .refptr.asm_apic_spurious_int
ffffffffc0004690 g       .text	0000000000000000 .refptr.setup_irq
ffffffffc0000207 g       .text	0000000000000000 asm_irq12
ffffffffc0009420 g       .text_unmap	0000000000000000 console_init
ffffffffc0000302 g       .text	0000000000000000 asm_isr22
ffffffffc0005080 g       .text	0000000000000000 .refptr.asm_irq15
ffffffffc0007618 g       .bss	0000000000000000 __printf_rs
ffffffffc0000580 g       .text	0000000000000000 _hpet_timer_irq_cb
ffffffffc0004a30 g       .text	0000000000000000 .refptr.scheduler_yield
ffffffffc00007e0 g       .text	0000000000000000 _handle_isr
ffffffffc0004a80 g       .text	0000000000000000 .refptr.set_idt_entry
ffffffffc00026e0 g       .text	0000000000000000 calloc
ffffffffc0005550 g       .text	0000000000000000 .refptr.asm_isr31
ffffffffc0005df0 g       .text	0000000000000000 .refptr.asm_port_in32
ffffffffc0006230 g       .text	0000000000000000 .refptr.__asm_fill_zero
ffffffffc00045d0 g       .text	0000000000000000 .refptr.___KERNEL_UNMAP_END__
ffffffffc0000290 g       .text	0000000000000000 asm_isr6
ffffffffc00013f0 g       .text	0000000000000000 _console_vprint
ffffffffc00048a0 g       .text	0000000000000000 .refptr.vm_release
ffffffffc0004740 g       .text	0000000000000000 .refptr._console_print
ffffffffc00001ec g       .text	0000000000000000 asm_irq8
ffffffffc0006010 g       .text	0000000000000000 .refptr.paging_unmap_page
ffffffffc0007588 g       .bss	0000000000000000 _pg_pml4
ffffffffc00003f0 g       .text	0000000000000000 asm_get_cr2
ffffffffc0007578 g       .bss	0000000000000000 _pg_u_pg
ffffffffc0000111 g       .text	0000000000000000 asm_apic_lint1_int
ffffffffc00002f9 g       .text	0000000000000000 asm_isr21
ffffffffc0000650 g       .text	0000000000000000 _handle_irq
ffffffffc0005640 g       .text	0000000000000000 .refptr.asm_isr16
ffffffffc0005e20 g       .text	0000000000000000 .refptr.__vprintf_raw
ffffffffc0009b70 g       .text_unmap	0000000000000000 scheduler_init
ffffffffc00046b0 g       .text	0000000000000000 .refptr.setup_idt
ffffffffc00056e0 g       .text	0000000000000000 .refptr.asm_isr6
ffffffffc00095d0 g       .text_unmap	0000000000000000 pm_init
ffffffffc0008e70 g       .text_unmap	0000000000000000 setup_idt
ffffffffc000030b g       .text	0000000000000000 asm_isr23
ffffffffc0002240 g       .text	0000000000000000 process_create
ffffffffc0007610 g       .bss	0000000000000000 __printf_cb
ffffffffc00046e0 g       .text	0000000000000000 .refptr.console_init
ffffffffc0006b60 g       .data	0000000000000000 _cpu_ap_c
ffffffffc0008e90 g       .text_unmap	0000000000000000 setup_irq
ffffffffc0006240 g       .text	0000000000000000 .refptr.vm_reserve
ffffffffc0000000 g       .text	0000000000000000 _start
ffffffffc00050b0 g       .text	0000000000000000 .refptr.asm_irq12
ffffffffc00009e0 g       .text	0000000000000000 pci_init
ffffffffc0005e30 g       .text	0000000000000000 .refptr.asm_lock_release
ffffffffc0004e30 g       .text	0000000000000000 .refptr.asm_cpuid
ffffffffc0004710 g       .text	0000000000000000 .refptr.vm_init
ffffffffc00001f2 g       .text	0000000000000000 asm_irq9
ffffffffc0007310 g       .bss	0000000000000000 _cpu_dt
ffffffffc0002330 g       .text	0000000000000000 scheduler_yield
ffffffffc00001ce g       .text	0000000000000000 asm_irq3
ffffffffc00003a8 g       .text	0000000000000000 asm_port_in16
ffffffffc0001d80 g       .text	0000000000000000 paging_identity_map
ffffffffc0000353 g       .text	0000000000000000 asm_isr31
ffffffffc00072f0 g       .bss	0000000000000000 _dt_len
ffffffffc00019c0 g       .text	0000000000000000 paging_map_page
ffffffffc0007390 g       .bss	0000000000000000 idt_l
ffffffffc0007b5f g       .text_unmap	0000000000000000 asm_setup_idt
ffffffffc0009940 g       .text_unmap	0000000000000000 vm_init
ffffffffc0002780 g       .text	0000000000000000 realloc
ffffffffc0004a50 g       .text	0000000000000000 .refptr.asm_apic_lint1_int
ffffffffc00055a0 g       .text	0000000000000000 .refptr.asm_isr26
ffffffffc000010a g       .text	0000000000000000 asm_apic_lint0_int
ffffffffc0004a70 g       .text	0000000000000000 .refptr.asm_apic_timer_int
ffffffffc00075d0 g       .bss	0000000000000000 pl
ffffffffc0004c00 g       .text	0000000000000000 .refptr.hpet_timer_spinwait
ffffffffc0007550 g       .bss	0000000000000000 _gfx_vmem_h
ffffffffc00075c0 g       .bss	0000000000000000 kernel_process
ffffffffc0005e50 g       .text	0000000000000000 .refptr.FONT_SPLEEN
ffffffffc0007560 g       .bss	0000000000000000 _gfx_vmem_l
ffffffffc00001f8 g       .text	0000000000000000 asm_irq10
ffffffffc00002a0 g       .text	0000000000000000 asm_isr9
ffffffffc0009500 g       .text_unmap	0000000000000000 gfx_init
ffffffffc00048c0 g       .text	0000000000000000 .refptr.vm_commit
ffffffffc00050f0 g       .text	0000000000000000 .refptr.asm_irq8
ffffffffc0005130 g       .text	0000000000000000 .refptr.asm_irq4
ffffffffc0005710 g       .text	0000000000000000 .refptr.asm_isr3
ffffffffc0009a80 g       .text_unmap	0000000000000000 process_init
ffffffffc0000278 g       .text	0000000000000000 asm_isr2
ffffffffc0000338 g       .text	0000000000000000 asm_isr28
ffffffffc0007548 g       .bss	0000000000000000 _console_x
ffffffffc0009a20 g       .text_unmap	0000000000000000 lock_init
ffffffffc0000284 g       .text	0000000000000000 asm_isr4
ffffffffc0004c40 g       .text	0000000000000000 .refptr.paging_get_phys_pml4
ffffffffc0004720 g       .text	0000000000000000 .refptr.pm_init
ffffffffc0004600 g       .text	0000000000000000 .refptr.acpi_free_data
ffffffffc00090c0 g       .text_unmap	0000000000000000 setup_isr
ffffffffc00003a0 g       .text	0000000000000000 asm_port_in
ffffffffc0002390 g       .text	0000000000000000 create_thread
ffffffffc00002a6 g       .text	0000000000000000 asm_isr10
ffffffffc00001e0 g       .text	0000000000000000 asm_irq6
ffffffffc00002c3 g       .text	0000000000000000 asm_isr15
ffffffffc0006040 g       .text	0000000000000000 .refptr.regiser_isr_handler
ffffffffc00003d0 g       .text	0000000000000000 asm_clear_thread_data
ffffffffc0006080 g       .text	0000000000000000 .refptr.asm_get_cr2
ffffffffc00009b0 g       .text	0000000000000000 regiser_isr_handler
ffffffffc0005630 g       .text	0000000000000000 .refptr.asm_isr17
ffffffffc00007b0 g       .text	0000000000000000 regiser_irq_handler
ffffffffc0005680 g       .text	0000000000000000 .refptr.asm_isr12
ffffffffc0002860 g       .text	0000000000000000 __vprintf_handle_sign
ffffffffc00045e0 g       .text	0000000000000000 .refptr.create_thread
ffffffffc00075c8 g       .bss	0000000000000000 _npi
ffffffffc0005570 g       .text	0000000000000000 .refptr.asm_isr29
ffffffffc0004e60 g       .text	0000000000000000 .refptr.asm_halt_cpu
ffffffffc0006190 g       .text	0000000000000000 .refptr.asm_clear_thread_data
ffffffffc0006c50 g       .data	0000000000000000 idt
ffffffffc00056c0 g       .text	0000000000000000 .refptr.asm_isr8
ffffffffc0004620 g       .text	0000000000000000 .refptr.thread_init
ffffffffc000031d g       .text	0000000000000000 asm_isr25
ffffffffc0007a89 g       .text_unmap	0000000000000000 asm_setup_ap_startup_code
ffffffffc00045b0 g       .text	0000000000000000 .refptr.scheduler_start
ffffffffc00003b1 g       .text	0000000000000000 asm_port_in32
ffffffffc0005650 g       .text	0000000000000000 .refptr.asm_isr15
ffffffffc0007620 g       .text_unmap	0000000000000000 ___KERNEL_UNMAP_START__
ffffffffc0005740 g       .text	0000000000000000 .refptr.asm_isr0
ffffffffc0002020 g       .text	0000000000000000 vm_reserve
ffffffffc0000400 g       .text	0000000000000000 _handle_apic_int
ffffffffc00046f0 g       .text	0000000000000000 .refptr.lock_init
ffffffffc0000341 g       .text	0000000000000000 asm_isr29
ffffffffc0000118 g       .text	0000000000000000 asm_apic_err_int
ffffffffc00001e6 g       .text	0000000000000000 asm_irq7
ffffffffc00002cc g       .text	0000000000000000 asm_isr16
ffffffffc00001c2 g       .text	0000000000000000 asm_irq1
ffffffffc0000150 g       .text	0000000000000000 asm_cpuid
ffffffffc0005090 g       .text	0000000000000000 .refptr.asm_irq14
ffffffffc00046a0 g       .text	0000000000000000 .refptr.setup_isr
ffffffffc00002b5 g       .text	0000000000000000 asm_isr13
ffffffffc00095a0 g       .text_unmap	0000000000000000 paging_init
ffffffffc0007388 g       .bss	0000000000000000 _tm_ptr
ffffffffc0007970 g       .text_unmap	0000000000000000 asm_ap_startup
ffffffffc0007ea0 g       .text_unmap	0000000000000000 acpi_free_data
ffffffffc0005e00 g       .text	0000000000000000 .refptr.asm_port_out32
ffffffffc00001fe g       .text	0000000000000000 asm_irq11
ffffffffc0007568 g       .bss	0000000000000000 _gfx_vmem
ffffffffc00007c0 g       .text	0000000000000000 unregiser_irq_handler
ffffffffc0004a40 g       .text	0000000000000000 .refptr.asm_apic_err_int
ffffffffc0006250 g       .text	0000000000000000 .refptr.realloc
ffffffffc0007308 g       .bss	0000000000000000 _apic_ptr
ffffffffc0006110 g       .text	0000000000000000 .refptr.hpet_timer_get_us
ffffffffc0004c90 g       .text	0000000000000000 .refptr.acpi_get_data
ffffffffc00075f8 g       .bss	0000000000000000 tl
ffffffffc0000380 g       .text	0000000000000000 asm_rdmsr
ffffffffc0006030 g       .text	0000000000000000 .refptr.paging_reverse_translate
ffffffffc0001dc0 g       .text	0000000000000000 paging_identity_unmap
ffffffffc0004c30 g       .text	0000000000000000 .refptr.asm_setup_ap_startup_code
ffffffffc0007e90 g       .text_unmap	0000000000000000 acpi_get_data
ffffffffc00056f0 g       .text	0000000000000000 .refptr.asm_isr5
ffffffffc0000360 g       .text	0000000000000000 asm_lock_acquire
ffffffffc00002ae g       .text	0000000000000000 asm_isr12
ffffffffc00002d5 g       .text	0000000000000000 asm_isr17
ffffffffc0000103 g       .text	0000000000000000 asm_apic_timer_int
ffffffffc00003b9 g       .text	0000000000000000 asm_port_out
ffffffffc00078e0 g       .text_unmap	0000000000000000 asm_apic_setup
ffffffffc000026c g       .text	0000000000000000 asm_isr0
ffffffffc0004650 g       .text	0000000000000000 .refptr.apic_init
ffffffffc0000070 g       .text	0000000000000000 thread1
ffffffffc0006260 g       .text	0000000000000000 FONT_SPLEEN_DATA
ffffffffc0001320 g       .text	0000000000000000 _console_vprintf_write_func
ffffffffc00075f0 g       .bss	0000000000000000 _nti
ffffffffc0000379 g       .text	0000000000000000 asm_lock_release
ffffffffc0002810 g       .text	0000000000000000 __vprintf_buffer_write_func
ffffffffc0001f80 g       .text	0000000000000000 _vm_pg_f_handler
ffffffffc0004610 g       .text	0000000000000000 .refptr.scheduler_init
ffffffffc00001d4 g       .text	0000000000000000 asm_irq4
ffffffffc00055f0 g       .text	0000000000000000 .refptr.asm_isr21
ffffffffc0007580 g       .bss	0000000000000000 _pg_t_pg
ffffffffc0007620 g       .text_unmap	0000000000000000 kmain
ffffffffc0007530 g       .bss	0000000000000000 _console_h
ffffffffc0001f40 g       .text	0000000000000000 pm_set_free
ffffffffc0000520 g       .text	0000000000000000 fatal_error
ffffffffc0005e80 g       .text	0000000000000000 .refptr.lock_create
ffffffffc00075a0 g       .bss	0000000000000000 _vm_dt
ffffffffc0000326 g       .text	0000000000000000 asm_isr26
ffffffffc0001bb0 g       .text	0000000000000000 paging_get_phys_pml4
ffffffffc00003c0 g       .text	0000000000000000 asm_port_out16
ffffffffc0007aff g       .text_unmap	0000000000000000 asm_cpu_setup_data
ffffffffc0005670 g       .text	0000000000000000 .refptr.asm_isr13
ffffffffc00075a8 g       .bss	0000000000000000 _n_va
ffffffffc0005590 g       .text	0000000000000000 .refptr.asm_isr27
ffffffffc00002aa g       .text	0000000000000000 asm_isr11
ffffffffc0000170 g       .text	0000000000000000 asm_halt_cpu
ffffffffc0005660 g       .text	0000000000000000 .refptr.asm_isr14
ffffffffc0009be0 g       .text_unmap	0000000000000000 ___KERNEL_UNMAP_END__
ffffffffc0004670 g       .text	0000000000000000 .refptr.pci_init
ffffffffc0007520 g       .bss	0000000000000000 _console_l
ffffffffc0005140 g       .text	0000000000000000 .refptr.asm_irq3
ffffffffc0005160 g       .text	0000000000000000 .refptr.asm_irq1
ffffffffc0005100 g       .text	0000000000000000 .refptr.asm_irq7
ffffffffc000027e g       .text	0000000000000000 asm_isr3
ffffffffc0007320 g       .bss	0000000000000000 cpu_info_data
ffffffffc0006050 g       .text	0000000000000000 .refptr.___KERNEL_BASE_VA__
ffffffffc0005560 g       .text	0000000000000000 .refptr.asm_isr30
ffffffffc0005e70 g       .text	0000000000000000 .refptr.gfx_print_char
ffffffffc00050d0 g       .text	0000000000000000 .refptr.asm_irq10
ffffffffc0007540 g       .bss	0000000000000000 _console_y
ffffffffc0004c70 g       .text	0000000000000000 .refptr.asm_current_cpu
ffffffffc0005180 g       .text	0000000000000000 .refptr.asm_port_out
ffffffffc0004c20 g       .text	0000000000000000 .refptr.apic_send_ipi
ffffffffc000029c g       .text	0000000000000000 asm_isr8
ffffffffc0005600 g       .text	0000000000000000 .refptr.asm_isr20
ffffffffc0002790 g       .text	0000000000000000 free
ffffffffc0004c10 g       .text	0000000000000000 .refptr.asm_setup_ap_startup_data
ffffffffc0005720 g       .text	0000000000000000 .refptr.asm_isr2



Disassembly of section .text:

ffffffffc0000000 <_start>:
ffffffffc0000000:	fa                   	cli    
ffffffffc0000001:	48 8b 61 78          	mov    0x78(%rcx),%rsp
ffffffffc0000005:	48 89 e5             	mov    %rsp,%rbp
ffffffffc0000008:	e8 13 76 00 00       	callq  ffffffffc0007620 <___KERNEL_UNMAP_START__>
ffffffffc000000d:	49 b8 20 76 00 c0 ff 	movabs $0xffffffffc0007620,%r8
ffffffffc0000014:	ff ff ff 
ffffffffc0000017:	49 b9 e0 9b 00 c0 ff 	movabs $0xffffffffc0009be0,%r9
ffffffffc000001e:	ff ff ff 
ffffffffc0000021:	48 31 c0             	xor    %rax,%rax
ffffffffc0000024:	4c 89 c9             	mov    %r9,%rcx
ffffffffc0000027:	4c 29 c1             	sub    %r8,%rcx
ffffffffc000002a:	48 c1 e9 03          	shr    $0x3,%rcx
ffffffffc000002e:	4c 89 c7             	mov    %r8,%rdi
ffffffffc0000031:	fc                   	cld    
ffffffffc0000032:	f3 48 ab             	rep stos %rax,%es:(%rdi)
ffffffffc0000035:	4c 89 c1             	mov    %r8,%rcx
ffffffffc0000038:	48 81 c1 ff 0f 00 00 	add    $0xfff,%rcx
ffffffffc000003f:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffffc0000043:	4c 89 ca             	mov    %r9,%rdx
ffffffffc0000046:	48 81 c2 ff 0f 00 00 	add    $0xfff,%rdx
ffffffffc000004d:	48 c1 ea 0c          	shr    $0xc,%rdx
ffffffffc0000051:	48 29 ca             	sub    %rcx,%rdx
ffffffffc0000054:	48 c1 e1 0c          	shl    $0xc,%rcx
ffffffffc0000058:	e8 c3 20 00 00       	callq  ffffffffc0002120 <vm_release>
ffffffffc000005d:	fb                   	sti    

ffffffffc000005e <_start._loop>:
ffffffffc000005e:	f4                   	hlt    
ffffffffc000005f:	eb fd                	jmp    ffffffffc000005e <_start._loop>
ffffffffc0000061:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffffc0000068:	00 00 00 
ffffffffc000006b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffffc0000070 <thread1>:
ffffffffc0000070:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0000075:	48 8d 0d 14 43 00 00 	lea    0x4314(%rip),%rcx        # ffffffffc0004390 <__asm_fill_zero+0x10>
ffffffffc000007c:	48 ff 25 bd 46 00 00 	rex.W jmpq *0x46bd(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0000083:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffffc000008a:	00 00 00 00 
ffffffffc000008e:	66 90                	xchg   %ax,%ax

ffffffffc0000090 <thread2>:
ffffffffc0000090:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0000095:	48 8d 0d fe 42 00 00 	lea    0x42fe(%rip),%rcx        # ffffffffc000439a <__asm_fill_zero+0x1a>
ffffffffc000009c:	48 ff 25 9d 46 00 00 	rex.W jmpq *0x469d(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc00000a3:	90                   	nop
ffffffffc00000a4:	90                   	nop
ffffffffc00000a5:	90                   	nop
ffffffffc00000a6:	90                   	nop
ffffffffc00000a7:	90                   	nop
ffffffffc00000a8:	90                   	nop
ffffffffc00000a9:	90                   	nop
ffffffffc00000aa:	90                   	nop
ffffffffc00000ab:	90                   	nop
ffffffffc00000ac:	90                   	nop
ffffffffc00000ad:	90                   	nop
ffffffffc00000ae:	90                   	nop
ffffffffc00000af:	90                   	nop

ffffffffc00000b0 <_asm_isr_h_call>:
ffffffffc00000b0:	9c                   	pushfq 
ffffffffc00000b1:	41 57                	push   %r15
ffffffffc00000b3:	41 56                	push   %r14
ffffffffc00000b5:	41 55                	push   %r13
ffffffffc00000b7:	41 54                	push   %r12
ffffffffc00000b9:	41 53                	push   %r11
ffffffffc00000bb:	41 52                	push   %r10
ffffffffc00000bd:	41 51                	push   %r9
ffffffffc00000bf:	41 50                	push   %r8
ffffffffc00000c1:	55                   	push   %rbp
ffffffffc00000c2:	57                   	push   %rdi
ffffffffc00000c3:	56                   	push   %rsi
ffffffffc00000c4:	52                   	push   %rdx
ffffffffc00000c5:	51                   	push   %rcx
ffffffffc00000c6:	53                   	push   %rbx
ffffffffc00000c7:	50                   	push   %rax
ffffffffc00000c8:	48 89 e1             	mov    %rsp,%rcx
ffffffffc00000cb:	e8 30 03 00 00       	callq  ffffffffc0000400 <_handle_apic_int>
ffffffffc00000d0:	65 48 8b 04 25 20 00 	mov    %gs:0x20,%rax
ffffffffc00000d7:	00 00 
ffffffffc00000d9:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%rax)
ffffffffc00000e0:	00 00 00 
ffffffffc00000e3:	58                   	pop    %rax
ffffffffc00000e4:	5b                   	pop    %rbx
ffffffffc00000e5:	59                   	pop    %rcx
ffffffffc00000e6:	5a                   	pop    %rdx
ffffffffc00000e7:	5e                   	pop    %rsi
ffffffffc00000e8:	5f                   	pop    %rdi
ffffffffc00000e9:	5d                   	pop    %rbp
ffffffffc00000ea:	41 58                	pop    %r8
ffffffffc00000ec:	41 59                	pop    %r9
ffffffffc00000ee:	41 5a                	pop    %r10
ffffffffc00000f0:	41 5b                	pop    %r11
ffffffffc00000f2:	41 5c                	pop    %r12
ffffffffc00000f4:	41 5d                	pop    %r13
ffffffffc00000f6:	41 5e                	pop    %r14
ffffffffc00000f8:	41 5f                	pop    %r15
ffffffffc00000fa:	9d                   	popfq  
ffffffffc00000fb:	48 83 c4 08          	add    $0x8,%rsp
ffffffffc00000ff:	48 cf                	iretq  

ffffffffc0000101 <asm_apic_spurious_int>:
ffffffffc0000101:	48 cf                	iretq  

ffffffffc0000103 <asm_apic_timer_int>:
ffffffffc0000103:	68 d1 00 00 00       	pushq  $0xd1
ffffffffc0000108:	eb a6                	jmp    ffffffffc00000b0 <_asm_isr_h_call>

ffffffffc000010a <asm_apic_lint0_int>:
ffffffffc000010a:	68 d2 00 00 00       	pushq  $0xd2
ffffffffc000010f:	eb 9f                	jmp    ffffffffc00000b0 <_asm_isr_h_call>

ffffffffc0000111 <asm_apic_lint1_int>:
ffffffffc0000111:	68 d3 00 00 00       	pushq  $0xd3
ffffffffc0000116:	eb 98                	jmp    ffffffffc00000b0 <_asm_isr_h_call>

ffffffffc0000118 <asm_apic_err_int>:
ffffffffc0000118:	68 d4 00 00 00       	pushq  $0xd4
ffffffffc000011d:	eb 91                	jmp    ffffffffc00000b0 <_asm_isr_h_call>
ffffffffc000011f:	90                   	nop

ffffffffc0000120 <_asm_ap_startup_kernel_wait>:
ffffffffc0000120:	ff 04 25 60 6b 00 c0 	incl   0xffffffffc0006b60
ffffffffc0000127:	eb 02                	jmp    ffffffffc000012b <_asm_ap_startup_kernel_wait._start_w>

ffffffffc0000129 <_asm_ap_startup_kernel_wait._w_loop>:
ffffffffc0000129:	f3 90                	pause  

ffffffffc000012b <_asm_ap_startup_kernel_wait._start_w>:
ffffffffc000012b:	80 3c 25 e0 75 00 c0 	cmpb   $0x1,0xffffffffc00075e0
ffffffffc0000132:	01 
ffffffffc0000133:	75 f4                	jne    ffffffffc0000129 <_asm_ap_startup_kernel_wait._w_loop>
ffffffffc0000135:	e8 c6 21 00 00       	callq  ffffffffc0002300 <scheduler_start>
ffffffffc000013a:	fb                   	sti    

ffffffffc000013b <_asm_ap_startup_kernel_wait._loop>:
ffffffffc000013b:	f4                   	hlt    
ffffffffc000013c:	eb fd                	jmp    ffffffffc000013b <_asm_ap_startup_kernel_wait._loop>
ffffffffc000013e:	66 90                	xchg   %ax,%ax

ffffffffc0000140 <asm_current_cpu>:
ffffffffc0000140:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
ffffffffc0000147:	00 00 
ffffffffc0000149:	c3                   	retq   
ffffffffc000014a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffffc0000150 <asm_cpuid>:
ffffffffc0000150:	53                   	push   %rbx
ffffffffc0000151:	48 89 c8             	mov    %rcx,%rax
ffffffffc0000154:	49 89 d0             	mov    %rdx,%r8
ffffffffc0000157:	0f a2                	cpuid  
ffffffffc0000159:	41 89 00             	mov    %eax,(%r8)
ffffffffc000015c:	41 89 58 04          	mov    %ebx,0x4(%r8)
ffffffffc0000160:	41 89 48 08          	mov    %ecx,0x8(%r8)
ffffffffc0000164:	41 89 50 0c          	mov    %edx,0xc(%r8)
ffffffffc0000168:	5b                   	pop    %rbx
ffffffffc0000169:	c3                   	retq   
ffffffffc000016a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffffc0000170 <asm_halt_cpu>:
ffffffffc0000170:	fa                   	cli    

ffffffffc0000171 <asm_halt_cpu._asm_l>:
ffffffffc0000171:	f4                   	hlt    
ffffffffc0000172:	eb fd                	jmp    ffffffffc0000171 <asm_halt_cpu._asm_l>
ffffffffc0000174:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffffc000017b:	00 00 00 
ffffffffc000017e:	66 90                	xchg   %ax,%ax

ffffffffc0000180 <_asm_irq_h_call>:
ffffffffc0000180:	41 57                	push   %r15
ffffffffc0000182:	41 56                	push   %r14
ffffffffc0000184:	41 55                	push   %r13
ffffffffc0000186:	41 54                	push   %r12
ffffffffc0000188:	41 53                	push   %r11
ffffffffc000018a:	41 52                	push   %r10
ffffffffc000018c:	41 51                	push   %r9
ffffffffc000018e:	41 50                	push   %r8
ffffffffc0000190:	55                   	push   %rbp
ffffffffc0000191:	57                   	push   %rdi
ffffffffc0000192:	56                   	push   %rsi
ffffffffc0000193:	52                   	push   %rdx
ffffffffc0000194:	51                   	push   %rcx
ffffffffc0000195:	53                   	push   %rbx
ffffffffc0000196:	50                   	push   %rax
ffffffffc0000197:	48 89 e1             	mov    %rsp,%rcx
ffffffffc000019a:	e8 b1 04 00 00       	callq  ffffffffc0000650 <_handle_irq>
ffffffffc000019f:	58                   	pop    %rax
ffffffffc00001a0:	5b                   	pop    %rbx
ffffffffc00001a1:	59                   	pop    %rcx
ffffffffc00001a2:	5a                   	pop    %rdx
ffffffffc00001a3:	5e                   	pop    %rsi
ffffffffc00001a4:	5f                   	pop    %rdi
ffffffffc00001a5:	5d                   	pop    %rbp
ffffffffc00001a6:	41 58                	pop    %r8
ffffffffc00001a8:	41 59                	pop    %r9
ffffffffc00001aa:	41 5a                	pop    %r10
ffffffffc00001ac:	41 5b                	pop    %r11
ffffffffc00001ae:	41 5c                	pop    %r12
ffffffffc00001b0:	41 5d                	pop    %r13
ffffffffc00001b2:	41 5e                	pop    %r14
ffffffffc00001b4:	41 5f                	pop    %r15
ffffffffc00001b6:	48 83 c4 10          	add    $0x10,%rsp
ffffffffc00001ba:	48 cf                	iretq  

ffffffffc00001bc <asm_irq0>:
ffffffffc00001bc:	6a 00                	pushq  $0x0
ffffffffc00001be:	6a 20                	pushq  $0x20
ffffffffc00001c0:	eb be                	jmp    ffffffffc0000180 <_asm_irq_h_call>

ffffffffc00001c2 <asm_irq1>:
ffffffffc00001c2:	6a 00                	pushq  $0x0
ffffffffc00001c4:	6a 21                	pushq  $0x21
ffffffffc00001c6:	eb b8                	jmp    ffffffffc0000180 <_asm_irq_h_call>

ffffffffc00001c8 <asm_irq2>:
ffffffffc00001c8:	6a 00                	pushq  $0x0
ffffffffc00001ca:	6a 22                	pushq  $0x22
ffffffffc00001cc:	eb b2                	jmp    ffffffffc0000180 <_asm_irq_h_call>

ffffffffc00001ce <asm_irq3>:
ffffffffc00001ce:	6a 00                	pushq  $0x0
ffffffffc00001d0:	6a 23                	pushq  $0x23
ffffffffc00001d2:	eb ac                	jmp    ffffffffc0000180 <_asm_irq_h_call>

ffffffffc00001d4 <asm_irq4>:
ffffffffc00001d4:	6a 00                	pushq  $0x0
ffffffffc00001d6:	6a 24                	pushq  $0x24
ffffffffc00001d8:	eb a6                	jmp    ffffffffc0000180 <_asm_irq_h_call>

ffffffffc00001da <asm_irq5>:
ffffffffc00001da:	6a 00                	pushq  $0x0
ffffffffc00001dc:	6a 25                	pushq  $0x25
ffffffffc00001de:	eb a0                	jmp    ffffffffc0000180 <_asm_irq_h_call>

ffffffffc00001e0 <asm_irq6>:
ffffffffc00001e0:	6a 00                	pushq  $0x0
ffffffffc00001e2:	6a 26                	pushq  $0x26
ffffffffc00001e4:	eb 9a                	jmp    ffffffffc0000180 <_asm_irq_h_call>

ffffffffc00001e6 <asm_irq7>:
ffffffffc00001e6:	6a 00                	pushq  $0x0
ffffffffc00001e8:	6a 27                	pushq  $0x27
ffffffffc00001ea:	eb 94                	jmp    ffffffffc0000180 <_asm_irq_h_call>

ffffffffc00001ec <asm_irq8>:
ffffffffc00001ec:	6a 00                	pushq  $0x0
ffffffffc00001ee:	6a 28                	pushq  $0x28
ffffffffc00001f0:	eb 8e                	jmp    ffffffffc0000180 <_asm_irq_h_call>

ffffffffc00001f2 <asm_irq9>:
ffffffffc00001f2:	6a 00                	pushq  $0x0
ffffffffc00001f4:	6a 29                	pushq  $0x29
ffffffffc00001f6:	eb 88                	jmp    ffffffffc0000180 <_asm_irq_h_call>

ffffffffc00001f8 <asm_irq10>:
ffffffffc00001f8:	6a 00                	pushq  $0x0
ffffffffc00001fa:	6a 2a                	pushq  $0x2a
ffffffffc00001fc:	eb 82                	jmp    ffffffffc0000180 <_asm_irq_h_call>

ffffffffc00001fe <asm_irq11>:
ffffffffc00001fe:	6a 00                	pushq  $0x0
ffffffffc0000200:	6a 2b                	pushq  $0x2b
ffffffffc0000202:	e9 79 ff ff ff       	jmpq   ffffffffc0000180 <_asm_irq_h_call>

ffffffffc0000207 <asm_irq12>:
ffffffffc0000207:	6a 00                	pushq  $0x0
ffffffffc0000209:	6a 2c                	pushq  $0x2c
ffffffffc000020b:	e9 70 ff ff ff       	jmpq   ffffffffc0000180 <_asm_irq_h_call>

ffffffffc0000210 <asm_irq13>:
ffffffffc0000210:	6a 00                	pushq  $0x0
ffffffffc0000212:	6a 2d                	pushq  $0x2d
ffffffffc0000214:	e9 67 ff ff ff       	jmpq   ffffffffc0000180 <_asm_irq_h_call>

ffffffffc0000219 <asm_irq14>:
ffffffffc0000219:	6a 00                	pushq  $0x0
ffffffffc000021b:	6a 2e                	pushq  $0x2e
ffffffffc000021d:	e9 5e ff ff ff       	jmpq   ffffffffc0000180 <_asm_irq_h_call>

ffffffffc0000222 <asm_irq15>:
ffffffffc0000222:	6a 00                	pushq  $0x0
ffffffffc0000224:	6a 2f                	pushq  $0x2f
ffffffffc0000226:	e9 55 ff ff ff       	jmpq   ffffffffc0000180 <_asm_irq_h_call>
ffffffffc000022b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffffc0000230 <_asm_isr_h_call>:
ffffffffc0000230:	41 57                	push   %r15
ffffffffc0000232:	41 56                	push   %r14
ffffffffc0000234:	41 55                	push   %r13
ffffffffc0000236:	41 54                	push   %r12
ffffffffc0000238:	41 53                	push   %r11
ffffffffc000023a:	41 52                	push   %r10
ffffffffc000023c:	41 51                	push   %r9
ffffffffc000023e:	41 50                	push   %r8
ffffffffc0000240:	55                   	push   %rbp
ffffffffc0000241:	57                   	push   %rdi
ffffffffc0000242:	56                   	push   %rsi
ffffffffc0000243:	52                   	push   %rdx
ffffffffc0000244:	51                   	push   %rcx
ffffffffc0000245:	53                   	push   %rbx
ffffffffc0000246:	50                   	push   %rax
ffffffffc0000247:	48 89 e1             	mov    %rsp,%rcx
ffffffffc000024a:	e8 91 05 00 00       	callq  ffffffffc00007e0 <_handle_isr>
ffffffffc000024f:	58                   	pop    %rax
ffffffffc0000250:	5b                   	pop    %rbx
ffffffffc0000251:	59                   	pop    %rcx
ffffffffc0000252:	5a                   	pop    %rdx
ffffffffc0000253:	5e                   	pop    %rsi
ffffffffc0000254:	5f                   	pop    %rdi
ffffffffc0000255:	5d                   	pop    %rbp
ffffffffc0000256:	41 58                	pop    %r8
ffffffffc0000258:	41 59                	pop    %r9
ffffffffc000025a:	41 5a                	pop    %r10
ffffffffc000025c:	41 5b                	pop    %r11
ffffffffc000025e:	41 5c                	pop    %r12
ffffffffc0000260:	41 5d                	pop    %r13
ffffffffc0000262:	41 5e                	pop    %r14
ffffffffc0000264:	41 5f                	pop    %r15
ffffffffc0000266:	48 83 c4 10          	add    $0x10,%rsp
ffffffffc000026a:	48 cf                	iretq  

ffffffffc000026c <asm_isr0>:
ffffffffc000026c:	6a 00                	pushq  $0x0
ffffffffc000026e:	6a 00                	pushq  $0x0
ffffffffc0000270:	eb be                	jmp    ffffffffc0000230 <_asm_isr_h_call>

ffffffffc0000272 <asm_isr1>:
ffffffffc0000272:	6a 00                	pushq  $0x0
ffffffffc0000274:	6a 01                	pushq  $0x1
ffffffffc0000276:	eb b8                	jmp    ffffffffc0000230 <_asm_isr_h_call>

ffffffffc0000278 <asm_isr2>:
ffffffffc0000278:	6a 00                	pushq  $0x0
ffffffffc000027a:	6a 02                	pushq  $0x2
ffffffffc000027c:	eb b2                	jmp    ffffffffc0000230 <_asm_isr_h_call>

ffffffffc000027e <asm_isr3>:
ffffffffc000027e:	6a 00                	pushq  $0x0
ffffffffc0000280:	6a 03                	pushq  $0x3
ffffffffc0000282:	eb ac                	jmp    ffffffffc0000230 <_asm_isr_h_call>

ffffffffc0000284 <asm_isr4>:
ffffffffc0000284:	6a 00                	pushq  $0x0
ffffffffc0000286:	6a 04                	pushq  $0x4
ffffffffc0000288:	eb a6                	jmp    ffffffffc0000230 <_asm_isr_h_call>

ffffffffc000028a <asm_isr5>:
ffffffffc000028a:	6a 00                	pushq  $0x0
ffffffffc000028c:	6a 05                	pushq  $0x5
ffffffffc000028e:	eb a0                	jmp    ffffffffc0000230 <_asm_isr_h_call>

ffffffffc0000290 <asm_isr6>:
ffffffffc0000290:	6a 00                	pushq  $0x0
ffffffffc0000292:	6a 06                	pushq  $0x6
ffffffffc0000294:	eb 9a                	jmp    ffffffffc0000230 <_asm_isr_h_call>

ffffffffc0000296 <asm_isr7>:
ffffffffc0000296:	6a 00                	pushq  $0x0
ffffffffc0000298:	6a 07                	pushq  $0x7
ffffffffc000029a:	eb 94                	jmp    ffffffffc0000230 <_asm_isr_h_call>

ffffffffc000029c <asm_isr8>:
ffffffffc000029c:	6a 08                	pushq  $0x8
ffffffffc000029e:	eb 90                	jmp    ffffffffc0000230 <_asm_isr_h_call>

ffffffffc00002a0 <asm_isr9>:
ffffffffc00002a0:	6a 00                	pushq  $0x0
ffffffffc00002a2:	6a 09                	pushq  $0x9
ffffffffc00002a4:	eb 8a                	jmp    ffffffffc0000230 <_asm_isr_h_call>

ffffffffc00002a6 <asm_isr10>:
ffffffffc00002a6:	6a 0a                	pushq  $0xa
ffffffffc00002a8:	eb 86                	jmp    ffffffffc0000230 <_asm_isr_h_call>

ffffffffc00002aa <asm_isr11>:
ffffffffc00002aa:	6a 0b                	pushq  $0xb
ffffffffc00002ac:	eb 82                	jmp    ffffffffc0000230 <_asm_isr_h_call>

ffffffffc00002ae <asm_isr12>:
ffffffffc00002ae:	6a 0c                	pushq  $0xc
ffffffffc00002b0:	e9 7b ff ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc00002b5 <asm_isr13>:
ffffffffc00002b5:	6a 0d                	pushq  $0xd
ffffffffc00002b7:	e9 74 ff ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc00002bc <asm_isr14>:
ffffffffc00002bc:	6a 0e                	pushq  $0xe
ffffffffc00002be:	e9 6d ff ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc00002c3 <asm_isr15>:
ffffffffc00002c3:	6a 00                	pushq  $0x0
ffffffffc00002c5:	6a 0f                	pushq  $0xf
ffffffffc00002c7:	e9 64 ff ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc00002cc <asm_isr16>:
ffffffffc00002cc:	6a 00                	pushq  $0x0
ffffffffc00002ce:	6a 10                	pushq  $0x10
ffffffffc00002d0:	e9 5b ff ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc00002d5 <asm_isr17>:
ffffffffc00002d5:	6a 00                	pushq  $0x0
ffffffffc00002d7:	6a 11                	pushq  $0x11
ffffffffc00002d9:	e9 52 ff ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc00002de <asm_isr18>:
ffffffffc00002de:	6a 00                	pushq  $0x0
ffffffffc00002e0:	6a 12                	pushq  $0x12
ffffffffc00002e2:	e9 49 ff ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc00002e7 <asm_isr19>:
ffffffffc00002e7:	6a 00                	pushq  $0x0
ffffffffc00002e9:	6a 13                	pushq  $0x13
ffffffffc00002eb:	e9 40 ff ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc00002f0 <asm_isr20>:
ffffffffc00002f0:	6a 00                	pushq  $0x0
ffffffffc00002f2:	6a 14                	pushq  $0x14
ffffffffc00002f4:	e9 37 ff ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc00002f9 <asm_isr21>:
ffffffffc00002f9:	6a 00                	pushq  $0x0
ffffffffc00002fb:	6a 15                	pushq  $0x15
ffffffffc00002fd:	e9 2e ff ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc0000302 <asm_isr22>:
ffffffffc0000302:	6a 00                	pushq  $0x0
ffffffffc0000304:	6a 16                	pushq  $0x16
ffffffffc0000306:	e9 25 ff ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc000030b <asm_isr23>:
ffffffffc000030b:	6a 00                	pushq  $0x0
ffffffffc000030d:	6a 17                	pushq  $0x17
ffffffffc000030f:	e9 1c ff ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc0000314 <asm_isr24>:
ffffffffc0000314:	6a 00                	pushq  $0x0
ffffffffc0000316:	6a 18                	pushq  $0x18
ffffffffc0000318:	e9 13 ff ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc000031d <asm_isr25>:
ffffffffc000031d:	6a 00                	pushq  $0x0
ffffffffc000031f:	6a 19                	pushq  $0x19
ffffffffc0000321:	e9 0a ff ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc0000326 <asm_isr26>:
ffffffffc0000326:	6a 00                	pushq  $0x0
ffffffffc0000328:	6a 1a                	pushq  $0x1a
ffffffffc000032a:	e9 01 ff ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc000032f <asm_isr27>:
ffffffffc000032f:	6a 00                	pushq  $0x0
ffffffffc0000331:	6a 1b                	pushq  $0x1b
ffffffffc0000333:	e9 f8 fe ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc0000338 <asm_isr28>:
ffffffffc0000338:	6a 00                	pushq  $0x0
ffffffffc000033a:	6a 1c                	pushq  $0x1c
ffffffffc000033c:	e9 ef fe ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc0000341 <asm_isr29>:
ffffffffc0000341:	6a 00                	pushq  $0x0
ffffffffc0000343:	6a 1d                	pushq  $0x1d
ffffffffc0000345:	e9 e6 fe ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc000034a <asm_isr30>:
ffffffffc000034a:	6a 00                	pushq  $0x0
ffffffffc000034c:	6a 1e                	pushq  $0x1e
ffffffffc000034e:	e9 dd fe ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>

ffffffffc0000353 <asm_isr31>:
ffffffffc0000353:	6a 00                	pushq  $0x0
ffffffffc0000355:	6a 1f                	pushq  $0x1f
ffffffffc0000357:	e9 d4 fe ff ff       	jmpq   ffffffffc0000230 <_asm_isr_h_call>
ffffffffc000035c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffffc0000360 <asm_lock_acquire>:
ffffffffc0000360:	48 31 c0             	xor    %rax,%rax
ffffffffc0000363:	b2 01                	mov    $0x1,%dl
ffffffffc0000365:	eb 05                	jmp    ffffffffc000036c <asm_lock_acquire._start>

ffffffffc0000367 <asm_lock_acquire._loop>:
ffffffffc0000367:	e8 c4 1f 00 00       	callq  ffffffffc0002330 <scheduler_yield>

ffffffffc000036c <asm_lock_acquire._start>:
ffffffffc000036c:	88 01                	mov    %al,(%rcx)
ffffffffc000036e:	84 c0                	test   %al,%al
ffffffffc0000370:	75 f5                	jne    ffffffffc0000367 <asm_lock_acquire._loop>
ffffffffc0000372:	f0 0f b0 11          	lock cmpxchg %dl,(%rcx)
ffffffffc0000376:	75 ef                	jne    ffffffffc0000367 <asm_lock_acquire._loop>
ffffffffc0000378:	c3                   	retq   

ffffffffc0000379 <asm_lock_release>:
ffffffffc0000379:	c6 01 00             	movb   $0x0,(%rcx)
ffffffffc000037c:	c3                   	retq   
ffffffffc000037d:	0f 1f 00             	nopl   (%rax)

ffffffffc0000380 <asm_rdmsr>:
ffffffffc0000380:	0f 32                	rdmsr  
ffffffffc0000382:	48 c1 e2 20          	shl    $0x20,%rdx
ffffffffc0000386:	48 09 d0             	or     %rdx,%rax
ffffffffc0000389:	c3                   	retq   

ffffffffc000038a <asm_wrmsr>:
ffffffffc000038a:	48 31 c0             	xor    %rax,%rax
ffffffffc000038d:	89 d0                	mov    %edx,%eax
ffffffffc000038f:	48 c1 ea 20          	shr    $0x20,%rdx
ffffffffc0000393:	0f 30                	wrmsr  
ffffffffc0000395:	c3                   	retq   
ffffffffc0000396:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffffc000039d:	00 00 00 

ffffffffc00003a0 <asm_port_in>:
ffffffffc00003a0:	48 31 c0             	xor    %rax,%rax
ffffffffc00003a3:	66 89 ca             	mov    %cx,%dx
ffffffffc00003a6:	ec                   	in     (%dx),%al
ffffffffc00003a7:	c3                   	retq   

ffffffffc00003a8 <asm_port_in16>:
ffffffffc00003a8:	48 31 c0             	xor    %rax,%rax
ffffffffc00003ab:	66 89 ca             	mov    %cx,%dx
ffffffffc00003ae:	66 ed                	in     (%dx),%ax
ffffffffc00003b0:	c3                   	retq   

ffffffffc00003b1 <asm_port_in32>:
ffffffffc00003b1:	48 31 c0             	xor    %rax,%rax
ffffffffc00003b4:	66 89 ca             	mov    %cx,%dx
ffffffffc00003b7:	ed                   	in     (%dx),%eax
ffffffffc00003b8:	c3                   	retq   

ffffffffc00003b9 <asm_port_out>:
ffffffffc00003b9:	88 d0                	mov    %dl,%al
ffffffffc00003bb:	66 89 ca             	mov    %cx,%dx
ffffffffc00003be:	ee                   	out    %al,(%dx)
ffffffffc00003bf:	c3                   	retq   

ffffffffc00003c0 <asm_port_out16>:
ffffffffc00003c0:	66 89 d0             	mov    %dx,%ax
ffffffffc00003c3:	66 89 ca             	mov    %cx,%dx
ffffffffc00003c6:	66 ef                	out    %ax,(%dx)
ffffffffc00003c8:	c3                   	retq   

ffffffffc00003c9 <asm_port_out32>:
ffffffffc00003c9:	89 d0                	mov    %edx,%eax
ffffffffc00003cb:	66 89 ca             	mov    %cx,%dx
ffffffffc00003ce:	ef                   	out    %eax,(%dx)
ffffffffc00003cf:	c3                   	retq   

ffffffffc00003d0 <asm_clear_thread_data>:
ffffffffc00003d0:	57                   	push   %rdi
ffffffffc00003d1:	48 31 c0             	xor    %rax,%rax
ffffffffc00003d4:	48 89 cf             	mov    %rcx,%rdi
ffffffffc00003d7:	b9 14 00 00 00       	mov    $0x14,%ecx
ffffffffc00003dc:	f3 48 ab             	rep stos %rax,%es:(%rdi)
ffffffffc00003df:	5f                   	pop    %rdi
ffffffffc00003e0:	c3                   	retq   
ffffffffc00003e1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffffc00003e8:	00 00 00 
ffffffffc00003eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffffc00003f0 <asm_get_cr2>:
ffffffffc00003f0:	0f 20 d0             	mov    %cr2,%rax
ffffffffc00003f3:	c3                   	retq   
ffffffffc00003f4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffffc00003fb:	00 00 00 
ffffffffc00003fe:	66 90                	xchg   %ax,%ax

ffffffffc0000400 <_handle_apic_int>:
ffffffffc0000400:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
ffffffffc0000407:	48 8b 81 80 00 00 00 	mov    0x80(%rcx),%rax
ffffffffc000040e:	48 3d d1 00 00 00    	cmp    $0xd1,%rax
ffffffffc0000414:	0f 84 b6 00 00 00    	je     ffffffffc00004d0 <_handle_apic_int+0xd0>
ffffffffc000041a:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
ffffffffc0000421:	00 
ffffffffc0000422:	48 8b 41 78          	mov    0x78(%rcx),%rax
ffffffffc0000426:	ba 1b bf e3 00       	mov    $0xe3bf1b,%edx
ffffffffc000042b:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
ffffffffc0000432:	00 
ffffffffc0000433:	48 8b 41 70          	mov    0x70(%rcx),%rax
ffffffffc0000437:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
ffffffffc000043e:	00 
ffffffffc000043f:	48 8b 41 68          	mov    0x68(%rcx),%rax
ffffffffc0000443:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffffc0000448:	48 8b 41 60          	mov    0x60(%rcx),%rax
ffffffffc000044c:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
ffffffffc0000451:	48 8b 41 58          	mov    0x58(%rcx),%rax
ffffffffc0000455:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
ffffffffc000045a:	48 8b 41 50          	mov    0x50(%rcx),%rax
ffffffffc000045e:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
ffffffffc0000463:	48 8b 41 48          	mov    0x48(%rcx),%rax
ffffffffc0000467:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffffc000046c:	48 8b 41 40          	mov    0x40(%rcx),%rax
ffffffffc0000470:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
ffffffffc0000475:	48 8b 41 38          	mov    0x38(%rcx),%rax
ffffffffc0000479:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
ffffffffc000047e:	48 8b 41 30          	mov    0x30(%rcx),%rax
ffffffffc0000482:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
ffffffffc0000487:	48 8b 41 28          	mov    0x28(%rcx),%rax
ffffffffc000048b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffffc0000490:	48 8b 41 20          	mov    0x20(%rcx),%rax
ffffffffc0000494:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
ffffffffc0000499:	48 8b 41 18          	mov    0x18(%rcx),%rax
ffffffffc000049d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffffc00004a2:	48 8b 41 10          	mov    0x10(%rcx),%rax
ffffffffc00004a6:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc00004ab:	4c 8b 49 08          	mov    0x8(%rcx),%r9
ffffffffc00004af:	4c 8b 01             	mov    (%rcx),%r8
ffffffffc00004b2:	48 8d 0d 17 44 00 00 	lea    0x4417(%rip),%rcx        # ffffffffc00048d0 <.refptr.vm_commit+0x10>
ffffffffc00004b9:	ff 15 11 42 00 00    	callq  *0x4211(%rip)        # ffffffffc00046d0 <.refptr._console_vprint>
ffffffffc00004bf:	90                   	nop
ffffffffc00004c0:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
ffffffffc00004c7:	c3                   	retq   
ffffffffc00004c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffffc00004cf:	00 
ffffffffc00004d0:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
ffffffffc00004d7:	48 ff 25 52 45 00 00 	rex.W jmpq *0x4552(%rip)        # ffffffffc0004a30 <.refptr.scheduler_yield>
ffffffffc00004de:	66 90                	xchg   %ax,%ax

ffffffffc00004e0 <apic_send_ipi>:
ffffffffc00004e0:	8b 81 00 03 00 00    	mov    0x300(%rcx),%eax
ffffffffc00004e6:	f6 c4 10             	test   $0x10,%ah
ffffffffc00004e9:	74 12                	je     ffffffffc00004fd <apic_send_ipi+0x1d>
ffffffffc00004eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc00004f0:	f3 90                	pause  
ffffffffc00004f2:	8b 81 00 03 00 00    	mov    0x300(%rcx),%eax
ffffffffc00004f8:	f6 c4 10             	test   $0x10,%ah
ffffffffc00004fb:	75 f3                	jne    ffffffffc00004f0 <apic_send_ipi+0x10>
ffffffffc00004fd:	0f b7 d2             	movzwl %dx,%edx
ffffffffc0000500:	45 0f b6 c0          	movzbl %r8b,%r8d
ffffffffc0000504:	41 c1 e1 18          	shl    $0x18,%r9d
ffffffffc0000508:	c1 e2 08             	shl    $0x8,%edx
ffffffffc000050b:	44 89 89 10 03 00 00 	mov    %r9d,0x310(%rcx)
ffffffffc0000512:	44 09 c2             	or     %r8d,%edx
ffffffffc0000515:	89 91 00 03 00 00    	mov    %edx,0x300(%rcx)
ffffffffc000051b:	c3                   	retq   
ffffffffc000051c:	90                   	nop
ffffffffc000051d:	90                   	nop
ffffffffc000051e:	90                   	nop
ffffffffc000051f:	90                   	nop

ffffffffc0000520 <fatal_error>:
ffffffffc0000520:	48 83 ec 28          	sub    $0x28,%rsp
ffffffffc0000524:	ba 15 23 dc 00       	mov    $0xdc2315,%edx
ffffffffc0000529:	ff 15 11 42 00 00    	callq  *0x4211(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc000052f:	90                   	nop
ffffffffc0000530:	48 83 c4 28          	add    $0x28,%rsp
ffffffffc0000534:	48 ff 25 25 49 00 00 	rex.W jmpq *0x4925(%rip)        # ffffffffc0004e60 <.refptr.asm_halt_cpu>
ffffffffc000053b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffffc0000540 <fatal_error_line>:
ffffffffc0000540:	48 83 ec 48          	sub    $0x48,%rsp
ffffffffc0000544:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc0000549:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
ffffffffc000054e:	48 8d 0d eb 48 00 00 	lea    0x48eb(%rip),%rcx        # ffffffffc0004e40 <.refptr.asm_cpuid+0x10>
ffffffffc0000555:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
ffffffffc000055a:	45 89 c1             	mov    %r8d,%r9d
ffffffffc000055d:	49 89 d0             	mov    %rdx,%r8
ffffffffc0000560:	ba 15 23 dc 00       	mov    $0xdc2315,%edx
ffffffffc0000565:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffffc000056a:	ff 15 60 41 00 00    	callq  *0x4160(%rip)        # ffffffffc00046d0 <.refptr._console_vprint>
ffffffffc0000570:	90                   	nop
ffffffffc0000571:	48 83 c4 48          	add    $0x48,%rsp
ffffffffc0000575:	48 ff 25 e4 48 00 00 	rex.W jmpq *0x48e4(%rip)        # ffffffffc0004e60 <.refptr.asm_halt_cpu>
ffffffffc000057c:	90                   	nop
ffffffffc000057d:	90                   	nop
ffffffffc000057e:	90                   	nop
ffffffffc000057f:	90                   	nop

ffffffffc0000580 <_hpet_timer_irq_cb>:
ffffffffc0000580:	31 d2                	xor    %edx,%edx
ffffffffc0000582:	48 b8 00 10 a5 d4 e8 	movabs $0xe8d4a51000,%rax
ffffffffc0000589:	00 00 00 
ffffffffc000058c:	48 f7 35 ed 6d 00 00 	divq   0x6ded(%rip)        # ffffffffc0007380 <_tm_p>
ffffffffc0000593:	48 8b 15 ee 6d 00 00 	mov    0x6dee(%rip),%rdx        # ffffffffc0007388 <_tm_ptr>
ffffffffc000059a:	48 89 82 08 01 00 00 	mov    %rax,0x108(%rdx)
ffffffffc00005a1:	c3                   	retq   
ffffffffc00005a2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffffc00005a9:	00 00 00 00 
ffffffffc00005ad:	0f 1f 00             	nopl   (%rax)

ffffffffc00005b0 <hpet_timer_get_us>:
ffffffffc00005b0:	48 8b 05 d1 6d 00 00 	mov    0x6dd1(%rip),%rax        # ffffffffc0007388 <_tm_ptr>
ffffffffc00005b7:	31 d2                	xor    %edx,%edx
ffffffffc00005b9:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
ffffffffc00005c0:	48 f7 35 29 66 00 00 	divq   0x6629(%rip)        # ffffffffc0006bf0 <_tm_us_r>
ffffffffc00005c7:	c3                   	retq   
ffffffffc00005c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffffc00005cf:	00 

ffffffffc00005d0 <hpet_timer_spinwait>:
ffffffffc00005d0:	4c 8b 0d b1 6d 00 00 	mov    0x6db1(%rip),%r9        # ffffffffc0007388 <_tm_ptr>
ffffffffc00005d7:	4c 8b 05 12 66 00 00 	mov    0x6612(%rip),%r8        # ffffffffc0006bf0 <_tm_us_r>
ffffffffc00005de:	31 d2                	xor    %edx,%edx
ffffffffc00005e0:	49 8b 81 f0 00 00 00 	mov    0xf0(%r9),%rax
ffffffffc00005e7:	49 f7 f0             	div    %r8
ffffffffc00005ea:	31 d2                	xor    %edx,%edx
ffffffffc00005ec:	48 01 c1             	add    %rax,%rcx
ffffffffc00005ef:	49 8b 81 f0 00 00 00 	mov    0xf0(%r9),%rax
ffffffffc00005f6:	49 f7 f0             	div    %r8
ffffffffc00005f9:	48 39 c1             	cmp    %rax,%rcx
ffffffffc00005fc:	76 20                	jbe    ffffffffc000061e <hpet_timer_spinwait+0x4e>
ffffffffc00005fe:	66 90                	xchg   %ax,%ax
ffffffffc0000600:	f3 90                	pause  
ffffffffc0000602:	48 8b 15 7f 6d 00 00 	mov    0x6d7f(%rip),%rdx        # ffffffffc0007388 <_tm_ptr>
ffffffffc0000609:	48 8b 82 f0 00 00 00 	mov    0xf0(%rdx),%rax
ffffffffc0000610:	31 d2                	xor    %edx,%edx
ffffffffc0000612:	48 f7 35 d7 65 00 00 	divq   0x65d7(%rip)        # ffffffffc0006bf0 <_tm_us_r>
ffffffffc0000619:	48 39 c8             	cmp    %rcx,%rax
ffffffffc000061c:	72 e2                	jb     ffffffffc0000600 <hpet_timer_spinwait+0x30>
ffffffffc000061e:	c3                   	retq   
ffffffffc000061f:	90                   	nop

ffffffffc0000620 <set_idt_entry>:
ffffffffc0000620:	0f b6 c9             	movzbl %cl,%ecx
ffffffffc0000623:	48 89 d0             	mov    %rdx,%rax
ffffffffc0000626:	48 c1 e1 04          	shl    $0x4,%rcx
ffffffffc000062a:	48 03 0d 5f 6d 00 00 	add    0x6d5f(%rip),%rcx        # ffffffffc0007390 <idt_l>
ffffffffc0000631:	48 c1 e8 10          	shr    $0x10,%rax
ffffffffc0000635:	66 89 11             	mov    %dx,(%rcx)
ffffffffc0000638:	48 c1 ea 20          	shr    $0x20,%rdx
ffffffffc000063c:	66 44 89 41 02       	mov    %r8w,0x2(%rcx)
ffffffffc0000641:	44 88 49 05          	mov    %r9b,0x5(%rcx)
ffffffffc0000645:	66 89 41 06          	mov    %ax,0x6(%rcx)
ffffffffc0000649:	89 51 08             	mov    %edx,0x8(%rcx)
ffffffffc000064c:	c3                   	retq   
ffffffffc000064d:	90                   	nop
ffffffffc000064e:	90                   	nop
ffffffffc000064f:	90                   	nop

ffffffffc0000650 <_handle_irq>:
ffffffffc0000650:	53                   	push   %rbx
ffffffffc0000651:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
ffffffffc0000658:	48 8d 05 41 6d 00 00 	lea    0x6d41(%rip),%rax        # ffffffffc00073a0 <irq_hl>
ffffffffc000065f:	48 8b 51 78          	mov    0x78(%rcx),%rdx
ffffffffc0000663:	48 8b 84 d0 00 ff ff 	mov    -0x100(%rax,%rdx,8),%rax
ffffffffc000066a:	ff 
ffffffffc000066b:	48 89 cb             	mov    %rcx,%rbx
ffffffffc000066e:	48 85 c0             	test   %rax,%rax
ffffffffc0000671:	74 3d                	je     ffffffffc00006b0 <_handle_irq+0x60>
ffffffffc0000673:	ff d0                	callq  *%rax
ffffffffc0000675:	48 83 7b 78 27       	cmpq   $0x27,0x78(%rbx)
ffffffffc000067a:	77 1c                	ja     ffffffffc0000698 <_handle_irq+0x48>
ffffffffc000067c:	ba 20 00 00 00       	mov    $0x20,%edx
ffffffffc0000681:	b9 20 00 00 00       	mov    $0x20,%ecx
ffffffffc0000686:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
ffffffffc000068d:	5b                   	pop    %rbx
ffffffffc000068e:	48 ff 25 eb 4a 00 00 	rex.W jmpq *0x4aeb(%rip)        # ffffffffc0005180 <.refptr.asm_port_out>
ffffffffc0000695:	0f 1f 00             	nopl   (%rax)
ffffffffc0000698:	ba 20 00 00 00       	mov    $0x20,%edx
ffffffffc000069d:	b9 a0 00 00 00       	mov    $0xa0,%ecx
ffffffffc00006a2:	ff 15 d8 4a 00 00    	callq  *0x4ad8(%rip)        # ffffffffc0005180 <.refptr.asm_port_out>
ffffffffc00006a8:	eb d2                	jmp    ffffffffc000067c <_handle_irq+0x2c>
ffffffffc00006aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc00006b0:	48 8b 81 a8 00 00 00 	mov    0xa8(%rcx),%rax
ffffffffc00006b7:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
ffffffffc00006be:	00 
ffffffffc00006bf:	48 8b 81 a0 00 00 00 	mov    0xa0(%rcx),%rax
ffffffffc00006c6:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
ffffffffc00006cd:	00 
ffffffffc00006ce:	48 8b 81 98 00 00 00 	mov    0x98(%rcx),%rax
ffffffffc00006d5:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
ffffffffc00006dc:	00 
ffffffffc00006dd:	48 8b 81 90 00 00 00 	mov    0x90(%rcx),%rax
ffffffffc00006e4:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
ffffffffc00006eb:	00 
ffffffffc00006ec:	48 8b 81 88 00 00 00 	mov    0x88(%rcx),%rax
ffffffffc00006f3:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
ffffffffc00006fa:	00 
ffffffffc00006fb:	48 8b 81 80 00 00 00 	mov    0x80(%rcx),%rax
ffffffffc0000702:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
ffffffffc0000709:	00 
ffffffffc000070a:	ba 1b bf e3 00       	mov    $0xe3bf1b,%edx
ffffffffc000070f:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
ffffffffc0000716:	00 
ffffffffc0000717:	48 8b 41 70          	mov    0x70(%rcx),%rax
ffffffffc000071b:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
ffffffffc0000722:	00 
ffffffffc0000723:	48 8b 41 68          	mov    0x68(%rcx),%rax
ffffffffc0000727:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffffc000072c:	48 8b 41 60          	mov    0x60(%rcx),%rax
ffffffffc0000730:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
ffffffffc0000735:	48 8b 41 58          	mov    0x58(%rcx),%rax
ffffffffc0000739:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
ffffffffc000073e:	48 8b 41 50          	mov    0x50(%rcx),%rax
ffffffffc0000742:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
ffffffffc0000747:	48 8b 41 48          	mov    0x48(%rcx),%rax
ffffffffc000074b:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffffc0000750:	48 8b 41 40          	mov    0x40(%rcx),%rax
ffffffffc0000754:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
ffffffffc0000759:	48 8b 41 38          	mov    0x38(%rcx),%rax
ffffffffc000075d:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
ffffffffc0000762:	48 8b 41 30          	mov    0x30(%rcx),%rax
ffffffffc0000766:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
ffffffffc000076b:	48 8b 41 28          	mov    0x28(%rcx),%rax
ffffffffc000076f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffffc0000774:	48 8b 41 20          	mov    0x20(%rcx),%rax
ffffffffc0000778:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
ffffffffc000077d:	48 8b 41 18          	mov    0x18(%rcx),%rax
ffffffffc0000781:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffffc0000786:	48 8b 41 10          	mov    0x10(%rcx),%rax
ffffffffc000078a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc000078f:	4c 8b 49 08          	mov    0x8(%rcx),%r9
ffffffffc0000793:	4c 8b 01             	mov    (%rcx),%r8
ffffffffc0000796:	48 8d 0d 23 47 00 00 	lea    0x4723(%rip),%rcx        # ffffffffc0004ec0 <.refptr.asm_setup_idt+0x10>
ffffffffc000079d:	ff 15 2d 3f 00 00    	callq  *0x3f2d(%rip)        # ffffffffc00046d0 <.refptr._console_vprint>
ffffffffc00007a3:	e9 cd fe ff ff       	jmpq   ffffffffc0000675 <_handle_irq+0x25>
ffffffffc00007a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffffc00007af:	00 

ffffffffc00007b0 <regiser_irq_handler>:
ffffffffc00007b0:	48 8d 05 e9 6b 00 00 	lea    0x6be9(%rip),%rax        # ffffffffc00073a0 <irq_hl>
ffffffffc00007b7:	0f b6 c9             	movzbl %cl,%ecx
ffffffffc00007ba:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
ffffffffc00007be:	c3                   	retq   
ffffffffc00007bf:	90                   	nop

ffffffffc00007c0 <unregiser_irq_handler>:
ffffffffc00007c0:	48 8d 05 d9 6b 00 00 	lea    0x6bd9(%rip),%rax        # ffffffffc00073a0 <irq_hl>
ffffffffc00007c7:	0f b6 c9             	movzbl %cl,%ecx
ffffffffc00007ca:	48 c7 04 c8 00 00 00 	movq   $0x0,(%rax,%rcx,8)
ffffffffc00007d1:	00 
ffffffffc00007d2:	c3                   	retq   
ffffffffc00007d3:	90                   	nop
ffffffffc00007d4:	90                   	nop
ffffffffc00007d5:	90                   	nop
ffffffffc00007d6:	90                   	nop
ffffffffc00007d7:	90                   	nop
ffffffffc00007d8:	90                   	nop
ffffffffc00007d9:	90                   	nop
ffffffffc00007da:	90                   	nop
ffffffffc00007db:	90                   	nop
ffffffffc00007dc:	90                   	nop
ffffffffc00007dd:	90                   	nop
ffffffffc00007de:	90                   	nop
ffffffffc00007df:	90                   	nop

ffffffffc00007e0 <_handle_isr>:
ffffffffc00007e0:	53                   	push   %rbx
ffffffffc00007e1:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
ffffffffc00007e8:	48 8d 05 31 6c 00 00 	lea    0x6c31(%rip),%rax        # ffffffffc0007420 <isr_hl>
ffffffffc00007ef:	48 8b 51 78          	mov    0x78(%rcx),%rdx
ffffffffc00007f3:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffffc00007f7:	48 89 cb             	mov    %rcx,%rbx
ffffffffc00007fa:	48 85 c0             	test   %rax,%rax
ffffffffc00007fd:	74 0e                	je     ffffffffc000080d <_handle_isr+0x2d>
ffffffffc00007ff:	ff d0                	callq  *%rax
ffffffffc0000801:	84 c0                	test   %al,%al
ffffffffc0000803:	0f 85 99 01 00 00    	jne    ffffffffc00009a2 <_handle_isr+0x1c2>
ffffffffc0000809:	48 8b 53 78          	mov    0x78(%rbx),%rdx
ffffffffc000080d:	0f 20 c0             	mov    %cr0,%rax
ffffffffc0000810:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
ffffffffc0000817:	00 
ffffffffc0000818:	0f 20 d0             	mov    %cr2,%rax
ffffffffc000081b:	48 89 84 24 00 01 00 	mov    %rax,0x100(%rsp)
ffffffffc0000822:	00 
ffffffffc0000823:	0f 20 d8             	mov    %cr3,%rax
ffffffffc0000826:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
ffffffffc000082d:	00 
ffffffffc000082e:	0f 20 e0             	mov    %cr4,%rax
ffffffffc0000831:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
ffffffffc0000838:	00 
ffffffffc0000839:	44 0f 20 c0          	mov    %cr8,%rax
ffffffffc000083d:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
ffffffffc0000844:	00 
ffffffffc0000845:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
ffffffffc000084c:	00 
ffffffffc000084d:	48 8d 0d 3c 49 00 00 	lea    0x493c(%rip),%rcx        # ffffffffc0005190 <.refptr.asm_port_out+0x10>
ffffffffc0000854:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
ffffffffc000085b:	00 
ffffffffc000085c:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
ffffffffc0000863:	00 
ffffffffc0000864:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
ffffffffc000086b:	00 
ffffffffc000086c:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
ffffffffc0000873:	00 
ffffffffc0000874:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
ffffffffc000087b:	00 
ffffffffc000087c:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
ffffffffc0000883:	00 
ffffffffc0000884:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
ffffffffc000088b:	00 
ffffffffc000088c:	48 8b 84 24 f8 00 00 	mov    0xf8(%rsp),%rax
ffffffffc0000893:	00 
ffffffffc0000894:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
ffffffffc000089b:	00 
ffffffffc000089c:	48 8b 83 a8 00 00 00 	mov    0xa8(%rbx),%rax
ffffffffc00008a3:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
ffffffffc00008aa:	00 
ffffffffc00008ab:	48 8b 83 a0 00 00 00 	mov    0xa0(%rbx),%rax
ffffffffc00008b2:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
ffffffffc00008b9:	00 
ffffffffc00008ba:	48 8b 83 98 00 00 00 	mov    0x98(%rbx),%rax
ffffffffc00008c1:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
ffffffffc00008c8:	00 
ffffffffc00008c9:	48 8b 83 90 00 00 00 	mov    0x90(%rbx),%rax
ffffffffc00008d0:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
ffffffffc00008d7:	00 
ffffffffc00008d8:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
ffffffffc00008df:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
ffffffffc00008e6:	00 
ffffffffc00008e7:	48 8b 83 80 00 00 00 	mov    0x80(%rbx),%rax
ffffffffc00008ee:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
ffffffffc00008f5:	00 
ffffffffc00008f6:	48 8d 05 e3 63 00 00 	lea    0x63e3(%rip),%rax        # ffffffffc0006ce0 <_f_msg>
ffffffffc00008fd:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffffc0000901:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
ffffffffc0000908:	00 
ffffffffc0000909:	ba 15 23 dc 00       	mov    $0xdc2315,%edx
ffffffffc000090e:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
ffffffffc0000915:	00 
ffffffffc0000916:	48 8b 43 70          	mov    0x70(%rbx),%rax
ffffffffc000091a:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
ffffffffc0000921:	00 
ffffffffc0000922:	48 8b 43 68          	mov    0x68(%rbx),%rax
ffffffffc0000926:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffffc000092b:	48 8b 43 60          	mov    0x60(%rbx),%rax
ffffffffc000092f:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
ffffffffc0000934:	48 8b 43 58          	mov    0x58(%rbx),%rax
ffffffffc0000938:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
ffffffffc000093d:	48 8b 43 50          	mov    0x50(%rbx),%rax
ffffffffc0000941:	4c 8b 4b 08          	mov    0x8(%rbx),%r9
ffffffffc0000945:	4c 8b 03             	mov    (%rbx),%r8
ffffffffc0000948:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
ffffffffc000094d:	48 8b 43 48          	mov    0x48(%rbx),%rax
ffffffffc0000951:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffffc0000956:	48 8b 43 40          	mov    0x40(%rbx),%rax
ffffffffc000095a:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
ffffffffc000095f:	48 8b 43 38          	mov    0x38(%rbx),%rax
ffffffffc0000963:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
ffffffffc0000968:	48 8b 43 30          	mov    0x30(%rbx),%rax
ffffffffc000096c:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
ffffffffc0000971:	48 8b 43 28          	mov    0x28(%rbx),%rax
ffffffffc0000975:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffffc000097a:	48 8b 43 20          	mov    0x20(%rbx),%rax
ffffffffc000097e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
ffffffffc0000983:	48 8b 43 18          	mov    0x18(%rbx),%rax
ffffffffc0000987:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffffc000098c:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffffc0000990:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc0000995:	ff 15 35 3d 00 00    	callq  *0x3d35(%rip)        # ffffffffc00046d0 <.refptr._console_vprint>
ffffffffc000099b:	ff 15 bf 44 00 00    	callq  *0x44bf(%rip)        # ffffffffc0004e60 <.refptr.asm_halt_cpu>
ffffffffc00009a1:	90                   	nop
ffffffffc00009a2:	48 81 c4 20 01 00 00 	add    $0x120,%rsp
ffffffffc00009a9:	5b                   	pop    %rbx
ffffffffc00009aa:	c3                   	retq   
ffffffffc00009ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffffc00009b0 <regiser_isr_handler>:
ffffffffc00009b0:	48 8d 05 69 6a 00 00 	lea    0x6a69(%rip),%rax        # ffffffffc0007420 <isr_hl>
ffffffffc00009b7:	0f b6 c9             	movzbl %cl,%ecx
ffffffffc00009ba:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
ffffffffc00009be:	c3                   	retq   
ffffffffc00009bf:	90                   	nop

ffffffffc00009c0 <unregiser_isr_handler>:
ffffffffc00009c0:	48 8d 05 59 6a 00 00 	lea    0x6a59(%rip),%rax        # ffffffffc0007420 <isr_hl>
ffffffffc00009c7:	0f b6 c9             	movzbl %cl,%ecx
ffffffffc00009ca:	48 c7 04 c8 00 00 00 	movq   $0x0,(%rax,%rcx,8)
ffffffffc00009d1:	00 
ffffffffc00009d2:	c3                   	retq   
ffffffffc00009d3:	90                   	nop
ffffffffc00009d4:	90                   	nop
ffffffffc00009d5:	90                   	nop
ffffffffc00009d6:	90                   	nop
ffffffffc00009d7:	90                   	nop
ffffffffc00009d8:	90                   	nop
ffffffffc00009d9:	90                   	nop
ffffffffc00009da:	90                   	nop
ffffffffc00009db:	90                   	nop
ffffffffc00009dc:	90                   	nop
ffffffffc00009dd:	90                   	nop
ffffffffc00009de:	90                   	nop
ffffffffc00009df:	90                   	nop

ffffffffc00009e0 <pci_init>:
ffffffffc00009e0:	41 57                	push   %r15
ffffffffc00009e2:	41 56                	push   %r14
ffffffffc00009e4:	41 55                	push   %r13
ffffffffc00009e6:	41 54                	push   %r12
ffffffffc00009e8:	55                   	push   %rbp
ffffffffc00009e9:	57                   	push   %rdi
ffffffffc00009ea:	56                   	push   %rsi
ffffffffc00009eb:	53                   	push   %rbx
ffffffffc00009ec:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
ffffffffc00009f3:	48 8d 05 e5 4d 00 00 	lea    0x4de5(%rip),%rax        # ffffffffc00057df <.refptr.asm_isr0+0x9f>
ffffffffc00009fa:	48 8b 3d ff 53 00 00 	mov    0x53ff(%rip),%rdi        # ffffffffc0005e00 <.refptr.asm_port_out32>
ffffffffc0000a01:	4c 8b 3d e8 53 00 00 	mov    0x53e8(%rip),%r15        # ffffffffc0005df0 <.refptr.asm_port_in32>
ffffffffc0000a08:	4c 8d 35 41 52 00 00 	lea    0x5241(%rip),%r14        # ffffffffc0005c50 <.refptr.asm_isr0+0x510>
ffffffffc0000a0f:	c7 44 24 78 00 00 00 	movl   $0x0,0x78(%rsp)
ffffffffc0000a16:	00 
ffffffffc0000a17:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
ffffffffc0000a1c:	8b 44 24 78          	mov    0x78(%rsp),%eax
ffffffffc0000a20:	45 31 ed             	xor    %r13d,%r13d
ffffffffc0000a23:	c1 e0 10             	shl    $0x10,%eax
ffffffffc0000a26:	89 44 24 7c          	mov    %eax,0x7c(%rsp)
ffffffffc0000a2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc0000a30:	45 89 ec             	mov    %r13d,%r12d
ffffffffc0000a33:	31 f6                	xor    %esi,%esi
ffffffffc0000a35:	41 c1 e4 0b          	shl    $0xb,%r12d
ffffffffc0000a39:	44 0b 64 24 7c       	or     0x7c(%rsp),%r12d
ffffffffc0000a3e:	66 90                	xchg   %ax,%ax
ffffffffc0000a40:	89 f3                	mov    %esi,%ebx
ffffffffc0000a42:	b9 f8 0c 00 00       	mov    $0xcf8,%ecx
ffffffffc0000a47:	c1 e3 08             	shl    $0x8,%ebx
ffffffffc0000a4a:	44 09 e3             	or     %r12d,%ebx
ffffffffc0000a4d:	89 da                	mov    %ebx,%edx
ffffffffc0000a4f:	81 ca 00 00 00 80    	or     $0x80000000,%edx
ffffffffc0000a55:	ff d7                	callq  *%rdi
ffffffffc0000a57:	b9 fc 0c 00 00       	mov    $0xcfc,%ecx
ffffffffc0000a5c:	41 ff d7             	callq  *%r15
ffffffffc0000a5f:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffffc0000a62:	0f 84 40 01 00 00    	je     ffffffffc0000ba8 <pci_init+0x1c8>
ffffffffc0000a68:	89 da                	mov    %ebx,%edx
ffffffffc0000a6a:	b9 f8 0c 00 00       	mov    $0xcf8,%ecx
ffffffffc0000a6f:	81 ca 04 00 00 80    	or     $0x80000004,%edx
ffffffffc0000a75:	ff d7                	callq  *%rdi
ffffffffc0000a77:	b9 fc 0c 00 00       	mov    $0xcfc,%ecx
ffffffffc0000a7c:	41 ff d7             	callq  *%r15
ffffffffc0000a7f:	89 da                	mov    %ebx,%edx
ffffffffc0000a81:	b9 f8 0c 00 00       	mov    $0xcf8,%ecx
ffffffffc0000a86:	81 cb 0c 00 00 80    	or     $0x8000000c,%ebx
ffffffffc0000a8c:	81 ca 08 00 00 80    	or     $0x80000008,%edx
ffffffffc0000a92:	ff d7                	callq  *%rdi
ffffffffc0000a94:	b9 fc 0c 00 00       	mov    $0xcfc,%ecx
ffffffffc0000a99:	41 ff d7             	callq  *%r15
ffffffffc0000a9c:	89 da                	mov    %ebx,%edx
ffffffffc0000a9e:	b9 f8 0c 00 00       	mov    $0xcf8,%ecx
ffffffffc0000aa3:	41 89 c0             	mov    %eax,%r8d
ffffffffc0000aa6:	41 89 c1             	mov    %eax,%r9d
ffffffffc0000aa9:	89 c5                	mov    %eax,%ebp
ffffffffc0000aab:	41 c1 e9 10          	shr    $0x10,%r9d
ffffffffc0000aaf:	41 c1 e8 18          	shr    $0x18,%r8d
ffffffffc0000ab3:	44 89 4c 24 6c       	mov    %r9d,0x6c(%rsp)
ffffffffc0000ab8:	c1 ed 08             	shr    $0x8,%ebp
ffffffffc0000abb:	44 89 44 24 68       	mov    %r8d,0x68(%rsp)
ffffffffc0000ac0:	ff d7                	callq  *%rdi
ffffffffc0000ac2:	b9 fc 0c 00 00       	mov    $0xcfc,%ecx
ffffffffc0000ac7:	41 ff d7             	callq  *%r15
ffffffffc0000aca:	44 8b 44 24 68       	mov    0x68(%rsp),%r8d
ffffffffc0000acf:	44 8b 4c 24 6c       	mov    0x6c(%rsp),%r9d
ffffffffc0000ad4:	41 80 f8 08          	cmp    $0x8,%r8b
ffffffffc0000ad8:	0f 87 b2 05 00 00    	ja     ffffffffc0001090 <pci_init+0x6b0>
ffffffffc0000ade:	41 0f b6 c0          	movzbl %r8b,%eax
ffffffffc0000ae2:	49 8b 0c c6          	mov    (%r14,%rax,8),%rcx
ffffffffc0000ae6:	4c 01 f1             	add    %r14,%rcx
ffffffffc0000ae9:	ff e1                	jmpq   *%rcx
ffffffffc0000aeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0000af0:	41 80 f9 05          	cmp    $0x5,%r9b
ffffffffc0000af4:	0f 87 31 05 00 00    	ja     ffffffffc000102b <pci_init+0x64b>
ffffffffc0000afa:	48 8d 1d 97 51 00 00 	lea    0x5197(%rip),%rbx        # ffffffffc0005c98 <.refptr.asm_isr0+0x558>
ffffffffc0000b01:	41 0f b6 c1          	movzbl %r9b,%eax
ffffffffc0000b05:	48 8b 0c c3          	mov    (%rbx,%rax,8),%rcx
ffffffffc0000b09:	48 01 d9             	add    %rbx,%rcx
ffffffffc0000b0c:	ff e1                	jmpq   *%rcx
ffffffffc0000b0e:	66 90                	xchg   %ax,%ax
ffffffffc0000b10:	41 80 f9 0a          	cmp    $0xa,%r9b
ffffffffc0000b14:	0f 87 5d 05 00 00    	ja     ffffffffc0001077 <pci_init+0x697>
ffffffffc0000b1a:	48 8d 1d a7 51 00 00 	lea    0x51a7(%rip),%rbx        # ffffffffc0005cc8 <.refptr.asm_isr0+0x588>
ffffffffc0000b21:	41 0f b6 c1          	movzbl %r9b,%eax
ffffffffc0000b25:	48 8b 0c c3          	mov    (%rbx,%rax,8),%rcx
ffffffffc0000b29:	48 01 d9             	add    %rbx,%rcx
ffffffffc0000b2c:	ff e1                	jmpq   *%rcx
ffffffffc0000b2e:	66 90                	xchg   %ax,%ax
ffffffffc0000b30:	48 8d 05 4d 4f 00 00 	lea    0x4f4d(%rip),%rax        # ffffffffc0005a84 <.refptr.asm_isr0+0x344>
ffffffffc0000b37:	48 8d 15 6d 4c 00 00 	lea    0x4c6d(%rip),%rdx        # ffffffffc00057ab <.refptr.asm_isr0+0x6b>
ffffffffc0000b3e:	45 84 c9             	test   %r9b,%r9b
ffffffffc0000b41:	74 1d                	je     ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000b43:	41 80 f9 01          	cmp    $0x1,%r9b
ffffffffc0000b47:	48 8d 05 4c 4c 00 00 	lea    0x4c4c(%rip),%rax        # ffffffffc000579a <.refptr.asm_isr0+0x5a>
ffffffffc0000b4e:	48 8d 0d 8a 4c 00 00 	lea    0x4c8a(%rip),%rcx        # ffffffffc00057df <.refptr.asm_isr0+0x9f>
ffffffffc0000b55:	48 0f 45 c1          	cmovne %rcx,%rax
ffffffffc0000b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0000b60:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
ffffffffc0000b65:	45 0f b6 c9          	movzbl %r9b,%r9d
ffffffffc0000b69:	40 0f b6 ed          	movzbl %bpl,%ebp
ffffffffc0000b6d:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
ffffffffc0000b72:	44 89 4c 24 38       	mov    %r9d,0x38(%rsp)
ffffffffc0000b77:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0000b7c:	45 89 e9             	mov    %r13d,%r9d
ffffffffc0000b7f:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
ffffffffc0000b84:	48 8d 0d 3d 50 00 00 	lea    0x503d(%rip),%rcx        # ffffffffc0005bc8 <.refptr.asm_isr0+0x488>
ffffffffc0000b8b:	44 89 44 24 28       	mov    %r8d,0x28(%rsp)
ffffffffc0000b90:	44 8b 44 24 78       	mov    0x78(%rsp),%r8d
ffffffffc0000b95:	89 6c 24 48          	mov    %ebp,0x48(%rsp)
ffffffffc0000b99:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
ffffffffc0000b9e:	89 74 24 20          	mov    %esi,0x20(%rsp)
ffffffffc0000ba2:	ff 15 28 3b 00 00    	callq  *0x3b28(%rip)        # ffffffffc00046d0 <.refptr._console_vprint>
ffffffffc0000ba8:	83 c6 01             	add    $0x1,%esi
ffffffffc0000bab:	83 fe 08             	cmp    $0x8,%esi
ffffffffc0000bae:	0f 85 8c fe ff ff    	jne    ffffffffc0000a40 <pci_init+0x60>
ffffffffc0000bb4:	41 83 c5 01          	add    $0x1,%r13d
ffffffffc0000bb8:	41 83 fd 20          	cmp    $0x20,%r13d
ffffffffc0000bbc:	0f 85 6e fe ff ff    	jne    ffffffffc0000a30 <pci_init+0x50>
ffffffffc0000bc2:	83 44 24 78 01       	addl   $0x1,0x78(%rsp)
ffffffffc0000bc7:	8b 44 24 78          	mov    0x78(%rsp),%eax
ffffffffc0000bcb:	3d ff 00 00 00       	cmp    $0xff,%eax
ffffffffc0000bd0:	0f 85 46 fe ff ff    	jne    ffffffffc0000a1c <pci_init+0x3c>
ffffffffc0000bd6:	eb fe                	jmp    ffffffffc0000bd6 <pci_init+0x1f6>
ffffffffc0000bd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffffc0000bdf:	00 
ffffffffc0000be0:	48 8d 05 67 4e 00 00 	lea    0x4e67(%rip),%rax        # ffffffffc0005a4e <.refptr.asm_isr0+0x30e>
ffffffffc0000be7:	48 8d 15 00 4c 00 00 	lea    0x4c00(%rip),%rdx        # ffffffffc00057ee <.refptr.asm_isr0+0xae>
ffffffffc0000bee:	41 80 f9 02          	cmp    $0x2,%r9b
ffffffffc0000bf2:	0f 84 68 ff ff ff    	je     ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000bf8:	0f 87 12 04 00 00    	ja     ffffffffc0001010 <pci_init+0x630>
ffffffffc0000bfe:	45 84 c9             	test   %r9b,%r9b
ffffffffc0000c01:	48 8d 05 10 4e 00 00 	lea    0x4e10(%rip),%rax        # ffffffffc0005a18 <.refptr.asm_isr0+0x2d8>
ffffffffc0000c08:	48 8d 0d 59 4e 00 00 	lea    0x4e59(%rip),%rcx        # ffffffffc0005a68 <.refptr.asm_isr0+0x328>
ffffffffc0000c0f:	48 0f 45 c1          	cmovne %rcx,%rax
ffffffffc0000c13:	e9 48 ff ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000c18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffffc0000c1f:	00 
ffffffffc0000c20:	41 80 f9 08          	cmp    $0x8,%r9b
ffffffffc0000c24:	0f 87 3a 04 00 00    	ja     ffffffffc0001064 <pci_init+0x684>
ffffffffc0000c2a:	48 8d 1d ef 50 00 00 	lea    0x50ef(%rip),%rbx        # ffffffffc0005d20 <.refptr.asm_isr0+0x5e0>
ffffffffc0000c31:	41 0f b6 c1          	movzbl %r9b,%eax
ffffffffc0000c35:	48 8b 0c c3          	mov    (%rbx,%rax,8),%rcx
ffffffffc0000c39:	48 01 d9             	add    %rbx,%rcx
ffffffffc0000c3c:	ff e1                	jmpq   *%rcx
ffffffffc0000c3e:	66 90                	xchg   %ax,%ax
ffffffffc0000c40:	41 80 f9 06          	cmp    $0x6,%r9b
ffffffffc0000c44:	0f 87 07 04 00 00    	ja     ffffffffc0001051 <pci_init+0x671>
ffffffffc0000c4a:	48 8d 1d 17 51 00 00 	lea    0x5117(%rip),%rbx        # ffffffffc0005d68 <.refptr.asm_isr0+0x628>
ffffffffc0000c51:	41 0f b6 c1          	movzbl %r9b,%eax
ffffffffc0000c55:	48 8b 0c c3          	mov    (%rbx,%rax,8),%rcx
ffffffffc0000c59:	48 01 d9             	add    %rbx,%rcx
ffffffffc0000c5c:	ff e1                	jmpq   *%rcx
ffffffffc0000c5e:	66 90                	xchg   %ax,%ax
ffffffffc0000c60:	48 8d 05 56 4b 00 00 	lea    0x4b56(%rip),%rax        # ffffffffc00057bd <.refptr.asm_isr0+0x7d>
ffffffffc0000c67:	48 8d 15 5e 4b 00 00 	lea    0x4b5e(%rip),%rdx        # ffffffffc00057cc <.refptr.asm_isr0+0x8c>
ffffffffc0000c6e:	41 80 f9 01          	cmp    $0x1,%r9b
ffffffffc0000c72:	0f 84 e8 fe ff ff    	je     ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000c78:	48 8d 05 8b 4d 00 00 	lea    0x4d8b(%rip),%rax        # ffffffffc0005a0a <.refptr.asm_isr0+0x2ca>
ffffffffc0000c7f:	41 80 f9 02          	cmp    $0x2,%r9b
ffffffffc0000c83:	0f 84 d7 fe ff ff    	je     ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000c89:	45 84 c9             	test   %r9b,%r9b
ffffffffc0000c8c:	48 8d 05 a1 4d 00 00 	lea    0x4da1(%rip),%rax        # ffffffffc0005a34 <.refptr.asm_isr0+0x2f4>
ffffffffc0000c93:	48 8d 0d 45 4b 00 00 	lea    0x4b45(%rip),%rcx        # ffffffffc00057df <.refptr.asm_isr0+0x9f>
ffffffffc0000c9a:	48 0f 45 c1          	cmovne %rcx,%rax
ffffffffc0000c9e:	e9 bd fe ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000ca3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0000ca8:	48 8d 05 e1 4b 00 00 	lea    0x4be1(%rip),%rax        # ffffffffc0005890 <.refptr.asm_isr0+0x150>
ffffffffc0000caf:	48 8d 15 91 4b 00 00 	lea    0x4b91(%rip),%rdx        # ffffffffc0005847 <.refptr.asm_isr0+0x107>
ffffffffc0000cb6:	45 84 c9             	test   %r9b,%r9b
ffffffffc0000cb9:	0f 84 a1 fe ff ff    	je     ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000cbf:	41 80 f9 01          	cmp    $0x1,%r9b
ffffffffc0000cc3:	48 8d 05 66 4b 00 00 	lea    0x4b66(%rip),%rax        # ffffffffc0005830 <.refptr.asm_isr0+0xf0>
ffffffffc0000cca:	48 8d 0d 0e 4b 00 00 	lea    0x4b0e(%rip),%rcx        # ffffffffc00057df <.refptr.asm_isr0+0x9f>
ffffffffc0000cd1:	48 0f 45 c1          	cmovne %rcx,%rax
ffffffffc0000cd5:	e9 86 fe ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000cda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc0000ce0:	41 80 f9 08          	cmp    $0x8,%r9b
ffffffffc0000ce4:	0f 87 54 03 00 00    	ja     ffffffffc000103e <pci_init+0x65e>
ffffffffc0000cea:	48 8d 1d af 50 00 00 	lea    0x50af(%rip),%rbx        # ffffffffc0005da0 <.refptr.asm_isr0+0x660>
ffffffffc0000cf1:	41 0f b6 c1          	movzbl %r9b,%eax
ffffffffc0000cf5:	48 8b 0c c3          	mov    (%rbx,%rax,8),%rcx
ffffffffc0000cf9:	48 01 d9             	add    %rbx,%rcx
ffffffffc0000cfc:	ff e1                	jmpq   *%rcx
ffffffffc0000cfe:	48 8d 05 e5 4d 00 00 	lea    0x4de5(%rip),%rax        # ffffffffc0005aea <.refptr.asm_isr0+0x3aa>
ffffffffc0000d05:	48 8d 15 7c 4a 00 00 	lea    0x4a7c(%rip),%rdx        # ffffffffc0005788 <.refptr.asm_isr0+0x48>
ffffffffc0000d0c:	e9 4f fe ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000d11:	48 8d 05 40 4b 00 00 	lea    0x4b40(%rip),%rax        # ffffffffc0005858 <.refptr.asm_isr0+0x118>
ffffffffc0000d18:	48 8d 15 51 4b 00 00 	lea    0x4b51(%rip),%rdx        # ffffffffc0005870 <.refptr.asm_isr0+0x130>
ffffffffc0000d1f:	e9 3c fe ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000d24:	48 8d 05 f3 4d 00 00 	lea    0x4df3(%rip),%rax        # ffffffffc0005b1e <.refptr.asm_isr0+0x3de>
ffffffffc0000d2b:	48 8d 15 3e 4b 00 00 	lea    0x4b3e(%rip),%rdx        # ffffffffc0005870 <.refptr.asm_isr0+0x130>
ffffffffc0000d32:	e9 29 fe ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000d37:	48 8d 05 17 4e 00 00 	lea    0x4e17(%rip),%rax        # ffffffffc0005b55 <.refptr.asm_isr0+0x415>
ffffffffc0000d3e:	48 8d 15 2b 4b 00 00 	lea    0x4b2b(%rip),%rdx        # ffffffffc0005870 <.refptr.asm_isr0+0x130>
ffffffffc0000d45:	e9 16 fe ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000d4a:	48 8d 05 20 4e 00 00 	lea    0x4e20(%rip),%rax        # ffffffffc0005b71 <.refptr.asm_isr0+0x431>
ffffffffc0000d51:	48 8d 15 18 4b 00 00 	lea    0x4b18(%rip),%rdx        # ffffffffc0005870 <.refptr.asm_isr0+0x130>
ffffffffc0000d58:	e9 03 fe ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000d5d:	48 8d 05 cc 4d 00 00 	lea    0x4dcc(%rip),%rax        # ffffffffc0005b30 <.refptr.asm_isr0+0x3f0>
ffffffffc0000d64:	48 8d 15 05 4b 00 00 	lea    0x4b05(%rip),%rdx        # ffffffffc0005870 <.refptr.asm_isr0+0x130>
ffffffffc0000d6b:	e9 f0 fd ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000d70:	48 8d 05 d8 4d 00 00 	lea    0x4dd8(%rip),%rax        # ffffffffc0005b4f <.refptr.asm_isr0+0x40f>
ffffffffc0000d77:	48 8d 15 f2 4a 00 00 	lea    0x4af2(%rip),%rdx        # ffffffffc0005870 <.refptr.asm_isr0+0x130>
ffffffffc0000d7e:	e9 dd fd ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000d83:	48 8d 05 ca 4a 00 00 	lea    0x4aca(%rip),%rax        # ffffffffc0005854 <.refptr.asm_isr0+0x114>
ffffffffc0000d8a:	48 8d 15 ce 49 00 00 	lea    0x49ce(%rip),%rdx        # ffffffffc000575f <.refptr.asm_isr0+0x1f>
ffffffffc0000d91:	e9 ca fd ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000d96:	48 8d 05 e8 4d 00 00 	lea    0x4de8(%rip),%rax        # ffffffffc0005b85 <.refptr.asm_isr0+0x445>
ffffffffc0000d9d:	48 8d 15 bb 49 00 00 	lea    0x49bb(%rip),%rdx        # ffffffffc000575f <.refptr.asm_isr0+0x1f>
ffffffffc0000da4:	e9 b7 fd ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000da9:	48 8d 05 c6 49 00 00 	lea    0x49c6(%rip),%rax        # ffffffffc0005776 <.refptr.asm_isr0+0x36>
ffffffffc0000db0:	48 8d 15 a8 49 00 00 	lea    0x49a8(%rip),%rdx        # ffffffffc000575f <.refptr.asm_isr0+0x1f>
ffffffffc0000db7:	e9 a4 fd ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000dbc:	48 8d 05 8d 49 00 00 	lea    0x498d(%rip),%rax        # ffffffffc0005750 <.refptr.asm_isr0+0x10>
ffffffffc0000dc3:	48 8d 15 95 49 00 00 	lea    0x4995(%rip),%rdx        # ffffffffc000575f <.refptr.asm_isr0+0x1f>
ffffffffc0000dca:	e9 91 fd ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000dcf:	48 8d 05 b5 4d 00 00 	lea    0x4db5(%rip),%rax        # ffffffffc0005b8b <.refptr.asm_isr0+0x44b>
ffffffffc0000dd6:	48 8d 15 82 49 00 00 	lea    0x4982(%rip),%rdx        # ffffffffc000575f <.refptr.asm_isr0+0x1f>
ffffffffc0000ddd:	e9 7e fd ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000de2:	48 8d 05 b5 4d 00 00 	lea    0x4db5(%rip),%rax        # ffffffffc0005b9e <.refptr.asm_isr0+0x45e>
ffffffffc0000de9:	48 8d 15 6f 49 00 00 	lea    0x496f(%rip),%rdx        # ffffffffc000575f <.refptr.asm_isr0+0x1f>
ffffffffc0000df0:	e9 6b fd ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000df5:	48 8d 05 ba 4d 00 00 	lea    0x4dba(%rip),%rax        # ffffffffc0005bb6 <.refptr.asm_isr0+0x476>
ffffffffc0000dfc:	48 8d 15 5c 49 00 00 	lea    0x495c(%rip),%rdx        # ffffffffc000575f <.refptr.asm_isr0+0x1f>
ffffffffc0000e03:	e9 58 fd ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000e08:	48 8d 05 f5 49 00 00 	lea    0x49f5(%rip),%rax        # ffffffffc0005804 <.refptr.asm_isr0+0xc4>
ffffffffc0000e0f:	48 8d 15 02 4a 00 00 	lea    0x4a02(%rip),%rdx        # ffffffffc0005818 <.refptr.asm_isr0+0xd8>
ffffffffc0000e16:	e9 45 fd ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000e1b:	48 8d 05 d4 4b 00 00 	lea    0x4bd4(%rip),%rax        # ffffffffc00059f6 <.refptr.asm_isr0+0x2b6>
ffffffffc0000e22:	48 8d 15 30 4b 00 00 	lea    0x4b30(%rip),%rdx        # ffffffffc0005959 <.refptr.asm_isr0+0x219>
ffffffffc0000e29:	e9 32 fd ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000e2e:	48 8d 05 12 4b 00 00 	lea    0x4b12(%rip),%rax        # ffffffffc0005947 <.refptr.asm_isr0+0x207>
ffffffffc0000e35:	48 8d 15 1d 4b 00 00 	lea    0x4b1d(%rip),%rdx        # ffffffffc0005959 <.refptr.asm_isr0+0x219>
ffffffffc0000e3c:	e9 1f fd ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000e41:	48 8d 05 88 4b 00 00 	lea    0x4b88(%rip),%rax        # ffffffffc00059d0 <.refptr.asm_isr0+0x290>
ffffffffc0000e48:	48 8d 15 0a 4b 00 00 	lea    0x4b0a(%rip),%rdx        # ffffffffc0005959 <.refptr.asm_isr0+0x219>
ffffffffc0000e4f:	e9 0c fd ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000e54:	48 8d 05 85 4b 00 00 	lea    0x4b85(%rip),%rax        # ffffffffc00059e0 <.refptr.asm_isr0+0x2a0>
ffffffffc0000e5b:	48 8d 15 f7 4a 00 00 	lea    0x4af7(%rip),%rdx        # ffffffffc0005959 <.refptr.asm_isr0+0x219>
ffffffffc0000e62:	e9 f9 fc ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000e67:	48 8d 05 42 4a 00 00 	lea    0x4a42(%rip),%rax        # ffffffffc00058b0 <.refptr.asm_isr0+0x170>
ffffffffc0000e6e:	48 8d 15 a3 49 00 00 	lea    0x49a3(%rip),%rdx        # ffffffffc0005818 <.refptr.asm_isr0+0xd8>
ffffffffc0000e75:	e9 e6 fc ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000e7a:	48 8d 05 a0 4a 00 00 	lea    0x4aa0(%rip),%rax        # ffffffffc0005921 <.refptr.asm_isr0+0x1e1>
ffffffffc0000e81:	48 8d 15 90 49 00 00 	lea    0x4990(%rip),%rdx        # ffffffffc0005818 <.refptr.asm_isr0+0xd8>
ffffffffc0000e88:	e9 d3 fc ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000e8d:	48 8d 05 a4 4a 00 00 	lea    0x4aa4(%rip),%rax        # ffffffffc0005938 <.refptr.asm_isr0+0x1f8>
ffffffffc0000e94:	48 8d 15 7d 49 00 00 	lea    0x497d(%rip),%rdx        # ffffffffc0005818 <.refptr.asm_isr0+0xd8>
ffffffffc0000e9b:	e9 c0 fc ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000ea0:	48 8d 05 3d 4a 00 00 	lea    0x4a3d(%rip),%rax        # ffffffffc00058e4 <.refptr.asm_isr0+0x1a4>
ffffffffc0000ea7:	48 8d 15 6a 49 00 00 	lea    0x496a(%rip),%rdx        # ffffffffc0005818 <.refptr.asm_isr0+0xd8>
ffffffffc0000eae:	e9 ad fc ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000eb3:	48 8d 05 35 4a 00 00 	lea    0x4a35(%rip),%rax        # ffffffffc00058ef <.refptr.asm_isr0+0x1af>
ffffffffc0000eba:	48 8d 15 57 49 00 00 	lea    0x4957(%rip),%rdx        # ffffffffc0005818 <.refptr.asm_isr0+0xd8>
ffffffffc0000ec1:	e9 9a fc ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000ec6:	48 8d 05 31 4a 00 00 	lea    0x4a31(%rip),%rax        # ffffffffc00058fe <.refptr.asm_isr0+0x1be>
ffffffffc0000ecd:	48 8d 15 44 49 00 00 	lea    0x4944(%rip),%rdx        # ffffffffc0005818 <.refptr.asm_isr0+0xd8>
ffffffffc0000ed4:	e9 87 fc ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000ed9:	48 8d 05 2e 4a 00 00 	lea    0x4a2e(%rip),%rax        # ffffffffc000590e <.refptr.asm_isr0+0x1ce>
ffffffffc0000ee0:	48 8d 15 31 49 00 00 	lea    0x4931(%rip),%rdx        # ffffffffc0005818 <.refptr.asm_isr0+0xd8>
ffffffffc0000ee7:	e9 74 fc ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000eec:	48 8d 05 dc 49 00 00 	lea    0x49dc(%rip),%rax        # ffffffffc00058cf <.refptr.asm_isr0+0x18f>
ffffffffc0000ef3:	48 8d 15 1e 49 00 00 	lea    0x491e(%rip),%rdx        # ffffffffc0005818 <.refptr.asm_isr0+0xd8>
ffffffffc0000efa:	e9 61 fc ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000eff:	48 8d 05 7c 4a 00 00 	lea    0x4a7c(%rip),%rax        # ffffffffc0005982 <.refptr.asm_isr0+0x242>
ffffffffc0000f06:	48 8d 15 4c 4a 00 00 	lea    0x4a4c(%rip),%rdx        # ffffffffc0005959 <.refptr.asm_isr0+0x219>
ffffffffc0000f0d:	e9 4e fc ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000f12:	48 8d 05 84 4a 00 00 	lea    0x4a84(%rip),%rax        # ffffffffc000599d <.refptr.asm_isr0+0x25d>
ffffffffc0000f19:	48 8d 15 39 4a 00 00 	lea    0x4a39(%rip),%rdx        # ffffffffc0005959 <.refptr.asm_isr0+0x219>
ffffffffc0000f20:	e9 3b fc ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000f25:	48 8d 05 85 4a 00 00 	lea    0x4a85(%rip),%rax        # ffffffffc00059b1 <.refptr.asm_isr0+0x271>
ffffffffc0000f2c:	48 8d 15 26 4a 00 00 	lea    0x4a26(%rip),%rdx        # ffffffffc0005959 <.refptr.asm_isr0+0x219>
ffffffffc0000f33:	e9 28 fc ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000f38:	48 8d 05 82 4a 00 00 	lea    0x4a82(%rip),%rax        # ffffffffc00059c1 <.refptr.asm_isr0+0x281>
ffffffffc0000f3f:	48 8d 15 13 4a 00 00 	lea    0x4a13(%rip),%rdx        # ffffffffc0005959 <.refptr.asm_isr0+0x219>
ffffffffc0000f46:	e9 15 fc ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000f4b:	48 8d 05 1a 4a 00 00 	lea    0x4a1a(%rip),%rax        # ffffffffc000596c <.refptr.asm_isr0+0x22c>
ffffffffc0000f52:	48 8d 15 00 4a 00 00 	lea    0x4a00(%rip),%rdx        # ffffffffc0005959 <.refptr.asm_isr0+0x219>
ffffffffc0000f59:	e9 02 fc ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000f5e:	48 8d 05 17 48 00 00 	lea    0x4817(%rip),%rax        # ffffffffc000577c <.refptr.asm_isr0+0x3c>
ffffffffc0000f65:	48 8d 15 1c 48 00 00 	lea    0x481c(%rip),%rdx        # ffffffffc0005788 <.refptr.asm_isr0+0x48>
ffffffffc0000f6c:	e9 ef fb ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000f71:	48 8d 05 57 4b 00 00 	lea    0x4b57(%rip),%rax        # ffffffffc0005acf <.refptr.asm_isr0+0x38f>
ffffffffc0000f78:	48 8d 15 09 48 00 00 	lea    0x4809(%rip),%rdx        # ffffffffc0005788 <.refptr.asm_isr0+0x48>
ffffffffc0000f7f:	e9 dc fb ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000f84:	48 8d 05 51 4b 00 00 	lea    0x4b51(%rip),%rax        # ffffffffc0005adc <.refptr.asm_isr0+0x39c>
ffffffffc0000f8b:	48 8d 15 f6 47 00 00 	lea    0x47f6(%rip),%rdx        # ffffffffc0005788 <.refptr.asm_isr0+0x48>
ffffffffc0000f92:	e9 c9 fb ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000f97:	48 8d 05 5e 4b 00 00 	lea    0x4b5e(%rip),%rax        # ffffffffc0005afc <.refptr.asm_isr0+0x3bc>
ffffffffc0000f9e:	48 8d 15 e3 47 00 00 	lea    0x47e3(%rip),%rdx        # ffffffffc0005788 <.refptr.asm_isr0+0x48>
ffffffffc0000fa5:	e9 b6 fb ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000faa:	48 8d 05 e2 4a 00 00 	lea    0x4ae2(%rip),%rax        # ffffffffc0005a93 <.refptr.asm_isr0+0x353>
ffffffffc0000fb1:	48 8d 15 d0 47 00 00 	lea    0x47d0(%rip),%rdx        # ffffffffc0005788 <.refptr.asm_isr0+0x48>
ffffffffc0000fb8:	e9 a3 fb ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000fbd:	48 8d 05 43 4b 00 00 	lea    0x4b43(%rip),%rax        # ffffffffc0005b07 <.refptr.asm_isr0+0x3c7>
ffffffffc0000fc4:	48 8d 15 bd 47 00 00 	lea    0x47bd(%rip),%rdx        # ffffffffc0005788 <.refptr.asm_isr0+0x48>
ffffffffc0000fcb:	e9 90 fb ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000fd0:	48 8d 05 3c 4b 00 00 	lea    0x4b3c(%rip),%rax        # ffffffffc0005b13 <.refptr.asm_isr0+0x3d3>
ffffffffc0000fd7:	48 8d 15 aa 47 00 00 	lea    0x47aa(%rip),%rdx        # ffffffffc0005788 <.refptr.asm_isr0+0x48>
ffffffffc0000fde:	e9 7d fb ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000fe3:	48 8d 05 c7 4a 00 00 	lea    0x4ac7(%rip),%rax        # ffffffffc0005ab1 <.refptr.asm_isr0+0x371>
ffffffffc0000fea:	48 8d 15 97 47 00 00 	lea    0x4797(%rip),%rdx        # ffffffffc0005788 <.refptr.asm_isr0+0x48>
ffffffffc0000ff1:	e9 6a fb ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0000ff6:	48 8d 05 c3 4a 00 00 	lea    0x4ac3(%rip),%rax        # ffffffffc0005ac0 <.refptr.asm_isr0+0x380>
ffffffffc0000ffd:	48 8d 15 84 47 00 00 	lea    0x4784(%rip),%rdx        # ffffffffc0005788 <.refptr.asm_isr0+0x48>
ffffffffc0001004:	e9 57 fb ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0001009:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0001010:	41 80 f9 03          	cmp    $0x3,%r9b
ffffffffc0001014:	48 8d 05 c6 47 00 00 	lea    0x47c6(%rip),%rax        # ffffffffc00057e1 <.refptr.asm_isr0+0xa1>
ffffffffc000101b:	48 8d 0d bd 47 00 00 	lea    0x47bd(%rip),%rcx        # ffffffffc00057df <.refptr.asm_isr0+0x9f>
ffffffffc0001022:	48 0f 45 c1          	cmovne %rcx,%rax
ffffffffc0001026:	e9 35 fb ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc000102b:	48 8d 05 ad 47 00 00 	lea    0x47ad(%rip),%rax        # ffffffffc00057df <.refptr.asm_isr0+0x9f>
ffffffffc0001032:	48 8d 15 37 48 00 00 	lea    0x4837(%rip),%rdx        # ffffffffc0005870 <.refptr.asm_isr0+0x130>
ffffffffc0001039:	e9 22 fb ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc000103e:	48 8d 05 9a 47 00 00 	lea    0x479a(%rip),%rax        # ffffffffc00057df <.refptr.asm_isr0+0x9f>
ffffffffc0001045:	48 8d 15 0d 49 00 00 	lea    0x490d(%rip),%rdx        # ffffffffc0005959 <.refptr.asm_isr0+0x219>
ffffffffc000104c:	e9 0f fb ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0001051:	48 8d 05 87 47 00 00 	lea    0x4787(%rip),%rax        # ffffffffc00057df <.refptr.asm_isr0+0x9f>
ffffffffc0001058:	48 8d 15 00 47 00 00 	lea    0x4700(%rip),%rdx        # ffffffffc000575f <.refptr.asm_isr0+0x1f>
ffffffffc000105f:	e9 fc fa ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0001064:	48 8d 05 74 47 00 00 	lea    0x4774(%rip),%rax        # ffffffffc00057df <.refptr.asm_isr0+0x9f>
ffffffffc000106b:	48 8d 15 a6 47 00 00 	lea    0x47a6(%rip),%rdx        # ffffffffc0005818 <.refptr.asm_isr0+0xd8>
ffffffffc0001072:	e9 e9 fa ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc0001077:	48 8d 05 61 47 00 00 	lea    0x4761(%rip),%rax        # ffffffffc00057df <.refptr.asm_isr0+0x9f>
ffffffffc000107e:	48 8d 15 03 47 00 00 	lea    0x4703(%rip),%rdx        # ffffffffc0005788 <.refptr.asm_isr0+0x48>
ffffffffc0001085:	e9 d6 fa ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc000108a:	90                   	nop
ffffffffc000108b:	90                   	nop
ffffffffc000108c:	90                   	nop
ffffffffc000108d:	90                   	nop
ffffffffc000108e:	90                   	nop
ffffffffc000108f:	90                   	nop
ffffffffc0001090:	48 8d 05 48 47 00 00 	lea    0x4748(%rip),%rax        # ffffffffc00057df <.refptr.asm_isr0+0x9f>
ffffffffc0001097:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
ffffffffc000109c:	48 89 c2             	mov    %rax,%rdx
ffffffffc000109f:	e9 bc fa ff ff       	jmpq   ffffffffc0000b60 <pci_init+0x180>
ffffffffc00010a4:	90                   	nop
ffffffffc00010a5:	90                   	nop
ffffffffc00010a6:	90                   	nop
ffffffffc00010a7:	90                   	nop
ffffffffc00010a8:	90                   	nop
ffffffffc00010a9:	90                   	nop
ffffffffc00010aa:	90                   	nop
ffffffffc00010ab:	90                   	nop
ffffffffc00010ac:	90                   	nop
ffffffffc00010ad:	90                   	nop
ffffffffc00010ae:	90                   	nop
ffffffffc00010af:	90                   	nop

ffffffffc00010b0 <_console_print_char>:
ffffffffc00010b0:	55                   	push   %rbp
ffffffffc00010b1:	57                   	push   %rdi
ffffffffc00010b2:	56                   	push   %rsi
ffffffffc00010b3:	53                   	push   %rbx
ffffffffc00010b4:	48 83 ec 58          	sub    $0x58,%rsp
ffffffffc00010b8:	0f 29 74 24 40       	movaps %xmm6,0x40(%rsp)
ffffffffc00010bd:	f3 41 0f 6f 30       	movdqu (%r8),%xmm6
ffffffffc00010c2:	41 89 d1             	mov    %edx,%r9d
ffffffffc00010c5:	80 f9 0a             	cmp    $0xa,%cl
ffffffffc00010c8:	0f 84 94 00 00 00    	je     ffffffffc0001162 <_console_print_char+0xb2>
ffffffffc00010ce:	48 8b 05 63 64 00 00 	mov    0x6463(%rip),%rax        # ffffffffc0007538 <_console_w>
ffffffffc00010d5:	48 8b 15 6c 64 00 00 	mov    0x646c(%rip),%rdx        # ffffffffc0007548 <_console_x>
ffffffffc00010dc:	80 f9 20             	cmp    $0x20,%cl
ffffffffc00010df:	75 1f                	jne    ffffffffc0001100 <_console_print_char+0x50>
ffffffffc00010e1:	48 83 c2 01          	add    $0x1,%rdx
ffffffffc00010e5:	48 39 c2             	cmp    %rax,%rdx
ffffffffc00010e8:	74 78                	je     ffffffffc0001162 <_console_print_char+0xb2>
ffffffffc00010ea:	48 89 15 57 64 00 00 	mov    %rdx,0x6457(%rip)        # ffffffffc0007548 <_console_x>
ffffffffc00010f1:	0f 28 74 24 40       	movaps 0x40(%rsp),%xmm6
ffffffffc00010f6:	48 83 c4 58          	add    $0x58,%rsp
ffffffffc00010fa:	5b                   	pop    %rbx
ffffffffc00010fb:	5e                   	pop    %rsi
ffffffffc00010fc:	5f                   	pop    %rdi
ffffffffc00010fd:	5d                   	pop    %rbp
ffffffffc00010fe:	c3                   	retq   
ffffffffc00010ff:	90                   	nop
ffffffffc0001100:	4c 8b 05 39 64 00 00 	mov    0x6439(%rip),%r8        # ffffffffc0007540 <_console_y>
ffffffffc0001107:	41 89 ca             	mov    %ecx,%r10d
ffffffffc000110a:	4c 8b 1d 17 64 00 00 	mov    0x6417(%rip),%r11        # ffffffffc0007528 <_console_bf>
ffffffffc0001111:	0f b6 c9             	movzbl %cl,%ecx
ffffffffc0001114:	41 c1 e2 18          	shl    $0x18,%r10d
ffffffffc0001118:	49 0f af c0          	imul   %r8,%rax
ffffffffc000111c:	45 09 ca             	or     %r9d,%r10d
ffffffffc000111f:	49 c1 e0 04          	shl    $0x4,%r8
ffffffffc0001123:	48 01 d0             	add    %rdx,%rax
ffffffffc0001126:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffffc000112a:	45 89 14 83          	mov    %r10d,(%r11,%rax,4)
ffffffffc000112e:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
ffffffffc0001133:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc0001138:	c7 44 24 28 01 00 00 	movl   $0x1,0x28(%rsp)
ffffffffc000113f:	00 
ffffffffc0001140:	0f 29 74 24 30       	movaps %xmm6,0x30(%rsp)
ffffffffc0001145:	ff 15 25 4d 00 00    	callq  *0x4d25(%rip)        # ffffffffc0005e70 <.refptr.gfx_print_char>
ffffffffc000114b:	48 8b 15 f6 63 00 00 	mov    0x63f6(%rip),%rdx        # ffffffffc0007548 <_console_x>
ffffffffc0001152:	48 8b 05 df 63 00 00 	mov    0x63df(%rip),%rax        # ffffffffc0007538 <_console_w>
ffffffffc0001159:	48 83 c2 01          	add    $0x1,%rdx
ffffffffc000115d:	48 39 c2             	cmp    %rax,%rdx
ffffffffc0001160:	75 88                	jne    ffffffffc00010ea <_console_print_char+0x3a>
ffffffffc0001162:	48 8b 0d d7 63 00 00 	mov    0x63d7(%rip),%rcx        # ffffffffc0007540 <_console_y>
ffffffffc0001169:	48 8b 05 c0 63 00 00 	mov    0x63c0(%rip),%rax        # ffffffffc0007530 <_console_h>
ffffffffc0001170:	48 c7 05 cd 63 00 00 	movq   $0x0,0x63cd(%rip)        # ffffffffc0007548 <_console_x>
ffffffffc0001177:	00 00 00 00 
ffffffffc000117b:	48 8d 59 01          	lea    0x1(%rcx),%rbx
ffffffffc000117f:	48 89 1d ba 63 00 00 	mov    %rbx,0x63ba(%rip)        # ffffffffc0007540 <_console_y>
ffffffffc0001186:	48 39 d8             	cmp    %rbx,%rax
ffffffffc0001189:	0f 85 62 ff ff ff    	jne    ffffffffc00010f1 <_console_print_char+0x41>
ffffffffc000118f:	4c 8b 05 a2 63 00 00 	mov    0x63a2(%rip),%r8        # ffffffffc0007538 <_console_w>
ffffffffc0001196:	48 83 eb 01          	sub    $0x1,%rbx
ffffffffc000119a:	48 8b 3d bf 4c 00 00 	mov    0x4cbf(%rip),%rdi        # ffffffffc0005e60 <.refptr.gfx_fill_rect>
ffffffffc00011a1:	49 0f af d8          	imul   %r8,%rbx
ffffffffc00011a5:	48 85 db             	test   %rbx,%rbx
ffffffffc00011a8:	0f 84 bd 00 00 00    	je     ffffffffc000126b <_console_print_char+0x1bb>
ffffffffc00011ae:	48 8b 3d ab 4c 00 00 	mov    0x4cab(%rip),%rdi        # ffffffffc0005e60 <.refptr.gfx_fill_rect>
ffffffffc00011b5:	48 8b 35 b4 4c 00 00 	mov    0x4cb4(%rip),%rsi        # ffffffffc0005e70 <.refptr.gfx_print_char>
ffffffffc00011bc:	31 db                	xor    %ebx,%ebx
ffffffffc00011be:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
ffffffffc00011c3:	eb 43                	jmp    ffffffffc0001208 <_console_print_char+0x158>
ffffffffc00011c5:	0f 1f 00             	nopl   (%rax)
ffffffffc00011c8:	c7 44 24 28 01 00 00 	movl   $0x1,0x28(%rsp)
ffffffffc00011cf:	00 
ffffffffc00011d0:	49 89 c0             	mov    %rax,%r8
ffffffffc00011d3:	4c 89 d2             	mov    %r10,%rdx
ffffffffc00011d6:	41 81 e1 ff ff ff 00 	and    $0xffffff,%r9d
ffffffffc00011dd:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
ffffffffc00011e2:	0f 29 74 24 30       	movaps %xmm6,0x30(%rsp)
ffffffffc00011e7:	ff d6                	callq  *%rsi
ffffffffc00011e9:	48 8b 05 40 63 00 00 	mov    0x6340(%rip),%rax        # ffffffffc0007530 <_console_h>
ffffffffc00011f0:	4c 8b 05 41 63 00 00 	mov    0x6341(%rip),%r8        # ffffffffc0007538 <_console_w>
ffffffffc00011f7:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc00011fb:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffffc00011ff:	49 0f af d0          	imul   %r8,%rdx
ffffffffc0001203:	48 39 da             	cmp    %rbx,%rdx
ffffffffc0001206:	76 58                	jbe    ffffffffc0001260 <_console_print_char+0x1b0>
ffffffffc0001208:	48 8b 05 19 63 00 00 	mov    0x6319(%rip),%rax        # ffffffffc0007528 <_console_bf>
ffffffffc000120f:	49 8d 14 18          	lea    (%r8,%rbx,1),%rdx
ffffffffc0001213:	44 8b 0c 90          	mov    (%rax,%rdx,4),%r9d
ffffffffc0001217:	31 d2                	xor    %edx,%edx
ffffffffc0001219:	44 89 0c 98          	mov    %r9d,(%rax,%rbx,4)
ffffffffc000121d:	48 89 d8             	mov    %rbx,%rax
ffffffffc0001220:	44 89 c9             	mov    %r9d,%ecx
ffffffffc0001223:	49 f7 f0             	div    %r8
ffffffffc0001226:	c1 e9 18             	shr    $0x18,%ecx
ffffffffc0001229:	48 c1 e0 04          	shl    $0x4,%rax
ffffffffc000122d:	4c 8d 14 d5 00 00 00 	lea    0x0(,%rdx,8),%r10
ffffffffc0001234:	00 
ffffffffc0001235:	83 f9 20             	cmp    $0x20,%ecx
ffffffffc0001238:	75 8e                	jne    ffffffffc00011c8 <_console_print_char+0x118>
ffffffffc000123a:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
ffffffffc0001241:	00 
ffffffffc0001242:	41 b9 10 00 00 00    	mov    $0x10,%r9d
ffffffffc0001248:	48 89 c2             	mov    %rax,%rdx
ffffffffc000124b:	4c 89 d1             	mov    %r10,%rcx
ffffffffc000124e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0001254:	ff d7                	callq  *%rdi
ffffffffc0001256:	eb 91                	jmp    ffffffffc00011e9 <_console_print_char+0x139>
ffffffffc0001258:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffffc000125f:	00 
ffffffffc0001260:	48 8b 35 d9 62 00 00 	mov    0x62d9(%rip),%rsi        # ffffffffc0007540 <_console_y>
ffffffffc0001267:	48 8d 4e ff          	lea    -0x1(%rsi),%rcx
ffffffffc000126b:	49 0f af c0          	imul   %r8,%rax
ffffffffc000126f:	48 39 d8             	cmp    %rbx,%rax
ffffffffc0001272:	76 79                	jbe    ffffffffc00012ed <_console_print_char+0x23d>
ffffffffc0001274:	49 89 c2             	mov    %rax,%r10
ffffffffc0001277:	4c 8b 1d aa 62 00 00 	mov    0x62aa(%rip),%r11        # ffffffffc0007528 <_console_bf>
ffffffffc000127e:	49 29 da             	sub    %rbx,%r10
ffffffffc0001281:	49 8d 52 ff          	lea    -0x1(%r10),%rdx
ffffffffc0001285:	48 83 fa 02          	cmp    $0x2,%rdx
ffffffffc0001289:	76 38                	jbe    ffffffffc00012c3 <_console_print_char+0x213>
ffffffffc000128b:	4d 89 d1             	mov    %r10,%r9
ffffffffc000128e:	49 8d 14 9b          	lea    (%r11,%rbx,4),%rdx
ffffffffc0001292:	66 0f 6f 05 76 4b 00 	movdqa 0x4b76(%rip),%xmm0        # ffffffffc0005e10 <.refptr.asm_port_out32+0x10>
ffffffffc0001299:	00 
ffffffffc000129a:	49 c1 e9 02          	shr    $0x2,%r9
ffffffffc000129e:	49 c1 e1 04          	shl    $0x4,%r9
ffffffffc00012a2:	49 01 d1             	add    %rdx,%r9
ffffffffc00012a5:	0f 1f 00             	nopl   (%rax)
ffffffffc00012a8:	0f 11 02             	movups %xmm0,(%rdx)
ffffffffc00012ab:	48 83 c2 10          	add    $0x10,%rdx
ffffffffc00012af:	4c 39 ca             	cmp    %r9,%rdx
ffffffffc00012b2:	75 f4                	jne    ffffffffc00012a8 <_console_print_char+0x1f8>
ffffffffc00012b4:	4c 89 d2             	mov    %r10,%rdx
ffffffffc00012b7:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
ffffffffc00012bb:	48 01 d3             	add    %rdx,%rbx
ffffffffc00012be:	4c 39 d2             	cmp    %r10,%rdx
ffffffffc00012c1:	74 2a                	je     ffffffffc00012ed <_console_print_char+0x23d>
ffffffffc00012c3:	48 8d 53 01          	lea    0x1(%rbx),%rdx
ffffffffc00012c7:	41 c7 04 9b 00 00 00 	movl   $0x20000000,(%r11,%rbx,4)
ffffffffc00012ce:	20 
ffffffffc00012cf:	48 39 d0             	cmp    %rdx,%rax
ffffffffc00012d2:	76 19                	jbe    ffffffffc00012ed <_console_print_char+0x23d>
ffffffffc00012d4:	48 83 c3 02          	add    $0x2,%rbx
ffffffffc00012d8:	41 c7 04 93 00 00 00 	movl   $0x20000000,(%r11,%rdx,4)
ffffffffc00012df:	20 
ffffffffc00012e0:	48 39 d8             	cmp    %rbx,%rax
ffffffffc00012e3:	76 08                	jbe    ffffffffc00012ed <_console_print_char+0x23d>
ffffffffc00012e5:	41 c7 04 9b 00 00 00 	movl   $0x20000000,(%r11,%rbx,4)
ffffffffc00012ec:	20 
ffffffffc00012ed:	48 89 0d 4c 62 00 00 	mov    %rcx,0x624c(%rip)        # ffffffffc0007540 <_console_y>
ffffffffc00012f4:	48 c1 e1 04          	shl    $0x4,%rcx
ffffffffc00012f8:	41 b9 10 00 00 00    	mov    $0x10,%r9d
ffffffffc00012fe:	49 c1 e0 03          	shl    $0x3,%r8
ffffffffc0001302:	48 89 ca             	mov    %rcx,%rdx
ffffffffc0001305:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
ffffffffc000130c:	00 
ffffffffc000130d:	31 c9                	xor    %ecx,%ecx
ffffffffc000130f:	ff d7                	callq  *%rdi
ffffffffc0001311:	90                   	nop
ffffffffc0001312:	0f 28 74 24 40       	movaps 0x40(%rsp),%xmm6
ffffffffc0001317:	48 83 c4 58          	add    $0x58,%rsp
ffffffffc000131b:	5b                   	pop    %rbx
ffffffffc000131c:	5e                   	pop    %rsi
ffffffffc000131d:	5f                   	pop    %rdi
ffffffffc000131e:	5d                   	pop    %rbp
ffffffffc000131f:	c3                   	retq   

ffffffffc0001320 <_console_vprintf_write_func>:
ffffffffc0001320:	48 83 ec 38          	sub    $0x38,%rsp
ffffffffc0001324:	84 c9                	test   %cl,%cl
ffffffffc0001326:	75 08                	jne    ffffffffc0001330 <_console_vprintf_write_func+0x10>
ffffffffc0001328:	48 83 c4 38          	add    $0x38,%rsp
ffffffffc000132c:	c3                   	retq   
ffffffffc000132d:	0f 1f 00             	nopl   (%rax)
ffffffffc0001330:	48 8b 05 19 4b 00 00 	mov    0x4b19(%rip),%rax        # ffffffffc0005e50 <.refptr.FONT_SPLEEN>
ffffffffc0001337:	8b 12                	mov    (%rdx),%edx
ffffffffc0001339:	0f be c9             	movsbl %cl,%ecx
ffffffffc000133c:	4c 8d 44 24 20       	lea    0x20(%rsp),%r8
ffffffffc0001341:	f3 0f 6f 00          	movdqu (%rax),%xmm0
ffffffffc0001345:	48 8d 05 64 fd ff ff 	lea    -0x29c(%rip),%rax        # ffffffffc00010b0 <_console_print_char>
ffffffffc000134c:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
ffffffffc0001351:	ff d0                	callq  *%rax
ffffffffc0001353:	90                   	nop
ffffffffc0001354:	48 83 c4 38          	add    $0x38,%rsp
ffffffffc0001358:	c3                   	retq   
ffffffffc0001359:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffffc0001360 <_console_print>:
ffffffffc0001360:	41 54                	push   %r12
ffffffffc0001362:	55                   	push   %rbp
ffffffffc0001363:	57                   	push   %rdi
ffffffffc0001364:	56                   	push   %rsi
ffffffffc0001365:	53                   	push   %rbx
ffffffffc0001366:	48 83 ec 30          	sub    $0x30,%rsp
ffffffffc000136a:	48 83 3d b6 61 00 00 	cmpq   $0x0,0x61b6(%rip)        # ffffffffc0007528 <_console_bf>
ffffffffc0001371:	00 
ffffffffc0001372:	48 89 cb             	mov    %rcx,%rbx
ffffffffc0001375:	89 d6                	mov    %edx,%esi
ffffffffc0001377:	74 5f                	je     ffffffffc00013d8 <_console_print+0x78>
ffffffffc0001379:	48 8b 0d a0 61 00 00 	mov    0x61a0(%rip),%rcx        # ffffffffc0007520 <_console_l>
ffffffffc0001380:	ff 15 ba 4a 00 00    	callq  *0x4aba(%rip)        # ffffffffc0005e40 <.refptr.asm_lock_acquire>
ffffffffc0001386:	0f be 0b             	movsbl (%rbx),%ecx
ffffffffc0001389:	84 c9                	test   %cl,%cl
ffffffffc000138b:	74 30                	je     ffffffffc00013bd <_console_print+0x5d>
ffffffffc000138d:	4c 8b 25 bc 4a 00 00 	mov    0x4abc(%rip),%r12        # ffffffffc0005e50 <.refptr.FONT_SPLEEN>
ffffffffc0001394:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
ffffffffc0001399:	48 8d 3d 10 fd ff ff 	lea    -0x2f0(%rip),%rdi        # ffffffffc00010b0 <_console_print_char>
ffffffffc00013a0:	f3 41 0f 6f 04 24    	movdqu (%r12),%xmm0
ffffffffc00013a6:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc00013aa:	49 89 e8             	mov    %rbp,%r8
ffffffffc00013ad:	89 f2                	mov    %esi,%edx
ffffffffc00013af:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
ffffffffc00013b4:	ff d7                	callq  *%rdi
ffffffffc00013b6:	0f be 0b             	movsbl (%rbx),%ecx
ffffffffc00013b9:	84 c9                	test   %cl,%cl
ffffffffc00013bb:	75 e3                	jne    ffffffffc00013a0 <_console_print+0x40>
ffffffffc00013bd:	48 8b 0d 5c 61 00 00 	mov    0x615c(%rip),%rcx        # ffffffffc0007520 <_console_l>
ffffffffc00013c4:	48 83 c4 30          	add    $0x30,%rsp
ffffffffc00013c8:	5b                   	pop    %rbx
ffffffffc00013c9:	5e                   	pop    %rsi
ffffffffc00013ca:	5f                   	pop    %rdi
ffffffffc00013cb:	5d                   	pop    %rbp
ffffffffc00013cc:	41 5c                	pop    %r12
ffffffffc00013ce:	48 ff 25 5b 4a 00 00 	rex.W jmpq *0x4a5b(%rip)        # ffffffffc0005e30 <.refptr.asm_lock_release>
ffffffffc00013d5:	0f 1f 00             	nopl   (%rax)
ffffffffc00013d8:	48 83 c4 30          	add    $0x30,%rsp
ffffffffc00013dc:	5b                   	pop    %rbx
ffffffffc00013dd:	5e                   	pop    %rsi
ffffffffc00013de:	5f                   	pop    %rdi
ffffffffc00013df:	5d                   	pop    %rbp
ffffffffc00013e0:	41 5c                	pop    %r12
ffffffffc00013e2:	c3                   	retq   
ffffffffc00013e3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffffc00013ea:	00 00 00 00 
ffffffffc00013ee:	66 90                	xchg   %ax,%ax

ffffffffc00013f0 <_console_vprint>:
ffffffffc00013f0:	53                   	push   %rbx
ffffffffc00013f1:	48 83 ec 40          	sub    $0x40,%rsp
ffffffffc00013f5:	48 83 3d 2b 61 00 00 	cmpq   $0x0,0x612b(%rip)        # ffffffffc0007528 <_console_bf>
ffffffffc00013fc:	00 
ffffffffc00013fd:	89 54 24 58          	mov    %edx,0x58(%rsp)
ffffffffc0001401:	48 89 cb             	mov    %rcx,%rbx
ffffffffc0001404:	4c 89 44 24 60       	mov    %r8,0x60(%rsp)
ffffffffc0001409:	4c 89 4c 24 68       	mov    %r9,0x68(%rsp)
ffffffffc000140e:	74 41                	je     ffffffffc0001451 <_console_vprint+0x61>
ffffffffc0001410:	48 8b 0d 09 61 00 00 	mov    0x6109(%rip),%rcx        # ffffffffc0007520 <_console_l>
ffffffffc0001417:	ff 15 23 4a 00 00    	callq  *0x4a23(%rip)        # ffffffffc0005e40 <.refptr.asm_lock_acquire>
ffffffffc000141d:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
ffffffffc0001422:	49 89 d9             	mov    %rbx,%r9
ffffffffc0001425:	31 d2                	xor    %edx,%edx
ffffffffc0001427:	48 8d 4c 24 58       	lea    0x58(%rsp),%rcx
ffffffffc000142c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffffc0001431:	4c 8d 05 e8 fe ff ff 	lea    -0x118(%rip),%r8        # ffffffffc0001320 <_console_vprintf_write_func>
ffffffffc0001438:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc000143d:	ff 15 dd 49 00 00    	callq  *0x49dd(%rip)        # ffffffffc0005e20 <.refptr.__vprintf_raw>
ffffffffc0001443:	48 8b 0d d6 60 00 00 	mov    0x60d6(%rip),%rcx        # ffffffffc0007520 <_console_l>
ffffffffc000144a:	ff 15 e0 49 00 00    	callq  *0x49e0(%rip)        # ffffffffc0005e30 <.refptr.asm_lock_release>
ffffffffc0001450:	90                   	nop
ffffffffc0001451:	48 83 c4 40          	add    $0x40,%rsp
ffffffffc0001455:	5b                   	pop    %rbx
ffffffffc0001456:	c3                   	retq   
ffffffffc0001457:	90                   	nop
ffffffffc0001458:	90                   	nop
ffffffffc0001459:	90                   	nop
ffffffffc000145a:	90                   	nop
ffffffffc000145b:	90                   	nop
ffffffffc000145c:	90                   	nop
ffffffffc000145d:	90                   	nop
ffffffffc000145e:	90                   	nop
ffffffffc000145f:	90                   	nop

ffffffffc0001460 <gfx_print_char>:
ffffffffc0001460:	41 57                	push   %r15
ffffffffc0001462:	41 56                	push   %r14
ffffffffc0001464:	41 55                	push   %r13
ffffffffc0001466:	41 54                	push   %r12
ffffffffc0001468:	55                   	push   %rbp
ffffffffc0001469:	57                   	push   %rdi
ffffffffc000146a:	56                   	push   %rsi
ffffffffc000146b:	53                   	push   %rbx
ffffffffc000146c:	48 83 ec 68          	sub    $0x68,%rsp
ffffffffc0001470:	4c 8b 9c 24 d0 00 00 	mov    0xd0(%rsp),%r11
ffffffffc0001477:	00 
ffffffffc0001478:	49 8b 43 08          	mov    0x8(%r11),%rax
ffffffffc000147c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffffc0001481:	8b 84 24 d8 00 00 00 	mov    0xd8(%rsp),%eax
ffffffffc0001488:	41 89 ca             	mov    %ecx,%r10d
ffffffffc000148b:	4c 89 c1             	mov    %r8,%rcx
ffffffffc000148e:	44 89 8c 24 c8 00 00 	mov    %r9d,0xc8(%rsp)
ffffffffc0001495:	00 
ffffffffc0001496:	44 0f b6 c8          	movzbl %al,%r9d
ffffffffc000149a:	48 89 94 24 b8 00 00 	mov    %rdx,0xb8(%rsp)
ffffffffc00014a1:	00 
ffffffffc00014a2:	89 c2                	mov    %eax,%edx
ffffffffc00014a4:	46 8d 04 cd 00 00 00 	lea    0x0(,%r9,8),%r8d
ffffffffc00014ab:	00 
ffffffffc00014ac:	49 63 f0             	movslq %r8d,%rsi
ffffffffc00014af:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
ffffffffc00014b4:	48 01 ce             	add    %rcx,%rsi
ffffffffc00014b7:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
ffffffffc00014bc:	45 38 13             	cmp    %r10b,(%r11)
ffffffffc00014bf:	0f 82 16 03 00 00    	jb     ffffffffc00017db <gfx_print_char+0x37b>
ffffffffc00014c5:	45 0f b6 d2          	movzbl %r10b,%r10d
ffffffffc00014c9:	0f b6 f8             	movzbl %al,%edi
ffffffffc00014cc:	45 89 c0             	mov    %r8d,%r8d
ffffffffc00014cf:	41 89 c3             	mov    %eax,%r11d
ffffffffc00014d2:	43 8d 1c 12          	lea    (%r10,%r10,1),%ebx
ffffffffc00014d6:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffffc00014db:	41 89 c2             	mov    %eax,%r10d
ffffffffc00014de:	45 31 ed             	xor    %r13d,%r13d
ffffffffc00014e1:	4c 63 cb             	movslq %ebx,%r9
ffffffffc00014e4:	89 5c 24 44          	mov    %ebx,0x44(%rsp)
ffffffffc00014e8:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
ffffffffc00014ed:	41 83 e2 fc          	and    $0xfffffffc,%r10d
ffffffffc00014f1:	41 81 e3 fc 00 00 00 	and    $0xfc,%r11d
ffffffffc00014f8:	44 88 54 24 42       	mov    %r10b,0x42(%rsp)
ffffffffc00014fd:	45 8d 62 01          	lea    0x1(%r10),%r12d
ffffffffc0001501:	4a 8b 34 cb          	mov    (%rbx,%r9,8),%rsi
ffffffffc0001505:	48 8b 1d 4c 60 00 00 	mov    0x604c(%rip),%rbx        # ffffffffc0007558 <_gfx_vmem_w>
ffffffffc000150c:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
ffffffffc0001511:	48 0f af fb          	imul   %rbx,%rdi
ffffffffc0001515:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
ffffffffc000151a:	8d 70 ff             	lea    -0x1(%rax),%esi
ffffffffc000151d:	48 0f af cb          	imul   %rbx,%rcx
ffffffffc0001521:	48 03 8c 24 b8 00 00 	add    0xb8(%rsp),%rcx
ffffffffc0001528:	00 
ffffffffc0001529:	48 89 cd             	mov    %rcx,%rbp
ffffffffc000152c:	48 8b 0d 35 60 00 00 	mov    0x6035(%rip),%rcx        # ffffffffc0007568 <_gfx_vmem>
ffffffffc0001533:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
ffffffffc0001538:	4c 29 c7             	sub    %r8,%rdi
ffffffffc000153b:	41 89 c0             	mov    %eax,%r8d
ffffffffc000153e:	41 c0 e8 02          	shr    $0x2,%r8b
ffffffffc0001542:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffffc0001547:	48 8d 3c 9d 00 00 00 	lea    0x0(,%rbx,4),%rdi
ffffffffc000154e:	00 
ffffffffc000154f:	41 83 e8 01          	sub    $0x1,%r8d
ffffffffc0001553:	45 0f b6 c0          	movzbl %r8b,%r8d
ffffffffc0001557:	4d 89 c6             	mov    %r8,%r14
ffffffffc000155a:	49 c1 e6 04          	shl    $0x4,%r14
ffffffffc000155e:	4c 89 74 24 58       	mov    %r14,0x58(%rsp)
ffffffffc0001563:	49 83 c6 10          	add    $0x10,%r14
ffffffffc0001567:	eb 42                	jmp    ffffffffc00015ab <gfx_print_char+0x14b>
ffffffffc0001569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0001570:	48 85 c0             	test   %rax,%rax
ffffffffc0001573:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffffc0001578:	0f 45 84 24 c8 00 00 	cmovne 0xc8(%rsp),%eax
ffffffffc000157f:	00 
ffffffffc0001580:	89 04 a9             	mov    %eax,(%rcx,%rbp,4)
ffffffffc0001583:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffffc0001588:	48 03 6c 24 08       	add    0x8(%rsp),%rbp
ffffffffc000158d:	41 83 c5 01          	add    $0x1,%r13d
ffffffffc0001591:	48 d1 6c 24 10       	shrq   0x10(%rsp)
ffffffffc0001596:	48 01 e8             	add    %rbp,%rax
ffffffffc0001599:	41 f6 c5 07          	test   $0x7,%r13b
ffffffffc000159d:	48 0f 44 e8          	cmove  %rax,%rbp
ffffffffc00015a1:	41 80 fd 40          	cmp    $0x40,%r13b
ffffffffc00015a5:	0f 84 d0 00 00 00    	je     ffffffffc000167b <gfx_print_char+0x21b>
ffffffffc00015ab:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffffc00015b0:	83 e0 01             	and    $0x1,%eax
ffffffffc00015b3:	80 fa 01             	cmp    $0x1,%dl
ffffffffc00015b6:	74 b8                	je     ffffffffc0001570 <gfx_print_char+0x110>
ffffffffc00015b8:	48 85 c0             	test   %rax,%rax
ffffffffc00015bb:	41 bb 00 00 00 00    	mov    $0x0,%r11d
ffffffffc00015c1:	44 0f 45 9c 24 c8 00 	cmovne 0xc8(%rsp),%r11d
ffffffffc00015c8:	00 00 
ffffffffc00015ca:	84 d2                	test   %dl,%dl
ffffffffc00015cc:	74 b5                	je     ffffffffc0001583 <gfx_print_char+0x123>
ffffffffc00015ce:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
ffffffffc00015d3:	4c 8d 0c a9          	lea    (%rcx,%rbp,4),%r9
ffffffffc00015d7:	49 89 e8             	mov    %rbp,%r8
ffffffffc00015da:	45 31 d2             	xor    %r10d,%r10d
ffffffffc00015dd:	44 88 6c 24 43       	mov    %r13b,0x43(%rsp)
ffffffffc00015e2:	66 41 0f 6e cb       	movd   %r11d,%xmm1
ffffffffc00015e7:	0f b6 6c 24 42       	movzbl 0x42(%rsp),%ebp
ffffffffc00015ec:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
ffffffffc00015f1:	66 0f 70 c1 00       	pshufd $0x0,%xmm1,%xmm0
ffffffffc00015f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffffc00015fd:	00 00 00 
ffffffffc0001600:	40 80 fe 02          	cmp    $0x2,%sil
ffffffffc0001604:	76 6a                	jbe    ffffffffc0001670 <gfx_print_char+0x210>
ffffffffc0001606:	4f 8d 3c 0e          	lea    (%r14,%r9,1),%r15
ffffffffc000160a:	4c 89 c8             	mov    %r9,%rax
ffffffffc000160d:	0f 1f 00             	nopl   (%rax)
ffffffffc0001610:	0f 11 00             	movups %xmm0,(%rax)
ffffffffc0001613:	48 83 c0 10          	add    $0x10,%rax
ffffffffc0001617:	4c 39 f8             	cmp    %r15,%rax
ffffffffc000161a:	75 f4                	jne    ffffffffc0001610 <gfx_print_char+0x1b0>
ffffffffc000161c:	40 38 ea             	cmp    %bpl,%dl
ffffffffc000161f:	74 2d                	je     ffffffffc000164e <gfx_print_char+0x1ee>
ffffffffc0001621:	4b 8d 44 05 00       	lea    0x0(%r13,%r8,1),%rax
ffffffffc0001626:	44 89 1c 81          	mov    %r11d,(%rcx,%rax,4)
ffffffffc000162a:	44 89 e0             	mov    %r12d,%eax
ffffffffc000162d:	44 38 e2             	cmp    %r12b,%dl
ffffffffc0001630:	76 1c                	jbe    ffffffffc000164e <gfx_print_char+0x1ee>
ffffffffc0001632:	44 0f b6 f8          	movzbl %al,%r15d
ffffffffc0001636:	83 c0 01             	add    $0x1,%eax
ffffffffc0001639:	4d 01 c7             	add    %r8,%r15
ffffffffc000163c:	46 89 1c b9          	mov    %r11d,(%rcx,%r15,4)
ffffffffc0001640:	38 c2                	cmp    %al,%dl
ffffffffc0001642:	76 0a                	jbe    ffffffffc000164e <gfx_print_char+0x1ee>
ffffffffc0001644:	0f b6 c0             	movzbl %al,%eax
ffffffffc0001647:	4c 01 c0             	add    %r8,%rax
ffffffffc000164a:	44 89 1c 81          	mov    %r11d,(%rcx,%rax,4)
ffffffffc000164e:	41 83 c2 01          	add    $0x1,%r10d
ffffffffc0001652:	49 01 d8             	add    %rbx,%r8
ffffffffc0001655:	49 01 f9             	add    %rdi,%r9
ffffffffc0001658:	44 38 d2             	cmp    %r10b,%dl
ffffffffc000165b:	75 a3                	jne    ffffffffc0001600 <gfx_print_char+0x1a0>
ffffffffc000165d:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
ffffffffc0001662:	44 0f b6 6c 24 43    	movzbl 0x43(%rsp),%r13d
ffffffffc0001668:	e9 16 ff ff ff       	jmpq   ffffffffc0001583 <gfx_print_char+0x123>
ffffffffc000166d:	0f 1f 00             	nopl   (%rax)
ffffffffc0001670:	46 89 1c 81          	mov    %r11d,(%rcx,%r8,4)
ffffffffc0001674:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffffc0001679:	eb b7                	jmp    ffffffffc0001632 <gfx_print_char+0x1d2>
ffffffffc000167b:	8b 44 24 44          	mov    0x44(%rsp),%eax
ffffffffc000167f:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
ffffffffc0001684:	45 31 ed             	xor    %r13d,%r13d
ffffffffc0001687:	44 0f b6 54 24 42    	movzbl 0x42(%rsp),%r10d
ffffffffc000168d:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
ffffffffc0001692:	83 c0 01             	add    $0x1,%eax
ffffffffc0001695:	48 98                	cltq   
ffffffffc0001697:	48 0f af eb          	imul   %rbx,%rbp
ffffffffc000169b:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
ffffffffc00016a0:	45 8d 62 01          	lea    0x1(%r10),%r12d
ffffffffc00016a4:	49 8b 04 c6          	mov    (%r14,%rax,8),%rax
ffffffffc00016a8:	4c 8b 74 24 58       	mov    0x58(%rsp),%r14
ffffffffc00016ad:	48 03 ac 24 b8 00 00 	add    0xb8(%rsp),%rbp
ffffffffc00016b4:	00 
ffffffffc00016b5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffffc00016ba:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
ffffffffc00016bf:	49 83 c6 10          	add    $0x10,%r14
ffffffffc00016c3:	48 2b 44 24 50       	sub    0x50(%rsp),%rax
ffffffffc00016c8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffffc00016cd:	eb 3c                	jmp    ffffffffc000170b <gfx_print_char+0x2ab>
ffffffffc00016cf:	90                   	nop
ffffffffc00016d0:	48 85 c0             	test   %rax,%rax
ffffffffc00016d3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffffc00016d8:	0f 45 84 24 c8 00 00 	cmovne 0xc8(%rsp),%eax
ffffffffc00016df:	00 
ffffffffc00016e0:	89 04 a9             	mov    %eax,(%rcx,%rbp,4)
ffffffffc00016e3:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffffc00016e8:	48 03 6c 24 08       	add    0x8(%rsp),%rbp
ffffffffc00016ed:	41 83 c5 01          	add    $0x1,%r13d
ffffffffc00016f1:	48 d1 6c 24 10       	shrq   0x10(%rsp)
ffffffffc00016f6:	48 01 e8             	add    %rbp,%rax
ffffffffc00016f9:	41 f6 c5 07          	test   $0x7,%r13b
ffffffffc00016fd:	48 0f 44 e8          	cmove  %rax,%rbp
ffffffffc0001701:	41 80 fd 40          	cmp    $0x40,%r13b
ffffffffc0001705:	0f 84 5f 01 00 00    	je     ffffffffc000186a <gfx_print_char+0x40a>
ffffffffc000170b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffffc0001710:	83 e0 01             	and    $0x1,%eax
ffffffffc0001713:	80 fa 01             	cmp    $0x1,%dl
ffffffffc0001716:	74 b8                	je     ffffffffc00016d0 <gfx_print_char+0x270>
ffffffffc0001718:	48 85 c0             	test   %rax,%rax
ffffffffc000171b:	41 bb 00 00 00 00    	mov    $0x0,%r11d
ffffffffc0001721:	44 0f 45 9c 24 c8 00 	cmovne 0xc8(%rsp),%r11d
ffffffffc0001728:	00 00 
ffffffffc000172a:	84 d2                	test   %dl,%dl
ffffffffc000172c:	74 b5                	je     ffffffffc00016e3 <gfx_print_char+0x283>
ffffffffc000172e:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
ffffffffc0001733:	4c 8d 0c a9          	lea    (%rcx,%rbp,4),%r9
ffffffffc0001737:	49 89 e8             	mov    %rbp,%r8
ffffffffc000173a:	45 31 d2             	xor    %r10d,%r10d
ffffffffc000173d:	44 88 6c 24 43       	mov    %r13b,0x43(%rsp)
ffffffffc0001742:	66 41 0f 6e d3       	movd   %r11d,%xmm2
ffffffffc0001747:	0f b6 6c 24 42       	movzbl 0x42(%rsp),%ebp
ffffffffc000174c:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
ffffffffc0001751:	66 0f 70 c2 00       	pshufd $0x0,%xmm2,%xmm0
ffffffffc0001756:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffffc000175d:	00 00 00 
ffffffffc0001760:	40 80 fe 02          	cmp    $0x2,%sil
ffffffffc0001764:	76 6a                	jbe    ffffffffc00017d0 <gfx_print_char+0x370>
ffffffffc0001766:	4f 8d 3c 0e          	lea    (%r14,%r9,1),%r15
ffffffffc000176a:	4c 89 c8             	mov    %r9,%rax
ffffffffc000176d:	0f 1f 00             	nopl   (%rax)
ffffffffc0001770:	0f 11 00             	movups %xmm0,(%rax)
ffffffffc0001773:	48 83 c0 10          	add    $0x10,%rax
ffffffffc0001777:	4c 39 f8             	cmp    %r15,%rax
ffffffffc000177a:	75 f4                	jne    ffffffffc0001770 <gfx_print_char+0x310>
ffffffffc000177c:	40 38 ea             	cmp    %bpl,%dl
ffffffffc000177f:	74 2d                	je     ffffffffc00017ae <gfx_print_char+0x34e>
ffffffffc0001781:	4b 8d 44 05 00       	lea    0x0(%r13,%r8,1),%rax
ffffffffc0001786:	44 89 1c 81          	mov    %r11d,(%rcx,%rax,4)
ffffffffc000178a:	44 89 e0             	mov    %r12d,%eax
ffffffffc000178d:	44 38 e2             	cmp    %r12b,%dl
ffffffffc0001790:	76 1c                	jbe    ffffffffc00017ae <gfx_print_char+0x34e>
ffffffffc0001792:	44 0f b6 f8          	movzbl %al,%r15d
ffffffffc0001796:	83 c0 01             	add    $0x1,%eax
ffffffffc0001799:	4d 01 c7             	add    %r8,%r15
ffffffffc000179c:	46 89 1c b9          	mov    %r11d,(%rcx,%r15,4)
ffffffffc00017a0:	38 c2                	cmp    %al,%dl
ffffffffc00017a2:	76 0a                	jbe    ffffffffc00017ae <gfx_print_char+0x34e>
ffffffffc00017a4:	0f b6 c0             	movzbl %al,%eax
ffffffffc00017a7:	4c 01 c0             	add    %r8,%rax
ffffffffc00017aa:	44 89 1c 81          	mov    %r11d,(%rcx,%rax,4)
ffffffffc00017ae:	41 83 c2 01          	add    $0x1,%r10d
ffffffffc00017b2:	49 01 d8             	add    %rbx,%r8
ffffffffc00017b5:	49 01 f9             	add    %rdi,%r9
ffffffffc00017b8:	44 38 d2             	cmp    %r10b,%dl
ffffffffc00017bb:	75 a3                	jne    ffffffffc0001760 <gfx_print_char+0x300>
ffffffffc00017bd:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
ffffffffc00017c2:	44 0f b6 6c 24 43    	movzbl 0x43(%rsp),%r13d
ffffffffc00017c8:	e9 16 ff ff ff       	jmpq   ffffffffc00016e3 <gfx_print_char+0x283>
ffffffffc00017cd:	0f 1f 00             	nopl   (%rax)
ffffffffc00017d0:	46 89 1c 81          	mov    %r11d,(%rcx,%r8,4)
ffffffffc00017d4:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffffc00017d9:	eb b7                	jmp    ffffffffc0001792 <gfx_print_char+0x332>
ffffffffc00017db:	44 89 c8             	mov    %r9d,%eax
ffffffffc00017de:	4c 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%r10
ffffffffc00017e5:	00 
ffffffffc00017e6:	c1 e0 04             	shl    $0x4,%eax
ffffffffc00017e9:	48 98                	cltq   
ffffffffc00017eb:	49 01 c2             	add    %rax,%r10
ffffffffc00017ee:	48 39 f1             	cmp    %rsi,%rcx
ffffffffc00017f1:	73 77                	jae    ffffffffc000186a <gfx_print_char+0x40a>
ffffffffc00017f3:	48 8b 15 5e 5d 00 00 	mov    0x5d5e(%rip),%rdx        # ffffffffc0007558 <_gfx_vmem_w>
ffffffffc00017fa:	4c 8b 05 67 5d 00 00 	mov    0x5d67(%rip),%r8        # ffffffffc0007568 <_gfx_vmem>
ffffffffc0001801:	4c 39 94 24 b8 00 00 	cmp    %r10,0xb8(%rsp)
ffffffffc0001808:	00 
ffffffffc0001809:	73 5f                	jae    ffffffffc000186a <gfx_print_char+0x40a>
ffffffffc000180b:	48 8b bc 24 b8 00 00 	mov    0xb8(%rsp),%rdi
ffffffffc0001812:	00 
ffffffffc0001813:	48 8d 1c 95 00 00 00 	lea    0x0(,%rdx,4),%rbx
ffffffffc000181a:	00 
ffffffffc000181b:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
ffffffffc000181f:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffffc0001823:	48 0f af d1          	imul   %rcx,%rdx
ffffffffc0001827:	48 03 94 24 b8 00 00 	add    0xb8(%rsp),%rdx
ffffffffc000182e:	00 
ffffffffc000182f:	4d 8d 0c 90          	lea    (%r8,%rdx,4),%r9
ffffffffc0001833:	4c 8d 5f 01          	lea    0x1(%rdi),%r11
ffffffffc0001837:	48 8d 6f 02          	lea    0x2(%rdi),%rbp
ffffffffc000183b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffffc0001842:	00 
ffffffffc0001843:	48 83 fe 02          	cmp    $0x2,%rsi
ffffffffc0001847:	76 32                	jbe    ffffffffc000187b <gfx_print_char+0x41b>
ffffffffc0001849:	4e 8d 04 0a          	lea    (%rdx,%r9,1),%r8
ffffffffc000184d:	4c 89 c8             	mov    %r9,%rax
ffffffffc0001850:	0f 11 00             	movups %xmm0,(%rax)
ffffffffc0001853:	48 83 c0 10          	add    $0x10,%rax
ffffffffc0001857:	4c 39 c0             	cmp    %r8,%rax
ffffffffc000185a:	75 f4                	jne    ffffffffc0001850 <gfx_print_char+0x3f0>
ffffffffc000185c:	48 83 c1 01          	add    $0x1,%rcx
ffffffffc0001860:	49 01 d9             	add    %rbx,%r9
ffffffffc0001863:	48 39 4c 24 30       	cmp    %rcx,0x30(%rsp)
ffffffffc0001868:	75 d9                	jne    ffffffffc0001843 <gfx_print_char+0x3e3>
ffffffffc000186a:	48 83 c4 68          	add    $0x68,%rsp
ffffffffc000186e:	5b                   	pop    %rbx
ffffffffc000186f:	5e                   	pop    %rsi
ffffffffc0001870:	5f                   	pop    %rdi
ffffffffc0001871:	5d                   	pop    %rbp
ffffffffc0001872:	41 5c                	pop    %r12
ffffffffc0001874:	41 5d                	pop    %r13
ffffffffc0001876:	41 5e                	pop    %r14
ffffffffc0001878:	41 5f                	pop    %r15
ffffffffc000187a:	c3                   	retq   
ffffffffc000187b:	41 c7 01 00 00 00 00 	movl   $0x0,(%r9)
ffffffffc0001882:	4d 39 d3             	cmp    %r10,%r11
ffffffffc0001885:	73 d5                	jae    ffffffffc000185c <gfx_print_char+0x3fc>
ffffffffc0001887:	41 c7 41 04 00 00 00 	movl   $0x0,0x4(%r9)
ffffffffc000188e:	00 
ffffffffc000188f:	4c 39 d5             	cmp    %r10,%rbp
ffffffffc0001892:	73 c8                	jae    ffffffffc000185c <gfx_print_char+0x3fc>
ffffffffc0001894:	41 c7 41 08 00 00 00 	movl   $0x0,0x8(%r9)
ffffffffc000189b:	00 
ffffffffc000189c:	48 83 c1 01          	add    $0x1,%rcx
ffffffffc00018a0:	49 01 d9             	add    %rbx,%r9
ffffffffc00018a3:	48 39 4c 24 30       	cmp    %rcx,0x30(%rsp)
ffffffffc00018a8:	75 99                	jne    ffffffffc0001843 <gfx_print_char+0x3e3>
ffffffffc00018aa:	eb be                	jmp    ffffffffc000186a <gfx_print_char+0x40a>
ffffffffc00018ac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffffc00018b0 <gfx_fill_rect>:
ffffffffc00018b0:	41 57                	push   %r15
ffffffffc00018b2:	41 56                	push   %r14
ffffffffc00018b4:	41 55                	push   %r13
ffffffffc00018b6:	41 54                	push   %r12
ffffffffc00018b8:	55                   	push   %rbp
ffffffffc00018b9:	57                   	push   %rdi
ffffffffc00018ba:	56                   	push   %rsi
ffffffffc00018bb:	53                   	push   %rbx
ffffffffc00018bc:	48 83 ec 18          	sub    $0x18,%rsp
ffffffffc00018c0:	44 8b 9c 24 80 00 00 	mov    0x80(%rsp),%r11d
ffffffffc00018c7:	00 
ffffffffc00018c8:	4c 89 c5             	mov    %r8,%rbp
ffffffffc00018cb:	4d 8d 24 11          	lea    (%r9,%rdx,1),%r12
ffffffffc00018cf:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
ffffffffc00018d4:	4c 89 c7             	mov    %r8,%rdi
ffffffffc00018d7:	48 01 cd             	add    %rcx,%rbp
ffffffffc00018da:	4c 39 e2             	cmp    %r12,%rdx
ffffffffc00018dd:	0f 83 be 00 00 00    	jae    ffffffffc00019a1 <gfx_fill_rect+0xf1>
ffffffffc00018e3:	4c 8b 2d 6e 5c 00 00 	mov    0x5c6e(%rip),%r13        # ffffffffc0007558 <_gfx_vmem_w>
ffffffffc00018ea:	4c 8b 05 77 5c 00 00 	mov    0x5c77(%rip),%r8        # ffffffffc0007568 <_gfx_vmem>
ffffffffc00018f1:	48 39 e9             	cmp    %rbp,%rcx
ffffffffc00018f4:	0f 83 a7 00 00 00    	jae    ffffffffc00019a1 <gfx_fill_rect+0xf1>
ffffffffc00018fa:	48 89 fe             	mov    %rdi,%rsi
ffffffffc00018fd:	48 8d 5f ff          	lea    -0x1(%rdi),%rbx
ffffffffc0001901:	4d 89 e9             	mov    %r13,%r9
ffffffffc0001904:	49 89 fe             	mov    %rdi,%r14
ffffffffc0001907:	48 83 e6 fc          	and    $0xfffffffffffffffc,%rsi
ffffffffc000190b:	4c 0f af ca          	imul   %rdx,%r9
ffffffffc000190f:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffffc0001913:	49 c1 ee 02          	shr    $0x2,%r14
ffffffffc0001917:	48 89 f3             	mov    %rsi,%rbx
ffffffffc000191a:	66 41 0f 6e cb       	movd   %r11d,%xmm1
ffffffffc000191f:	4e 8d 3c ad 00 00 00 	lea    0x0(,%r13,4),%r15
ffffffffc0001926:	00 
ffffffffc0001927:	49 c1 e6 04          	shl    $0x4,%r14
ffffffffc000192b:	48 01 cb             	add    %rcx,%rbx
ffffffffc000192e:	66 0f 70 c1 00       	pshufd $0x0,%xmm1,%xmm0
ffffffffc0001933:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffffc0001938:	49 01 c9             	add    %rcx,%r9
ffffffffc000193b:	4b 8d 04 88          	lea    (%r8,%r9,4),%rax
ffffffffc000193f:	90                   	nop
ffffffffc0001940:	48 83 3c 24 02       	cmpq   $0x2,(%rsp)
ffffffffc0001945:	76 6b                	jbe    ffffffffc00019b2 <gfx_fill_rect+0x102>
ffffffffc0001947:	4d 8d 14 06          	lea    (%r14,%rax,1),%r10
ffffffffc000194b:	48 89 c1             	mov    %rax,%rcx
ffffffffc000194e:	66 90                	xchg   %ax,%ax
ffffffffc0001950:	0f 11 01             	movups %xmm0,(%rcx)
ffffffffc0001953:	48 83 c1 10          	add    $0x10,%rcx
ffffffffc0001957:	4c 39 d1             	cmp    %r10,%rcx
ffffffffc000195a:	75 f4                	jne    ffffffffc0001950 <gfx_fill_rect+0xa0>
ffffffffc000195c:	4d 8d 14 31          	lea    (%r9,%rsi,1),%r10
ffffffffc0001960:	48 39 f7             	cmp    %rsi,%rdi
ffffffffc0001963:	74 2d                	je     ffffffffc0001992 <gfx_fill_rect+0xe2>
ffffffffc0001965:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffffc000196a:	47 89 1c 90          	mov    %r11d,(%r8,%r10,4)
ffffffffc000196e:	4a 8d 1c 95 00 00 00 	lea    0x0(,%r10,4),%rbx
ffffffffc0001975:	00 
ffffffffc0001976:	4c 8d 51 01          	lea    0x1(%rcx),%r10
ffffffffc000197a:	4c 39 d5             	cmp    %r10,%rbp
ffffffffc000197d:	76 13                	jbe    ffffffffc0001992 <gfx_fill_rect+0xe2>
ffffffffc000197f:	48 83 c1 02          	add    $0x2,%rcx
ffffffffc0001983:	45 89 5c 18 04       	mov    %r11d,0x4(%r8,%rbx,1)
ffffffffc0001988:	48 39 cd             	cmp    %rcx,%rbp
ffffffffc000198b:	76 05                	jbe    ffffffffc0001992 <gfx_fill_rect+0xe2>
ffffffffc000198d:	45 89 5c 18 08       	mov    %r11d,0x8(%r8,%rbx,1)
ffffffffc0001992:	48 83 c2 01          	add    $0x1,%rdx
ffffffffc0001996:	4d 01 e9             	add    %r13,%r9
ffffffffc0001999:	4c 01 f8             	add    %r15,%rax
ffffffffc000199c:	49 39 d4             	cmp    %rdx,%r12
ffffffffc000199f:	75 9f                	jne    ffffffffc0001940 <gfx_fill_rect+0x90>
ffffffffc00019a1:	48 83 c4 18          	add    $0x18,%rsp
ffffffffc00019a5:	5b                   	pop    %rbx
ffffffffc00019a6:	5e                   	pop    %rsi
ffffffffc00019a7:	5f                   	pop    %rdi
ffffffffc00019a8:	5d                   	pop    %rbp
ffffffffc00019a9:	41 5c                	pop    %r12
ffffffffc00019ab:	41 5d                	pop    %r13
ffffffffc00019ad:	41 5e                	pop    %r14
ffffffffc00019af:	41 5f                	pop    %r15
ffffffffc00019b1:	c3                   	retq   
ffffffffc00019b2:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
ffffffffc00019b7:	4d 89 ca             	mov    %r9,%r10
ffffffffc00019ba:	eb ae                	jmp    ffffffffc000196a <gfx_fill_rect+0xba>
ffffffffc00019bc:	90                   	nop
ffffffffc00019bd:	90                   	nop
ffffffffc00019be:	90                   	nop
ffffffffc00019bf:	90                   	nop

ffffffffc00019c0 <paging_map_page>:
ffffffffc00019c0:	57                   	push   %rdi
ffffffffc00019c1:	56                   	push   %rsi
ffffffffc00019c2:	53                   	push   %rbx
ffffffffc00019c3:	48 83 ec 30          	sub    $0x30,%rsp
ffffffffc00019c7:	48 89 ce             	mov    %rcx,%rsi
ffffffffc00019ca:	48 89 d7             	mov    %rdx,%rdi
ffffffffc00019cd:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx
ffffffffc00019d3:	0f 85 27 01 00 00    	jne    ffffffffc0001b00 <paging_map_page+0x140>
ffffffffc00019d9:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
ffffffffc00019df:	0f 85 54 01 00 00    	jne    ffffffffc0001b39 <paging_map_page+0x179>
ffffffffc00019e5:	48 89 f0             	mov    %rsi,%rax
ffffffffc00019e8:	4c 8b 05 99 5b 00 00 	mov    0x5b99(%rip),%r8        # ffffffffc0007588 <_pg_pml4>
ffffffffc00019ef:	48 8b 1d 7a 5b 00 00 	mov    0x5b7a(%rip),%rbx        # ffffffffc0007570 <_pg_va_to_pa>
ffffffffc00019f6:	48 c1 e8 24          	shr    $0x24,%rax
ffffffffc00019fa:	25 f8 0f 00 00       	and    $0xff8,%eax
ffffffffc00019ff:	4c 01 c0             	add    %r8,%rax
ffffffffc0001a02:	48 8b 10             	mov    (%rax),%rdx
ffffffffc0001a05:	f6 c2 01             	test   $0x1,%dl
ffffffffc0001a08:	75 2a                	jne    ffffffffc0001a34 <paging_map_page+0x74>
ffffffffc0001a0a:	48 8b 15 67 5b 00 00 	mov    0x5b67(%rip),%rdx        # ffffffffc0007578 <_pg_u_pg>
ffffffffc0001a11:	48 c1 e2 0c          	shl    $0xc,%rdx
ffffffffc0001a15:	4c 01 c2             	add    %r8,%rdx
ffffffffc0001a18:	48 29 da             	sub    %rbx,%rdx
ffffffffc0001a1b:	48 83 ca 03          	or     $0x3,%rdx
ffffffffc0001a1f:	48 89 10             	mov    %rdx,(%rax)
ffffffffc0001a22:	48 8b 1d 47 5b 00 00 	mov    0x5b47(%rip),%rbx        # ffffffffc0007570 <_pg_va_to_pa>
ffffffffc0001a29:	48 83 05 47 5b 00 00 	addq   $0x1,0x5b47(%rip)        # ffffffffc0007578 <_pg_u_pg>
ffffffffc0001a30:	01 
ffffffffc0001a31:	48 8b 10             	mov    (%rax),%rdx
ffffffffc0001a34:	48 89 f1             	mov    %rsi,%rcx
ffffffffc0001a37:	48 81 e2 00 fe ff ff 	and    $0xfffffffffffffe00,%rdx
ffffffffc0001a3e:	48 c1 e9 1b          	shr    $0x1b,%rcx
ffffffffc0001a42:	48 01 da             	add    %rbx,%rdx
ffffffffc0001a45:	81 e1 f8 0f 00 00    	and    $0xff8,%ecx
ffffffffc0001a4b:	48 01 d1             	add    %rdx,%rcx
ffffffffc0001a4e:	48 8b 11             	mov    (%rcx),%rdx
ffffffffc0001a51:	f6 c2 01             	test   $0x1,%dl
ffffffffc0001a54:	75 2a                	jne    ffffffffc0001a80 <paging_map_page+0xc0>
ffffffffc0001a56:	48 8b 05 1b 5b 00 00 	mov    0x5b1b(%rip),%rax        # ffffffffc0007578 <_pg_u_pg>
ffffffffc0001a5d:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffffc0001a61:	4c 01 c0             	add    %r8,%rax
ffffffffc0001a64:	48 29 d8             	sub    %rbx,%rax
ffffffffc0001a67:	48 83 c8 03          	or     $0x3,%rax
ffffffffc0001a6b:	48 89 01             	mov    %rax,(%rcx)
ffffffffc0001a6e:	48 8b 1d fb 5a 00 00 	mov    0x5afb(%rip),%rbx        # ffffffffc0007570 <_pg_va_to_pa>
ffffffffc0001a75:	48 83 05 fb 5a 00 00 	addq   $0x1,0x5afb(%rip)        # ffffffffc0007578 <_pg_u_pg>
ffffffffc0001a7c:	01 
ffffffffc0001a7d:	48 8b 11             	mov    (%rcx),%rdx
ffffffffc0001a80:	48 81 e2 00 fe ff ff 	and    $0xfffffffffffffe00,%rdx
ffffffffc0001a87:	48 8d 0c 1a          	lea    (%rdx,%rbx,1),%rcx
ffffffffc0001a8b:	48 89 f2             	mov    %rsi,%rdx
ffffffffc0001a8e:	48 c1 ea 12          	shr    $0x12,%rdx
ffffffffc0001a92:	81 e2 f8 0f 00 00    	and    $0xff8,%edx
ffffffffc0001a98:	48 01 ca             	add    %rcx,%rdx
ffffffffc0001a9b:	48 8b 02             	mov    (%rdx),%rax
ffffffffc0001a9e:	a8 01                	test   $0x1,%al
ffffffffc0001aa0:	75 2a                	jne    ffffffffc0001acc <paging_map_page+0x10c>
ffffffffc0001aa2:	48 8b 05 cf 5a 00 00 	mov    0x5acf(%rip),%rax        # ffffffffc0007578 <_pg_u_pg>
ffffffffc0001aa9:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffffc0001aad:	49 01 c0             	add    %rax,%r8
ffffffffc0001ab0:	49 29 d8             	sub    %rbx,%r8
ffffffffc0001ab3:	49 83 c8 03          	or     $0x3,%r8
ffffffffc0001ab7:	4c 89 02             	mov    %r8,(%rdx)
ffffffffc0001aba:	48 8b 1d af 5a 00 00 	mov    0x5aaf(%rip),%rbx        # ffffffffc0007570 <_pg_va_to_pa>
ffffffffc0001ac1:	48 83 05 af 5a 00 00 	addq   $0x1,0x5aaf(%rip)        # ffffffffc0007578 <_pg_u_pg>
ffffffffc0001ac8:	01 
ffffffffc0001ac9:	48 8b 02             	mov    (%rdx),%rax
ffffffffc0001acc:	48 25 00 fe ff ff    	and    $0xfffffffffffffe00,%rax
ffffffffc0001ad2:	48 01 d8             	add    %rbx,%rax
ffffffffc0001ad5:	48 89 f3             	mov    %rsi,%rbx
ffffffffc0001ad8:	48 c1 eb 09          	shr    $0x9,%rbx
ffffffffc0001adc:	81 e3 f8 0f 00 00    	and    $0xff8,%ebx
ffffffffc0001ae2:	48 01 c3             	add    %rax,%rbx
ffffffffc0001ae5:	f6 03 01             	testb  $0x1,(%rbx)
ffffffffc0001ae8:	0f 85 82 00 00 00    	jne    ffffffffc0001b70 <paging_map_page+0x1b0>
ffffffffc0001aee:	48 83 cf 03          	or     $0x3,%rdi
ffffffffc0001af2:	48 89 3b             	mov    %rdi,(%rbx)
ffffffffc0001af5:	0f 01 3e             	invlpg (%rsi)
ffffffffc0001af8:	48 83 c4 30          	add    $0x30,%rsp
ffffffffc0001afc:	5b                   	pop    %rbx
ffffffffc0001afd:	5e                   	pop    %rsi
ffffffffc0001afe:	5f                   	pop    %rdi
ffffffffc0001aff:	c3                   	retq   
ffffffffc0001b00:	48 8d 05 b5 43 00 00 	lea    0x43b5(%rip),%rax        # ffffffffc0005ebc <.refptr.lock_create+0x3c>
ffffffffc0001b07:	4c 8d 0d 52 44 00 00 	lea    0x4452(%rip),%r9        # ffffffffc0005f60 <.refptr.lock_create+0xe0>
ffffffffc0001b0e:	41 b8 27 00 00 00    	mov    $0x27,%r8d
ffffffffc0001b14:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc0001b19:	48 8d 15 70 43 00 00 	lea    0x4370(%rip),%rdx        # ffffffffc0005e90 <.refptr.lock_create+0x10>
ffffffffc0001b20:	48 8d 0d 84 43 00 00 	lea    0x4384(%rip),%rcx        # ffffffffc0005eab <.refptr.lock_create+0x2b>
ffffffffc0001b27:	ff 15 33 31 00 00    	callq  *0x3133(%rip)        # ffffffffc0004c60 <.refptr.fatal_error_line>
ffffffffc0001b2d:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
ffffffffc0001b33:	0f 84 ac fe ff ff    	je     ffffffffc00019e5 <paging_map_page+0x25>
ffffffffc0001b39:	48 8d 05 94 43 00 00 	lea    0x4394(%rip),%rax        # ffffffffc0005ed4 <.refptr.lock_create+0x54>
ffffffffc0001b40:	4c 8d 0d 19 44 00 00 	lea    0x4419(%rip),%r9        # ffffffffc0005f60 <.refptr.lock_create+0xe0>
ffffffffc0001b47:	41 b8 28 00 00 00    	mov    $0x28,%r8d
ffffffffc0001b4d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc0001b52:	48 8d 15 37 43 00 00 	lea    0x4337(%rip),%rdx        # ffffffffc0005e90 <.refptr.lock_create+0x10>
ffffffffc0001b59:	48 8d 0d 4b 43 00 00 	lea    0x434b(%rip),%rcx        # ffffffffc0005eab <.refptr.lock_create+0x2b>
ffffffffc0001b60:	ff 15 fa 30 00 00    	callq  *0x30fa(%rip)        # ffffffffc0004c60 <.refptr.fatal_error_line>
ffffffffc0001b66:	e9 7a fe ff ff       	jmpq   ffffffffc00019e5 <paging_map_page+0x25>
ffffffffc0001b6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0001b70:	48 8d 05 79 43 00 00 	lea    0x4379(%rip),%rax        # ffffffffc0005ef0 <.refptr.lock_create+0x70>
ffffffffc0001b77:	4c 8d 0d e2 43 00 00 	lea    0x43e2(%rip),%r9        # ffffffffc0005f60 <.refptr.lock_create+0xe0>
ffffffffc0001b7e:	41 b8 38 00 00 00    	mov    $0x38,%r8d
ffffffffc0001b84:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc0001b89:	48 8d 15 00 43 00 00 	lea    0x4300(%rip),%rdx        # ffffffffc0005e90 <.refptr.lock_create+0x10>
ffffffffc0001b90:	48 8d 0d 14 43 00 00 	lea    0x4314(%rip),%rcx        # ffffffffc0005eab <.refptr.lock_create+0x2b>
ffffffffc0001b97:	ff 15 c3 30 00 00    	callq  *0x30c3(%rip)        # ffffffffc0004c60 <.refptr.fatal_error_line>
ffffffffc0001b9d:	e9 4c ff ff ff       	jmpq   ffffffffc0001aee <paging_map_page+0x12e>
ffffffffc0001ba2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffffc0001ba9:	00 00 00 00 
ffffffffc0001bad:	0f 1f 00             	nopl   (%rax)

ffffffffc0001bb0 <paging_get_phys_pml4>:
ffffffffc0001bb0:	48 8b 05 d1 59 00 00 	mov    0x59d1(%rip),%rax        # ffffffffc0007588 <_pg_pml4>
ffffffffc0001bb7:	48 2b 05 b2 59 00 00 	sub    0x59b2(%rip),%rax        # ffffffffc0007570 <_pg_va_to_pa>
ffffffffc0001bbe:	c3                   	retq   
ffffffffc0001bbf:	90                   	nop

ffffffffc0001bc0 <paging_reverse_translate>:
ffffffffc0001bc0:	53                   	push   %rbx
ffffffffc0001bc1:	48 83 ec 30          	sub    $0x30,%rsp
ffffffffc0001bc5:	48 89 cb             	mov    %rcx,%rbx
ffffffffc0001bc8:	f7 c1 ff 0f 00 00    	test   $0xfff,%ecx
ffffffffc0001bce:	0f 85 9c 00 00 00    	jne    ffffffffc0001c70 <paging_reverse_translate+0xb0>
ffffffffc0001bd4:	48 89 d8             	mov    %rbx,%rax
ffffffffc0001bd7:	48 8b 15 aa 59 00 00 	mov    0x59aa(%rip),%rdx        # ffffffffc0007588 <_pg_pml4>
ffffffffc0001bde:	48 c1 e8 27          	shr    $0x27,%rax
ffffffffc0001be2:	25 ff 01 00 00       	and    $0x1ff,%eax
ffffffffc0001be7:	48 8b 14 c2          	mov    (%rdx,%rax,8),%rdx
ffffffffc0001beb:	48 89 d0             	mov    %rdx,%rax
ffffffffc0001bee:	83 e0 01             	and    $0x1,%eax
ffffffffc0001bf1:	74 74                	je     ffffffffc0001c67 <paging_reverse_translate+0xa7>
ffffffffc0001bf3:	48 89 d8             	mov    %rbx,%rax
ffffffffc0001bf6:	48 8b 0d 73 59 00 00 	mov    0x5973(%rip),%rcx        # ffffffffc0007570 <_pg_va_to_pa>
ffffffffc0001bfd:	48 81 e2 00 fe ff ff 	and    $0xfffffffffffffe00,%rdx
ffffffffc0001c04:	48 c1 e8 1b          	shr    $0x1b,%rax
ffffffffc0001c08:	25 f8 0f 00 00       	and    $0xff8,%eax
ffffffffc0001c0d:	48 01 c8             	add    %rcx,%rax
ffffffffc0001c10:	48 8b 14 10          	mov    (%rax,%rdx,1),%rdx
ffffffffc0001c14:	48 89 d0             	mov    %rdx,%rax
ffffffffc0001c17:	83 e0 01             	and    $0x1,%eax
ffffffffc0001c1a:	74 4b                	je     ffffffffc0001c67 <paging_reverse_translate+0xa7>
ffffffffc0001c1c:	48 89 d8             	mov    %rbx,%rax
ffffffffc0001c1f:	48 81 e2 00 fe ff ff 	and    $0xfffffffffffffe00,%rdx
ffffffffc0001c26:	48 c1 e8 12          	shr    $0x12,%rax
ffffffffc0001c2a:	25 f8 0f 00 00       	and    $0xff8,%eax
ffffffffc0001c2f:	48 01 c8             	add    %rcx,%rax
ffffffffc0001c32:	48 8b 14 10          	mov    (%rax,%rdx,1),%rdx
ffffffffc0001c36:	48 89 d0             	mov    %rdx,%rax
ffffffffc0001c39:	83 e0 01             	and    $0x1,%eax
ffffffffc0001c3c:	74 29                	je     ffffffffc0001c67 <paging_reverse_translate+0xa7>
ffffffffc0001c3e:	48 c1 eb 09          	shr    $0x9,%rbx
ffffffffc0001c42:	48 81 e2 00 fe ff ff 	and    $0xfffffffffffffe00,%rdx
ffffffffc0001c49:	81 e3 f8 0f 00 00    	and    $0xff8,%ebx
ffffffffc0001c4f:	48 01 cb             	add    %rcx,%rbx
ffffffffc0001c52:	48 8b 04 13          	mov    (%rbx,%rdx,1),%rax
ffffffffc0001c56:	48 89 c2             	mov    %rax,%rdx
ffffffffc0001c59:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
ffffffffc0001c60:	83 e0 01             	and    $0x1,%eax
ffffffffc0001c63:	48 0f 45 c2          	cmovne %rdx,%rax
ffffffffc0001c67:	48 83 c4 30          	add    $0x30,%rsp
ffffffffc0001c6b:	5b                   	pop    %rbx
ffffffffc0001c6c:	c3                   	retq   
ffffffffc0001c6d:	0f 1f 00             	nopl   (%rax)
ffffffffc0001c70:	48 8d 05 5d 42 00 00 	lea    0x425d(%rip),%rax        # ffffffffc0005ed4 <.refptr.lock_create+0x54>
ffffffffc0001c77:	4c 8d 0d c2 42 00 00 	lea    0x42c2(%rip),%r9        # ffffffffc0005f40 <.refptr.lock_create+0xc0>
ffffffffc0001c7e:	41 b8 46 00 00 00    	mov    $0x46,%r8d
ffffffffc0001c84:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc0001c89:	48 8d 15 00 42 00 00 	lea    0x4200(%rip),%rdx        # ffffffffc0005e90 <.refptr.lock_create+0x10>
ffffffffc0001c90:	48 8d 0d 14 42 00 00 	lea    0x4214(%rip),%rcx        # ffffffffc0005eab <.refptr.lock_create+0x2b>
ffffffffc0001c97:	ff 15 c3 2f 00 00    	callq  *0x2fc3(%rip)        # ffffffffc0004c60 <.refptr.fatal_error_line>
ffffffffc0001c9d:	e9 32 ff ff ff       	jmpq   ffffffffc0001bd4 <paging_reverse_translate+0x14>
ffffffffc0001ca2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffffc0001ca9:	00 00 00 00 
ffffffffc0001cad:	0f 1f 00             	nopl   (%rax)

ffffffffc0001cb0 <paging_unmap_page>:
ffffffffc0001cb0:	53                   	push   %rbx
ffffffffc0001cb1:	48 83 ec 30          	sub    $0x30,%rsp
ffffffffc0001cb5:	48 89 cb             	mov    %rcx,%rbx
ffffffffc0001cb8:	f7 c1 ff 0f 00 00    	test   $0xfff,%ecx
ffffffffc0001cbe:	0f 85 84 00 00 00    	jne    ffffffffc0001d48 <paging_unmap_page+0x98>
ffffffffc0001cc4:	48 89 d8             	mov    %rbx,%rax
ffffffffc0001cc7:	48 8b 15 ba 58 00 00 	mov    0x58ba(%rip),%rdx        # ffffffffc0007588 <_pg_pml4>
ffffffffc0001cce:	48 c1 e8 27          	shr    $0x27,%rax
ffffffffc0001cd2:	25 ff 01 00 00       	and    $0x1ff,%eax
ffffffffc0001cd7:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
ffffffffc0001cdb:	a8 01                	test   $0x1,%al
ffffffffc0001cdd:	74 5e                	je     ffffffffc0001d3d <paging_unmap_page+0x8d>
ffffffffc0001cdf:	48 89 da             	mov    %rbx,%rdx
ffffffffc0001ce2:	48 8b 0d 87 58 00 00 	mov    0x5887(%rip),%rcx        # ffffffffc0007570 <_pg_va_to_pa>
ffffffffc0001ce9:	48 25 00 fe ff ff    	and    $0xfffffffffffffe00,%rax
ffffffffc0001cef:	48 c1 ea 1b          	shr    $0x1b,%rdx
ffffffffc0001cf3:	81 e2 f8 0f 00 00    	and    $0xff8,%edx
ffffffffc0001cf9:	48 01 ca             	add    %rcx,%rdx
ffffffffc0001cfc:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
ffffffffc0001d00:	a8 01                	test   $0x1,%al
ffffffffc0001d02:	74 39                	je     ffffffffc0001d3d <paging_unmap_page+0x8d>
ffffffffc0001d04:	48 89 da             	mov    %rbx,%rdx
ffffffffc0001d07:	48 25 00 fe ff ff    	and    $0xfffffffffffffe00,%rax
ffffffffc0001d0d:	48 c1 ea 12          	shr    $0x12,%rdx
ffffffffc0001d11:	81 e2 f8 0f 00 00    	and    $0xff8,%edx
ffffffffc0001d17:	48 01 ca             	add    %rcx,%rdx
ffffffffc0001d1a:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
ffffffffc0001d1e:	a8 01                	test   $0x1,%al
ffffffffc0001d20:	74 1b                	je     ffffffffc0001d3d <paging_unmap_page+0x8d>
ffffffffc0001d22:	48 c1 eb 09          	shr    $0x9,%rbx
ffffffffc0001d26:	48 25 00 fe ff ff    	and    $0xfffffffffffffe00,%rax
ffffffffc0001d2c:	81 e3 f8 0f 00 00    	and    $0xff8,%ebx
ffffffffc0001d32:	48 01 cb             	add    %rcx,%rbx
ffffffffc0001d35:	48 c7 04 03 00 00 00 	movq   $0x0,(%rbx,%rax,1)
ffffffffc0001d3c:	00 
ffffffffc0001d3d:	48 83 c4 30          	add    $0x30,%rsp
ffffffffc0001d41:	5b                   	pop    %rbx
ffffffffc0001d42:	c3                   	retq   
ffffffffc0001d43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0001d48:	48 8d 05 85 41 00 00 	lea    0x4185(%rip),%rax        # ffffffffc0005ed4 <.refptr.lock_create+0x54>
ffffffffc0001d4f:	4c 8d 0d ca 41 00 00 	lea    0x41ca(%rip),%r9        # ffffffffc0005f20 <.refptr.lock_create+0xa0>
ffffffffc0001d56:	41 b8 5c 00 00 00    	mov    $0x5c,%r8d
ffffffffc0001d5c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc0001d61:	48 8d 15 28 41 00 00 	lea    0x4128(%rip),%rdx        # ffffffffc0005e90 <.refptr.lock_create+0x10>
ffffffffc0001d68:	48 8d 0d 3c 41 00 00 	lea    0x413c(%rip),%rcx        # ffffffffc0005eab <.refptr.lock_create+0x2b>
ffffffffc0001d6f:	ff 15 eb 2e 00 00    	callq  *0x2eeb(%rip)        # ffffffffc0004c60 <.refptr.fatal_error_line>
ffffffffc0001d75:	e9 4a ff ff ff       	jmpq   ffffffffc0001cc4 <paging_unmap_page+0x14>
ffffffffc0001d7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffffc0001d80 <paging_identity_map>:
ffffffffc0001d80:	57                   	push   %rdi
ffffffffc0001d81:	56                   	push   %rsi
ffffffffc0001d82:	53                   	push   %rbx
ffffffffc0001d83:	48 83 ec 20          	sub    $0x20,%rsp
ffffffffc0001d87:	48 89 cb             	mov    %rcx,%rbx
ffffffffc0001d8a:	48 89 d6             	mov    %rdx,%rsi
ffffffffc0001d8d:	48 85 d2             	test   %rdx,%rdx
ffffffffc0001d90:	74 23                	je     ffffffffc0001db5 <paging_identity_map+0x35>
ffffffffc0001d92:	48 8d 3d 27 fc ff ff 	lea    -0x3d9(%rip),%rdi        # ffffffffc00019c0 <paging_map_page>
ffffffffc0001d99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0001da0:	48 89 da             	mov    %rbx,%rdx
ffffffffc0001da3:	48 89 d9             	mov    %rbx,%rcx
ffffffffc0001da6:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
ffffffffc0001dad:	ff d7                	callq  *%rdi
ffffffffc0001daf:	48 83 ee 01          	sub    $0x1,%rsi
ffffffffc0001db3:	75 eb                	jne    ffffffffc0001da0 <paging_identity_map+0x20>
ffffffffc0001db5:	48 83 c4 20          	add    $0x20,%rsp
ffffffffc0001db9:	5b                   	pop    %rbx
ffffffffc0001dba:	5e                   	pop    %rsi
ffffffffc0001dbb:	5f                   	pop    %rdi
ffffffffc0001dbc:	c3                   	retq   
ffffffffc0001dbd:	0f 1f 00             	nopl   (%rax)

ffffffffc0001dc0 <paging_identity_unmap>:
ffffffffc0001dc0:	41 54                	push   %r12
ffffffffc0001dc2:	55                   	push   %rbp
ffffffffc0001dc3:	57                   	push   %rdi
ffffffffc0001dc4:	56                   	push   %rsi
ffffffffc0001dc5:	53                   	push   %rbx
ffffffffc0001dc6:	48 83 ec 30          	sub    $0x30,%rsp
ffffffffc0001dca:	48 89 cb             	mov    %rcx,%rbx
ffffffffc0001dcd:	49 89 d4             	mov    %rdx,%r12
ffffffffc0001dd0:	48 85 d2             	test   %rdx,%rdx
ffffffffc0001dd3:	0f 84 d7 00 00 00    	je     ffffffffc0001eb0 <paging_identity_unmap+0xf0>
ffffffffc0001dd9:	48 8b 35 80 2e 00 00 	mov    0x2e80(%rip),%rsi        # ffffffffc0004c60 <.refptr.fatal_error_line>
ffffffffc0001de0:	48 8d 3d ed 40 00 00 	lea    0x40ed(%rip),%rdi        # ffffffffc0005ed4 <.refptr.lock_create+0x54>
ffffffffc0001de7:	48 8d 2d 32 41 00 00 	lea    0x4132(%rip),%rbp        # ffffffffc0005f20 <.refptr.lock_create+0xa0>
ffffffffc0001dee:	e9 8e 00 00 00       	jmpq   ffffffffc0001e81 <paging_identity_unmap+0xc1>
ffffffffc0001df3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0001df8:	48 89 d8             	mov    %rbx,%rax
ffffffffc0001dfb:	48 8b 15 86 57 00 00 	mov    0x5786(%rip),%rdx        # ffffffffc0007588 <_pg_pml4>
ffffffffc0001e02:	48 c1 e8 27          	shr    $0x27,%rax
ffffffffc0001e06:	25 ff 01 00 00       	and    $0x1ff,%eax
ffffffffc0001e0b:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
ffffffffc0001e0f:	a8 01                	test   $0x1,%al
ffffffffc0001e11:	74 61                	je     ffffffffc0001e74 <paging_identity_unmap+0xb4>
ffffffffc0001e13:	48 89 da             	mov    %rbx,%rdx
ffffffffc0001e16:	48 8b 0d 53 57 00 00 	mov    0x5753(%rip),%rcx        # ffffffffc0007570 <_pg_va_to_pa>
ffffffffc0001e1d:	48 25 00 fe ff ff    	and    $0xfffffffffffffe00,%rax
ffffffffc0001e23:	48 c1 ea 1b          	shr    $0x1b,%rdx
ffffffffc0001e27:	81 e2 f8 0f 00 00    	and    $0xff8,%edx
ffffffffc0001e2d:	48 01 ca             	add    %rcx,%rdx
ffffffffc0001e30:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
ffffffffc0001e34:	a8 01                	test   $0x1,%al
ffffffffc0001e36:	74 3c                	je     ffffffffc0001e74 <paging_identity_unmap+0xb4>
ffffffffc0001e38:	48 89 da             	mov    %rbx,%rdx
ffffffffc0001e3b:	48 25 00 fe ff ff    	and    $0xfffffffffffffe00,%rax
ffffffffc0001e41:	48 c1 ea 12          	shr    $0x12,%rdx
ffffffffc0001e45:	81 e2 f8 0f 00 00    	and    $0xff8,%edx
ffffffffc0001e4b:	48 01 ca             	add    %rcx,%rdx
ffffffffc0001e4e:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
ffffffffc0001e52:	a8 01                	test   $0x1,%al
ffffffffc0001e54:	74 1e                	je     ffffffffc0001e74 <paging_identity_unmap+0xb4>
ffffffffc0001e56:	48 89 da             	mov    %rbx,%rdx
ffffffffc0001e59:	48 25 00 fe ff ff    	and    $0xfffffffffffffe00,%rax
ffffffffc0001e5f:	48 c1 ea 09          	shr    $0x9,%rdx
ffffffffc0001e63:	81 e2 f8 0f 00 00    	and    $0xff8,%edx
ffffffffc0001e69:	48 01 d1             	add    %rdx,%rcx
ffffffffc0001e6c:	48 c7 04 01 00 00 00 	movq   $0x0,(%rcx,%rax,1)
ffffffffc0001e73:	00 
ffffffffc0001e74:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
ffffffffc0001e7b:	49 83 ec 01          	sub    $0x1,%r12
ffffffffc0001e7f:	74 2f                	je     ffffffffc0001eb0 <paging_identity_unmap+0xf0>
ffffffffc0001e81:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx
ffffffffc0001e87:	0f 84 6b ff ff ff    	je     ffffffffc0001df8 <paging_identity_unmap+0x38>
ffffffffc0001e8d:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
ffffffffc0001e92:	49 89 e9             	mov    %rbp,%r9
ffffffffc0001e95:	41 b8 5c 00 00 00    	mov    $0x5c,%r8d
ffffffffc0001e9b:	48 8d 15 ee 3f 00 00 	lea    0x3fee(%rip),%rdx        # ffffffffc0005e90 <.refptr.lock_create+0x10>
ffffffffc0001ea2:	48 8d 0d 02 40 00 00 	lea    0x4002(%rip),%rcx        # ffffffffc0005eab <.refptr.lock_create+0x2b>
ffffffffc0001ea9:	ff d6                	callq  *%rsi
ffffffffc0001eab:	e9 48 ff ff ff       	jmpq   ffffffffc0001df8 <paging_identity_unmap+0x38>
ffffffffc0001eb0:	48 83 c4 30          	add    $0x30,%rsp
ffffffffc0001eb4:	5b                   	pop    %rbx
ffffffffc0001eb5:	5e                   	pop    %rsi
ffffffffc0001eb6:	5f                   	pop    %rdi
ffffffffc0001eb7:	5d                   	pop    %rbp
ffffffffc0001eb8:	41 5c                	pop    %r12
ffffffffc0001eba:	c3                   	retq   
ffffffffc0001ebb:	90                   	nop
ffffffffc0001ebc:	90                   	nop
ffffffffc0001ebd:	90                   	nop
ffffffffc0001ebe:	90                   	nop
ffffffffc0001ebf:	90                   	nop

ffffffffc0001ec0 <pm_get_free>:
ffffffffc0001ec0:	4c 8b 05 c9 56 00 00 	mov    0x56c9(%rip),%r8        # ffffffffc0007590 <_pg_dt>
ffffffffc0001ec7:	45 31 c9             	xor    %r9d,%r9d
ffffffffc0001eca:	4d 8b 50 08          	mov    0x8(%r8),%r10
ffffffffc0001ece:	4d 85 d2             	test   %r10,%r10
ffffffffc0001ed1:	74 63                	je     ffffffffc0001f36 <pm_get_free+0x76>
ffffffffc0001ed3:	49 8b 40 10          	mov    0x10(%r8),%rax
ffffffffc0001ed7:	41 0f b6 50 18       	movzbl 0x18(%r8),%edx
ffffffffc0001edc:	49 89 c1             	mov    %rax,%r9
ffffffffc0001edf:	48 89 d1             	mov    %rdx,%rcx
ffffffffc0001ee2:	49 c1 e1 06          	shl    $0x6,%r9
ffffffffc0001ee6:	49 01 d1             	add    %rdx,%r9
ffffffffc0001ee9:	48 c7 c2 fe ff ff ff 	mov    $0xfffffffffffffffe,%rdx
ffffffffc0001ef0:	48 d3 c2             	rol    %cl,%rdx
ffffffffc0001ef3:	49 c1 e1 0c          	shl    $0xc,%r9
ffffffffc0001ef7:	49 23 54 c0 20       	and    0x20(%r8,%rax,8),%rdx
ffffffffc0001efc:	49 83 ea 01          	sub    $0x1,%r10
ffffffffc0001f00:	49 89 54 c0 20       	mov    %rdx,0x20(%r8,%rax,8)
ffffffffc0001f05:	4d 89 50 08          	mov    %r10,0x8(%r8)
ffffffffc0001f09:	74 2b                	je     ffffffffc0001f36 <pm_get_free+0x76>
ffffffffc0001f0b:	48 85 d2             	test   %rdx,%rdx
ffffffffc0001f0e:	75 1d                	jne    ffffffffc0001f2d <pm_get_free+0x6d>
ffffffffc0001f10:	48 83 c0 01          	add    $0x1,%rax
ffffffffc0001f14:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffffc0001f18:	48 89 c1             	mov    %rax,%rcx
ffffffffc0001f1b:	48 83 c0 01          	add    $0x1,%rax
ffffffffc0001f1f:	49 8b 54 c0 18       	mov    0x18(%r8,%rax,8),%rdx
ffffffffc0001f24:	48 85 d2             	test   %rdx,%rdx
ffffffffc0001f27:	74 ef                	je     ffffffffc0001f18 <pm_get_free+0x58>
ffffffffc0001f29:	49 89 48 10          	mov    %rcx,0x10(%r8)
ffffffffc0001f2d:	f3 48 0f bc d2       	tzcnt  %rdx,%rdx
ffffffffc0001f32:	41 88 50 18          	mov    %dl,0x18(%r8)
ffffffffc0001f36:	4c 89 c8             	mov    %r9,%rax
ffffffffc0001f39:	c3                   	retq   
ffffffffc0001f3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffffc0001f40 <pm_set_free>:
ffffffffc0001f40:	48 8b 05 49 56 00 00 	mov    0x5649(%rip),%rax        # ffffffffc0007590 <_pg_dt>
ffffffffc0001f47:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffffc0001f4d:	48 89 ca             	mov    %rcx,%rdx
ffffffffc0001f50:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffffc0001f54:	48 c1 ea 12          	shr    $0x12,%rdx
ffffffffc0001f58:	83 e1 3f             	and    $0x3f,%ecx
ffffffffc0001f5b:	49 d3 e0             	shl    %cl,%r8
ffffffffc0001f5e:	4c 09 44 d0 20       	or     %r8,0x20(%rax,%rdx,8)
ffffffffc0001f63:	48 39 50 10          	cmp    %rdx,0x10(%rax)
ffffffffc0001f67:	76 0c                	jbe    ffffffffc0001f75 <pm_set_free+0x35>
ffffffffc0001f69:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffffc0001f6d:	38 48 18             	cmp    %cl,0x18(%rax)
ffffffffc0001f70:	76 03                	jbe    ffffffffc0001f75 <pm_set_free+0x35>
ffffffffc0001f72:	88 48 18             	mov    %cl,0x18(%rax)
ffffffffc0001f75:	c3                   	retq   
ffffffffc0001f76:	90                   	nop
ffffffffc0001f77:	90                   	nop
ffffffffc0001f78:	90                   	nop
ffffffffc0001f79:	90                   	nop
ffffffffc0001f7a:	90                   	nop
ffffffffc0001f7b:	90                   	nop
ffffffffc0001f7c:	90                   	nop
ffffffffc0001f7d:	90                   	nop
ffffffffc0001f7e:	90                   	nop
ffffffffc0001f7f:	90                   	nop

ffffffffc0001f80 <_vm_pg_f_handler>:
ffffffffc0001f80:	41 55                	push   %r13
ffffffffc0001f82:	41 54                	push   %r12
ffffffffc0001f84:	48 83 ec 28          	sub    $0x28,%rsp
ffffffffc0001f88:	45 31 ed             	xor    %r13d,%r13d
ffffffffc0001f8b:	ff 15 ef 40 00 00    	callq  *0x40ef(%rip)        # ffffffffc0006080 <.refptr.asm_get_cr2>
ffffffffc0001f91:	48 8b 15 08 56 00 00 	mov    0x5608(%rip),%rdx        # ffffffffc00075a0 <_vm_dt>
ffffffffc0001f98:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
ffffffffc0001f9e:	49 89 c4             	mov    %rax,%r12
ffffffffc0001fa1:	48 8b 42 08          	mov    0x8(%rdx),%rax
ffffffffc0001fa5:	4c 39 e0             	cmp    %r12,%rax
ffffffffc0001fa8:	77 26                	ja     ffffffffc0001fd0 <_vm_pg_f_handler+0x50>
ffffffffc0001faa:	4d 89 e0             	mov    %r12,%r8
ffffffffc0001fad:	49 29 c0             	sub    %rax,%r8
ffffffffc0001fb0:	4c 89 c1             	mov    %r8,%rcx
ffffffffc0001fb3:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffffc0001fb7:	49 81 f8 ff ff ff 3f 	cmp    $0x3fffffff,%r8
ffffffffc0001fbe:	77 10                	ja     ffffffffc0001fd0 <_vm_pg_f_handler+0x50>
ffffffffc0001fc0:	49 c1 e8 12          	shr    $0x12,%r8
ffffffffc0001fc4:	4a 8b 44 c2 10       	mov    0x10(%rdx,%r8,8),%rax
ffffffffc0001fc9:	48 d3 e8             	shr    %cl,%rax
ffffffffc0001fcc:	a8 01                	test   $0x1,%al
ffffffffc0001fce:	75 10                	jne    ffffffffc0001fe0 <_vm_pg_f_handler+0x60>
ffffffffc0001fd0:	44 89 e8             	mov    %r13d,%eax
ffffffffc0001fd3:	48 83 c4 28          	add    $0x28,%rsp
ffffffffc0001fd7:	41 5c                	pop    %r12
ffffffffc0001fd9:	41 5d                	pop    %r13
ffffffffc0001fdb:	c3                   	retq   
ffffffffc0001fdc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffffc0001fe0:	ff 15 8a 40 00 00    	callq  *0x408a(%rip)        # ffffffffc0006070 <.refptr.pm_get_free>
ffffffffc0001fe6:	48 89 c2             	mov    %rax,%rdx
ffffffffc0001fe9:	48 85 c0             	test   %rax,%rax
ffffffffc0001fec:	75 12                	jne    ffffffffc0002000 <_vm_pg_f_handler+0x80>
ffffffffc0001fee:	48 8d 0d eb 3f 00 00 	lea    0x3feb(%rip),%rcx        # ffffffffc0005fe0 <.refptr.paging_map_page+0x10>
ffffffffc0001ff5:	ff 15 65 40 00 00    	callq  *0x4065(%rip)        # ffffffffc0006060 <.refptr.fatal_error>
ffffffffc0001ffb:	eb d3                	jmp    ffffffffc0001fd0 <_vm_pg_f_handler+0x50>
ffffffffc0001ffd:	0f 1f 00             	nopl   (%rax)
ffffffffc0002000:	4c 89 e1             	mov    %r12,%rcx
ffffffffc0002003:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffffc0002009:	ff 15 c1 3f 00 00    	callq  *0x3fc1(%rip)        # ffffffffc0005fd0 <.refptr.paging_map_page>
ffffffffc000200f:	eb bf                	jmp    ffffffffc0001fd0 <_vm_pg_f_handler+0x50>
ffffffffc0002011:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffffc0002018:	00 00 00 00 
ffffffffc000201c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffffc0002020 <vm_reserve>:
ffffffffc0002020:	41 54                	push   %r12
ffffffffc0002022:	53                   	push   %rbx
ffffffffc0002023:	4c 8b 0d 76 55 00 00 	mov    0x5576(%rip),%r9        # ffffffffc00075a0 <_vm_dt>
ffffffffc000202a:	4d 8b 21             	mov    (%r9),%r12
ffffffffc000202d:	49 89 cb             	mov    %rcx,%r11
ffffffffc0002030:	48 85 c9             	test   %rcx,%rcx
ffffffffc0002033:	74 43                	je     ffffffffc0002078 <vm_reserve+0x58>
ffffffffc0002035:	4c 89 e0             	mov    %r12,%rax
ffffffffc0002038:	48 89 ca             	mov    %rcx,%rdx
ffffffffc000203b:	49 2b 41 08          	sub    0x8(%r9),%rax
ffffffffc000203f:	41 ba 01 00 00 00    	mov    $0x1,%r10d
ffffffffc0002045:	0f 1f 00             	nopl   (%rax)
ffffffffc0002048:	49 89 c0             	mov    %rax,%r8
ffffffffc000204b:	48 89 c1             	mov    %rax,%rcx
ffffffffc000204e:	4c 89 d3             	mov    %r10,%rbx
ffffffffc0002051:	48 05 00 10 00 00    	add    $0x1000,%rax
ffffffffc0002057:	49 c1 e8 12          	shr    $0x12,%r8
ffffffffc000205b:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffffc000205f:	48 d3 e3             	shl    %cl,%rbx
ffffffffc0002062:	4b 09 5c c1 10       	or     %rbx,0x10(%r9,%r8,8)
ffffffffc0002067:	48 83 ea 01          	sub    $0x1,%rdx
ffffffffc000206b:	75 db                	jne    ffffffffc0002048 <vm_reserve+0x28>
ffffffffc000206d:	49 c1 e3 0c          	shl    $0xc,%r11
ffffffffc0002071:	4b 8d 04 23          	lea    (%r11,%r12,1),%rax
ffffffffc0002075:	49 89 01             	mov    %rax,(%r9)
ffffffffc0002078:	4c 89 e0             	mov    %r12,%rax
ffffffffc000207b:	5b                   	pop    %rbx
ffffffffc000207c:	41 5c                	pop    %r12
ffffffffc000207e:	c3                   	retq   
ffffffffc000207f:	90                   	nop

ffffffffc0002080 <vm_commit>:
ffffffffc0002080:	41 54                	push   %r12
ffffffffc0002082:	55                   	push   %rbp
ffffffffc0002083:	57                   	push   %rdi
ffffffffc0002084:	56                   	push   %rsi
ffffffffc0002085:	53                   	push   %rbx
ffffffffc0002086:	48 83 ec 20          	sub    $0x20,%rsp
ffffffffc000208a:	48 8b 05 0f 55 00 00 	mov    0x550f(%rip),%rax        # ffffffffc00075a0 <_vm_dt>
ffffffffc0002091:	4c 8b 20             	mov    (%rax),%r12
ffffffffc0002094:	48 89 cb             	mov    %rcx,%rbx
ffffffffc0002097:	48 85 c9             	test   %rcx,%rcx
ffffffffc000209a:	74 76                	je     ffffffffc0002112 <vm_commit+0x92>
ffffffffc000209c:	48 8b 35 cd 3f 00 00 	mov    0x3fcd(%rip),%rsi        # ffffffffc0006070 <.refptr.pm_get_free>
ffffffffc00020a3:	48 8b 3d 26 3f 00 00 	mov    0x3f26(%rip),%rdi        # ffffffffc0005fd0 <.refptr.paging_map_page>
ffffffffc00020aa:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffffc00020af:	eb 47                	jmp    ffffffffc00020f8 <vm_commit+0x78>
ffffffffc00020b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc00020b8:	48 8b 05 e1 54 00 00 	mov    0x54e1(%rip),%rax        # ffffffffc00075a0 <_vm_dt>
ffffffffc00020bf:	49 89 ea             	mov    %rbp,%r10
ffffffffc00020c2:	4c 8b 00             	mov    (%rax),%r8
ffffffffc00020c5:	4c 89 c1             	mov    %r8,%rcx
ffffffffc00020c8:	48 2b 48 08          	sub    0x8(%rax),%rcx
ffffffffc00020cc:	49 89 c9             	mov    %rcx,%r9
ffffffffc00020cf:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffffc00020d3:	49 c1 e9 12          	shr    $0x12,%r9
ffffffffc00020d7:	49 d3 e2             	shl    %cl,%r10
ffffffffc00020da:	4c 89 c1             	mov    %r8,%rcx
ffffffffc00020dd:	4e 09 54 c8 10       	or     %r10,0x10(%rax,%r9,8)
ffffffffc00020e2:	ff d7                	callq  *%rdi
ffffffffc00020e4:	48 8b 05 b5 54 00 00 	mov    0x54b5(%rip),%rax        # ffffffffc00075a0 <_vm_dt>
ffffffffc00020eb:	48 81 00 00 10 00 00 	addq   $0x1000,(%rax)
ffffffffc00020f2:	48 83 eb 01          	sub    $0x1,%rbx
ffffffffc00020f6:	74 1a                	je     ffffffffc0002112 <vm_commit+0x92>
ffffffffc00020f8:	ff d6                	callq  *%rsi
ffffffffc00020fa:	48 89 c2             	mov    %rax,%rdx
ffffffffc00020fd:	48 85 c0             	test   %rax,%rax
ffffffffc0002100:	75 b6                	jne    ffffffffc00020b8 <vm_commit+0x38>
ffffffffc0002102:	48 8d 0d d7 3e 00 00 	lea    0x3ed7(%rip),%rcx        # ffffffffc0005fe0 <.refptr.paging_map_page+0x10>
ffffffffc0002109:	45 31 e4             	xor    %r12d,%r12d
ffffffffc000210c:	ff 15 4e 3f 00 00    	callq  *0x3f4e(%rip)        # ffffffffc0006060 <.refptr.fatal_error>
ffffffffc0002112:	4c 89 e0             	mov    %r12,%rax
ffffffffc0002115:	48 83 c4 20          	add    $0x20,%rsp
ffffffffc0002119:	5b                   	pop    %rbx
ffffffffc000211a:	5e                   	pop    %rsi
ffffffffc000211b:	5f                   	pop    %rdi
ffffffffc000211c:	5d                   	pop    %rbp
ffffffffc000211d:	41 5c                	pop    %r12
ffffffffc000211f:	c3                   	retq   

ffffffffc0002120 <vm_release>:
ffffffffc0002120:	41 55                	push   %r13
ffffffffc0002122:	41 54                	push   %r12
ffffffffc0002124:	55                   	push   %rbp
ffffffffc0002125:	57                   	push   %rdi
ffffffffc0002126:	56                   	push   %rsi
ffffffffc0002127:	53                   	push   %rbx
ffffffffc0002128:	48 83 ec 28          	sub    $0x28,%rsp
ffffffffc000212c:	48 89 cb             	mov    %rcx,%rbx
ffffffffc000212f:	48 89 d6             	mov    %rdx,%rsi
ffffffffc0002132:	48 85 d2             	test   %rdx,%rdx
ffffffffc0002135:	74 71                	je     ffffffffc00021a8 <vm_release+0x88>
ffffffffc0002137:	48 8b 2d f2 3e 00 00 	mov    0x3ef2(%rip),%rbp        # ffffffffc0006030 <.refptr.paging_reverse_translate>
ffffffffc000213e:	4c 8b 2d db 3e 00 00 	mov    0x3edb(%rip),%r13        # ffffffffc0006020 <.refptr.pm_set_free>
ffffffffc0002145:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffffc000214a:	4c 8b 25 bf 3e 00 00 	mov    0x3ebf(%rip),%r12        # ffffffffc0006010 <.refptr.paging_unmap_page>
ffffffffc0002151:	eb 39                	jmp    ffffffffc000218c <vm_release+0x6c>
ffffffffc0002153:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0002158:	48 8b 05 41 54 00 00 	mov    0x5441(%rip),%rax        # ffffffffc00075a0 <_vm_dt>
ffffffffc000215f:	48 89 d9             	mov    %rbx,%rcx
ffffffffc0002162:	48 89 fa             	mov    %rdi,%rdx
ffffffffc0002165:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
ffffffffc000216c:	48 2b 48 08          	sub    0x8(%rax),%rcx
ffffffffc0002170:	49 89 c8             	mov    %rcx,%r8
ffffffffc0002173:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffffc0002177:	49 c1 e8 12          	shr    $0x12,%r8
ffffffffc000217b:	48 d3 e2             	shl    %cl,%rdx
ffffffffc000217e:	48 f7 d2             	not    %rdx
ffffffffc0002181:	4a 21 54 c0 10       	and    %rdx,0x10(%rax,%r8,8)
ffffffffc0002186:	48 83 ee 01          	sub    $0x1,%rsi
ffffffffc000218a:	74 1c                	je     ffffffffc00021a8 <vm_release+0x88>
ffffffffc000218c:	48 89 d9             	mov    %rbx,%rcx
ffffffffc000218f:	ff d5                	callq  *%rbp
ffffffffc0002191:	48 85 c0             	test   %rax,%rax
ffffffffc0002194:	74 c2                	je     ffffffffc0002158 <vm_release+0x38>
ffffffffc0002196:	48 89 c1             	mov    %rax,%rcx
ffffffffc0002199:	41 ff d5             	callq  *%r13
ffffffffc000219c:	48 89 d9             	mov    %rbx,%rcx
ffffffffc000219f:	41 ff d4             	callq  *%r12
ffffffffc00021a2:	eb b4                	jmp    ffffffffc0002158 <vm_release+0x38>
ffffffffc00021a4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffffc00021a8:	48 83 c4 28          	add    $0x28,%rsp
ffffffffc00021ac:	5b                   	pop    %rbx
ffffffffc00021ad:	5e                   	pop    %rsi
ffffffffc00021ae:	5f                   	pop    %rdi
ffffffffc00021af:	5d                   	pop    %rbp
ffffffffc00021b0:	41 5c                	pop    %r12
ffffffffc00021b2:	41 5d                	pop    %r13
ffffffffc00021b4:	c3                   	retq   
ffffffffc00021b5:	90                   	nop
ffffffffc00021b6:	90                   	nop
ffffffffc00021b7:	90                   	nop
ffffffffc00021b8:	90                   	nop
ffffffffc00021b9:	90                   	nop
ffffffffc00021ba:	90                   	nop
ffffffffc00021bb:	90                   	nop
ffffffffc00021bc:	90                   	nop
ffffffffc00021bd:	90                   	nop
ffffffffc00021be:	90                   	nop
ffffffffc00021bf:	90                   	nop

ffffffffc00021c0 <lock_create>:
ffffffffc00021c0:	41 54                	push   %r12
ffffffffc00021c2:	53                   	push   %rbx
ffffffffc00021c3:	48 83 ec 28          	sub    $0x28,%rsp
ffffffffc00021c7:	44 8b 25 e2 53 00 00 	mov    0x53e2(%rip),%r12d        # ffffffffc00075b0 <_nsi>
ffffffffc00021ce:	4c 03 25 e3 53 00 00 	add    0x53e3(%rip),%r12        # ffffffffc00075b8 <sl>
ffffffffc00021d5:	48 8d 1d c9 3e 00 00 	lea    0x3ec9(%rip),%rbx        # ffffffffc00060a5 <.refptr.asm_get_cr2+0x25>
ffffffffc00021dc:	41 c6 04 24 00       	movb   $0x0,(%r12)
ffffffffc00021e1:	8b 05 c9 53 00 00    	mov    0x53c9(%rip),%eax        # ffffffffc00075b0 <_nsi>
ffffffffc00021e7:	83 c0 01             	add    $0x1,%eax
ffffffffc00021ea:	89 05 c0 53 00 00    	mov    %eax,0x53c0(%rip)        # ffffffffc00075b0 <_nsi>
ffffffffc00021f0:	48 8b 0d c1 53 00 00 	mov    0x53c1(%rip),%rcx        # ffffffffc00075b8 <sl>
ffffffffc00021f7:	eb 17                	jmp    ffffffffc0002210 <lock_create+0x50>
ffffffffc00021f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0002200:	83 c0 01             	add    $0x1,%eax
ffffffffc0002203:	89 05 a7 53 00 00    	mov    %eax,0x53a7(%rip)        # ffffffffc00075b0 <_nsi>
ffffffffc0002209:	3d ff 7f 00 00       	cmp    $0x7fff,%eax
ffffffffc000220e:	77 18                	ja     ffffffffc0002228 <lock_create+0x68>
ffffffffc0002210:	89 c2                	mov    %eax,%edx
ffffffffc0002212:	80 3c 11 ff          	cmpb   $0xff,(%rcx,%rdx,1)
ffffffffc0002216:	75 e8                	jne    ffffffffc0002200 <lock_create+0x40>
ffffffffc0002218:	4c 89 e0             	mov    %r12,%rax
ffffffffc000221b:	48 83 c4 28          	add    $0x28,%rsp
ffffffffc000221f:	5b                   	pop    %rbx
ffffffffc0002220:	41 5c                	pop    %r12
ffffffffc0002222:	c3                   	retq   
ffffffffc0002223:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0002228:	48 89 d9             	mov    %rbx,%rcx
ffffffffc000222b:	ff 15 2f 3e 00 00    	callq  *0x3e2f(%rip)        # ffffffffc0006060 <.refptr.fatal_error>
ffffffffc0002231:	8b 05 79 53 00 00    	mov    0x5379(%rip),%eax        # ffffffffc00075b0 <_nsi>
ffffffffc0002237:	eb b7                	jmp    ffffffffc00021f0 <lock_create+0x30>
ffffffffc0002239:	90                   	nop
ffffffffc000223a:	90                   	nop
ffffffffc000223b:	90                   	nop
ffffffffc000223c:	90                   	nop
ffffffffc000223d:	90                   	nop
ffffffffc000223e:	90                   	nop
ffffffffc000223f:	90                   	nop

ffffffffc0002240 <process_create>:
ffffffffc0002240:	41 54                	push   %r12
ffffffffc0002242:	48 83 ec 20          	sub    $0x20,%rsp
ffffffffc0002246:	8b 05 7c 53 00 00    	mov    0x537c(%rip),%eax        # ffffffffc00075c8 <_npi>
ffffffffc000224c:	4c 8b 05 7d 53 00 00 	mov    0x537d(%rip),%r8        # ffffffffc00075d0 <pl>
ffffffffc0002253:	49 89 c4             	mov    %rax,%r12
ffffffffc0002256:	48 89 c2             	mov    %rax,%rdx
ffffffffc0002259:	49 c1 e4 07          	shl    $0x7,%r12
ffffffffc000225d:	83 c2 01             	add    $0x1,%edx
ffffffffc0002260:	49 01 c4             	add    %rax,%r12
ffffffffc0002263:	49 c1 e4 04          	shl    $0x4,%r12
ffffffffc0002267:	4d 01 c4             	add    %r8,%r12
ffffffffc000226a:	01 c9                	add    %ecx,%ecx
ffffffffc000226c:	41 c7 44 24 08 00 00 	movl   $0x0,0x8(%r12)
ffffffffc0002273:	00 00 
ffffffffc0002275:	41 0a 0c 24          	or     (%r12),%cl
ffffffffc0002279:	83 c9 01             	or     $0x1,%ecx
ffffffffc000227c:	41 88 0c 24          	mov    %cl,(%r12)
ffffffffc0002280:	89 15 42 53 00 00    	mov    %edx,0x5342(%rip)        # ffffffffc00075c8 <_npi>
ffffffffc0002286:	45 31 c9             	xor    %r9d,%r9d
ffffffffc0002289:	eb 13                	jmp    ffffffffc000229e <process_create+0x5e>
ffffffffc000228b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0002290:	83 c2 01             	add    $0x1,%edx
ffffffffc0002293:	41 b9 01 00 00 00    	mov    $0x1,%r9d
ffffffffc0002299:	83 fa 7e             	cmp    $0x7e,%edx
ffffffffc000229c:	77 32                	ja     ffffffffc00022d0 <process_create+0x90>
ffffffffc000229e:	89 d1                	mov    %edx,%ecx
ffffffffc00022a0:	48 89 c8             	mov    %rcx,%rax
ffffffffc00022a3:	48 c1 e0 07          	shl    $0x7,%rax
ffffffffc00022a7:	48 01 c8             	add    %rcx,%rax
ffffffffc00022aa:	48 c1 e0 04          	shl    $0x4,%rax
ffffffffc00022ae:	41 f6 04 00 01       	testb  $0x1,(%r8,%rax,1)
ffffffffc00022b3:	75 db                	jne    ffffffffc0002290 <process_create+0x50>
ffffffffc00022b5:	45 84 c9             	test   %r9b,%r9b
ffffffffc00022b8:	74 06                	je     ffffffffc00022c0 <process_create+0x80>
ffffffffc00022ba:	89 15 08 53 00 00    	mov    %edx,0x5308(%rip)        # ffffffffc00075c8 <_npi>
ffffffffc00022c0:	4c 89 e0             	mov    %r12,%rax
ffffffffc00022c3:	48 83 c4 20          	add    $0x20,%rsp
ffffffffc00022c7:	41 5c                	pop    %r12
ffffffffc00022c9:	c3                   	retq   
ffffffffc00022ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc00022d0:	89 15 f2 52 00 00    	mov    %edx,0x52f2(%rip)        # ffffffffc00075c8 <_npi>
ffffffffc00022d6:	48 8d 0d f9 3d 00 00 	lea    0x3df9(%rip),%rcx        # ffffffffc00060d6 <.refptr.asm_get_cr2+0x56>
ffffffffc00022dd:	ff 15 7d 3d 00 00    	callq  *0x3d7d(%rip)        # ffffffffc0006060 <.refptr.fatal_error>
ffffffffc00022e3:	4c 8b 05 e6 52 00 00 	mov    0x52e6(%rip),%r8        # ffffffffc00075d0 <pl>
ffffffffc00022ea:	8b 15 d8 52 00 00    	mov    0x52d8(%rip),%edx        # ffffffffc00075c8 <_npi>
ffffffffc00022f0:	eb 94                	jmp    ffffffffc0002286 <process_create+0x46>
ffffffffc00022f2:	90                   	nop
ffffffffc00022f3:	90                   	nop
ffffffffc00022f4:	90                   	nop
ffffffffc00022f5:	90                   	nop
ffffffffc00022f6:	90                   	nop
ffffffffc00022f7:	90                   	nop
ffffffffc00022f8:	90                   	nop
ffffffffc00022f9:	90                   	nop
ffffffffc00022fa:	90                   	nop
ffffffffc00022fb:	90                   	nop
ffffffffc00022fc:	90                   	nop
ffffffffc00022fd:	90                   	nop
ffffffffc00022fe:	90                   	nop
ffffffffc00022ff:	90                   	nop

ffffffffc0002300 <scheduler_start>:
ffffffffc0002300:	53                   	push   %rbx
ffffffffc0002301:	48 83 ec 20          	sub    $0x20,%rsp
ffffffffc0002305:	c6 05 d4 52 00 00 01 	movb   $0x1,0x52d4(%rip)        # ffffffffc00075e0 <scheduler_ready>
ffffffffc000230c:	ff 15 5e 29 00 00    	callq  *0x295e(%rip)        # ffffffffc0004c70 <.refptr.asm_current_cpu>
ffffffffc0002312:	48 89 c3             	mov    %rax,%rbx
ffffffffc0002315:	ff 15 f5 3d 00 00    	callq  *0x3df5(%rip)        # ffffffffc0006110 <.refptr.hpet_timer_get_us>
ffffffffc000231b:	48 89 43 18          	mov    %rax,0x18(%rbx)
ffffffffc000231f:	48 83 c4 20          	add    $0x20,%rsp
ffffffffc0002323:	5b                   	pop    %rbx
ffffffffc0002324:	c3                   	retq   
ffffffffc0002325:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffffc000232c:	00 00 00 00 

ffffffffc0002330 <scheduler_yield>:
ffffffffc0002330:	56                   	push   %rsi
ffffffffc0002331:	53                   	push   %rbx
ffffffffc0002332:	48 83 ec 28          	sub    $0x28,%rsp
ffffffffc0002336:	ff 15 34 29 00 00    	callq  *0x2934(%rip)        # ffffffffc0004c70 <.refptr.asm_current_cpu>
ffffffffc000233c:	48 89 c3             	mov    %rax,%rbx
ffffffffc000233f:	ff 15 cb 3d 00 00    	callq  *0x3dcb(%rip)        # ffffffffc0006110 <.refptr.hpet_timer_get_us>
ffffffffc0002345:	80 7b 09 00          	cmpb   $0x0,0x9(%rbx)
ffffffffc0002349:	48 89 c6             	mov    %rax,%rsi
ffffffffc000234c:	74 12                	je     ffffffffc0002360 <scheduler_yield+0x30>
ffffffffc000234e:	48 89 73 18          	mov    %rsi,0x18(%rbx)
ffffffffc0002352:	48 83 c4 28          	add    $0x28,%rsp
ffffffffc0002356:	5b                   	pop    %rbx
ffffffffc0002357:	5e                   	pop    %rsi
ffffffffc0002358:	c3                   	retq   
ffffffffc0002359:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0002360:	44 0f b6 4b 08       	movzbl 0x8(%rbx),%r9d
ffffffffc0002365:	49 89 c0             	mov    %rax,%r8
ffffffffc0002368:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc000236d:	4c 2b 43 18          	sub    0x18(%rbx),%r8
ffffffffc0002371:	48 8d 0d 78 3d 00 00 	lea    0x3d78(%rip),%rcx        # ffffffffc00060f0 <.refptr.asm_get_cr2+0x70>
ffffffffc0002378:	ff 15 52 23 00 00    	callq  *0x2352(%rip)        # ffffffffc00046d0 <.refptr._console_vprint>
ffffffffc000237e:	48 89 73 18          	mov    %rsi,0x18(%rbx)
ffffffffc0002382:	48 83 c4 28          	add    $0x28,%rsp
ffffffffc0002386:	5b                   	pop    %rbx
ffffffffc0002387:	5e                   	pop    %rsi
ffffffffc0002388:	c3                   	retq   
ffffffffc0002389:	90                   	nop
ffffffffc000238a:	90                   	nop
ffffffffc000238b:	90                   	nop
ffffffffc000238c:	90                   	nop
ffffffffc000238d:	90                   	nop
ffffffffc000238e:	90                   	nop
ffffffffc000238f:	90                   	nop

ffffffffc0002390 <create_thread>:
ffffffffc0002390:	41 54                	push   %r12
ffffffffc0002392:	57                   	push   %rdi
ffffffffc0002393:	56                   	push   %rsi
ffffffffc0002394:	53                   	push   %rbx
ffffffffc0002395:	48 83 ec 38          	sub    $0x38,%rsp
ffffffffc0002399:	48 89 ce             	mov    %rcx,%rsi
ffffffffc000239c:	48 89 d3             	mov    %rdx,%rbx
ffffffffc000239f:	4c 89 c7             	mov    %r8,%rdi
ffffffffc00023a2:	48 85 c9             	test   %rcx,%rcx
ffffffffc00023a5:	0f 84 ad 00 00 00    	je     ffffffffc0002458 <create_thread+0xc8>
ffffffffc00023ab:	48 85 db             	test   %rbx,%rbx
ffffffffc00023ae:	0f 84 dc 00 00 00    	je     ffffffffc0002490 <create_thread+0x100>
ffffffffc00023b4:	8b 05 36 52 00 00    	mov    0x5236(%rip),%eax        # ffffffffc00075f0 <_nti>
ffffffffc00023ba:	48 8d 14 80          	lea    (%rax,%rax,4),%rdx
ffffffffc00023be:	4c 8d 24 50          	lea    (%rax,%rdx,2),%r12
ffffffffc00023c2:	49 c1 e4 04          	shl    $0x4,%r12
ffffffffc00023c6:	4c 03 25 2b 52 00 00 	add    0x522b(%rip),%r12        # ffffffffc00075f8 <tl>
ffffffffc00023cd:	49 89 b4 24 a8 00 00 	mov    %rsi,0xa8(%r12)
ffffffffc00023d4:	00 
ffffffffc00023d5:	49 8d 4c 24 08       	lea    0x8(%r12),%rcx
ffffffffc00023da:	48 8d 35 81 3d 00 00 	lea    0x3d81(%rip),%rsi        # ffffffffc0006162 <.refptr.hpet_timer_get_us+0x52>
ffffffffc00023e1:	41 80 0c 24 01       	orb    $0x1,(%r12)
ffffffffc00023e6:	ff 15 a4 3d 00 00    	callq  *0x3da4(%rip)        # ffffffffc0006190 <.refptr.asm_clear_thread_data>
ffffffffc00023ec:	49 89 5c 24 48       	mov    %rbx,0x48(%r12)
ffffffffc00023f1:	8b 05 f9 51 00 00    	mov    0x51f9(%rip),%eax        # ffffffffc00075f0 <_nti>
ffffffffc00023f7:	49 89 7c 24 18       	mov    %rdi,0x18(%r12)
ffffffffc00023fc:	48 8b 1d 5d 3c 00 00 	mov    0x3c5d(%rip),%rbx        # ffffffffc0006060 <.refptr.fatal_error>
ffffffffc0002403:	eb 1b                	jmp    ffffffffc0002420 <create_thread+0x90>
ffffffffc0002405:	0f 1f 00             	nopl   (%rax)
ffffffffc0002408:	48 8d 0c 92          	lea    (%rdx,%rdx,4),%rcx
ffffffffc000240c:	48 8d 14 4a          	lea    (%rdx,%rcx,2),%rdx
ffffffffc0002410:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffffc0002414:	48 03 15 dd 51 00 00 	add    0x51dd(%rip),%rdx        # ffffffffc00075f8 <tl>
ffffffffc000241b:	f6 02 01             	testb  $0x1,(%rdx)
ffffffffc000241e:	74 28                	je     ffffffffc0002448 <create_thread+0xb8>
ffffffffc0002420:	83 c0 01             	add    $0x1,%eax
ffffffffc0002423:	89 05 c7 51 00 00    	mov    %eax,0x51c7(%rip)        # ffffffffc00075f0 <_nti>
ffffffffc0002429:	89 c2                	mov    %eax,%edx
ffffffffc000242b:	3d d0 05 00 00       	cmp    $0x5d0,%eax
ffffffffc0002430:	76 d6                	jbe    ffffffffc0002408 <create_thread+0x78>
ffffffffc0002432:	48 89 f1             	mov    %rsi,%rcx
ffffffffc0002435:	ff d3                	callq  *%rbx
ffffffffc0002437:	8b 15 b3 51 00 00    	mov    0x51b3(%rip),%edx        # ffffffffc00075f0 <_nti>
ffffffffc000243d:	48 89 d0             	mov    %rdx,%rax
ffffffffc0002440:	eb c6                	jmp    ffffffffc0002408 <create_thread+0x78>
ffffffffc0002442:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc0002448:	4c 89 e0             	mov    %r12,%rax
ffffffffc000244b:	48 83 c4 38          	add    $0x38,%rsp
ffffffffc000244f:	5b                   	pop    %rbx
ffffffffc0002450:	5e                   	pop    %rsi
ffffffffc0002451:	5f                   	pop    %rdi
ffffffffc0002452:	41 5c                	pop    %r12
ffffffffc0002454:	c3                   	retq   
ffffffffc0002455:	0f 1f 00             	nopl   (%rax)
ffffffffc0002458:	48 8d 05 ff 3c 00 00 	lea    0x3cff(%rip),%rax        # ffffffffc000615e <.refptr.hpet_timer_get_us+0x4e>
ffffffffc000245f:	4c 8d 0d 1a 3d 00 00 	lea    0x3d1a(%rip),%r9        # ffffffffc0006180 <.refptr.hpet_timer_get_us+0x70>
ffffffffc0002466:	41 b8 24 00 00 00    	mov    $0x24,%r8d
ffffffffc000246c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc0002471:	48 8d 15 bd 3c 00 00 	lea    0x3cbd(%rip),%rdx        # ffffffffc0006135 <.refptr.hpet_timer_get_us+0x25>
ffffffffc0002478:	48 8d 0d d2 3c 00 00 	lea    0x3cd2(%rip),%rcx        # ffffffffc0006151 <.refptr.hpet_timer_get_us+0x41>
ffffffffc000247f:	ff 15 db 27 00 00    	callq  *0x27db(%rip)        # ffffffffc0004c60 <.refptr.fatal_error_line>
ffffffffc0002485:	48 85 db             	test   %rbx,%rbx
ffffffffc0002488:	0f 85 26 ff ff ff    	jne    ffffffffc00023b4 <create_thread+0x24>
ffffffffc000248e:	66 90                	xchg   %ax,%ax
ffffffffc0002490:	48 8d 05 c9 3c 00 00 	lea    0x3cc9(%rip),%rax        # ffffffffc0006160 <.refptr.hpet_timer_get_us+0x50>
ffffffffc0002497:	4c 8d 0d e2 3c 00 00 	lea    0x3ce2(%rip),%r9        # ffffffffc0006180 <.refptr.hpet_timer_get_us+0x70>
ffffffffc000249e:	41 b8 25 00 00 00    	mov    $0x25,%r8d
ffffffffc00024a4:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc00024a9:	48 8d 15 85 3c 00 00 	lea    0x3c85(%rip),%rdx        # ffffffffc0006135 <.refptr.hpet_timer_get_us+0x25>
ffffffffc00024b0:	48 8d 0d 9a 3c 00 00 	lea    0x3c9a(%rip),%rcx        # ffffffffc0006151 <.refptr.hpet_timer_get_us+0x41>
ffffffffc00024b7:	ff 15 a3 27 00 00    	callq  *0x27a3(%rip)        # ffffffffc0004c60 <.refptr.fatal_error_line>
ffffffffc00024bd:	e9 f2 fe ff ff       	jmpq   ffffffffc00023b4 <create_thread+0x24>
ffffffffc00024c2:	90                   	nop
ffffffffc00024c3:	90                   	nop
ffffffffc00024c4:	90                   	nop
ffffffffc00024c5:	90                   	nop
ffffffffc00024c6:	90                   	nop
ffffffffc00024c7:	90                   	nop
ffffffffc00024c8:	90                   	nop
ffffffffc00024c9:	90                   	nop
ffffffffc00024ca:	90                   	nop
ffffffffc00024cb:	90                   	nop
ffffffffc00024cc:	90                   	nop
ffffffffc00024cd:	90                   	nop
ffffffffc00024ce:	90                   	nop
ffffffffc00024cf:	90                   	nop

ffffffffc00024d0 <malloc>:
ffffffffc00024d0:	41 54                	push   %r12
ffffffffc00024d2:	55                   	push   %rbp
ffffffffc00024d3:	57                   	push   %rdi
ffffffffc00024d4:	56                   	push   %rsi
ffffffffc00024d5:	53                   	push   %rbx
ffffffffc00024d6:	48 83 ec 30          	sub    $0x30,%rsp
ffffffffc00024da:	48 89 c8             	mov    %rcx,%rax
ffffffffc00024dd:	48 89 cf             	mov    %rcx,%rdi
ffffffffc00024e0:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
ffffffffc00024e4:	48 83 c0 10          	add    $0x10,%rax
ffffffffc00024e8:	f6 c1 0f             	test   $0xf,%cl
ffffffffc00024eb:	48 0f 45 f8          	cmovne %rax,%rdi
ffffffffc00024ef:	48 b8 ff ff ff ff ff 	movabs $0xffffffffff,%rax
ffffffffc00024f6:	00 00 00 
ffffffffc00024f9:	48 8d 57 ff          	lea    -0x1(%rdi),%rdx
ffffffffc00024fd:	48 39 c2             	cmp    %rax,%rdx
ffffffffc0002500:	0f 87 1a 01 00 00    	ja     ffffffffc0002620 <malloc+0x150>
ffffffffc0002506:	48 8b 1d f3 50 00 00 	mov    0x50f3(%rip),%rbx        # ffffffffc0007600 <__libc_alloc_head>
ffffffffc000250d:	48 85 db             	test   %rbx,%rbx
ffffffffc0002510:	75 13                	jne    ffffffffc0002525 <malloc+0x55>
ffffffffc0002512:	e9 89 01 00 00       	jmpq   ffffffffc00026a0 <malloc+0x1d0>
ffffffffc0002517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffffc000251e:	00 00 
ffffffffc0002520:	48 8d 5c 03 10       	lea    0x10(%rbx,%rax,1),%rbx
ffffffffc0002525:	48 8b 43 08          	mov    0x8(%rbx),%rax
ffffffffc0002529:	41 89 c0             	mov    %eax,%r8d
ffffffffc000252c:	89 c2                	mov    %eax,%edx
ffffffffc000252e:	41 83 e0 01          	and    $0x1,%r8d
ffffffffc0002532:	74 10                	je     ffffffffc0002544 <malloc+0x74>
ffffffffc0002534:	48 89 c1             	mov    %rax,%rcx
ffffffffc0002537:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
ffffffffc000253b:	48 39 f9             	cmp    %rdi,%rcx
ffffffffc000253e:	0f 83 1c 01 00 00    	jae    ffffffffc0002660 <malloc+0x190>
ffffffffc0002544:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffffc0002548:	83 e2 02             	and    $0x2,%edx
ffffffffc000254b:	75 d3                	jne    ffffffffc0002520 <malloc+0x50>
ffffffffc000254d:	45 84 c0             	test   %r8b,%r8b
ffffffffc0002550:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffffc0002555:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffffc000255a:	48 0f 44 c2          	cmove  %rdx,%rax
ffffffffc000255e:	48 8d 97 0f 10 00 00 	lea    0x100f(%rdi),%rdx
ffffffffc0002565:	48 29 c2             	sub    %rax,%rdx
ffffffffc0002568:	48 89 d6             	mov    %rdx,%rsi
ffffffffc000256b:	48 c1 ee 0c          	shr    $0xc,%rsi
ffffffffc000256f:	48 81 fa ff 7f 00 00 	cmp    $0x7fff,%rdx
ffffffffc0002576:	48 0f 46 f1          	cmovbe %rcx,%rsi
ffffffffc000257a:	48 89 f1             	mov    %rsi,%rcx
ffffffffc000257d:	ff 15 bd 3c 00 00    	callq  *0x3cbd(%rip)        # ffffffffc0006240 <.refptr.vm_reserve>
ffffffffc0002583:	48 89 c2             	mov    %rax,%rdx
ffffffffc0002586:	48 85 c0             	test   %rax,%rax
ffffffffc0002589:	0f 84 91 00 00 00    	je     ffffffffc0002620 <malloc+0x150>
ffffffffc000258f:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
ffffffffc0002593:	49 89 dc             	mov    %rbx,%r12
ffffffffc0002596:	48 8d 6b 10          	lea    0x10(%rbx),%rbp
ffffffffc000259a:	48 89 c8             	mov    %rcx,%rax
ffffffffc000259d:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffffc00025a1:	48 83 3b 00          	cmpq   $0x0,(%rbx)
ffffffffc00025a5:	74 41                	je     ffffffffc00025e8 <malloc+0x118>
ffffffffc00025a7:	4c 8d 04 28          	lea    (%rax,%rbp,1),%r8
ffffffffc00025ab:	49 39 d0             	cmp    %rdx,%r8
ffffffffc00025ae:	74 38                	je     ffffffffc00025e8 <malloc+0x118>
ffffffffc00025b0:	48 8d 05 0b 3c 00 00 	lea    0x3c0b(%rip),%rax        # ffffffffc00061c2 <.refptr.asm_clear_thread_data+0x32>
ffffffffc00025b7:	48 8d 0d f3 3b 00 00 	lea    0x3bf3(%rip),%rcx        # ffffffffc00061b1 <.refptr.asm_clear_thread_data+0x21>
ffffffffc00025be:	41 b8 50 00 00 00    	mov    $0x50,%r8d
ffffffffc00025c4:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc00025c9:	4c 8d 0d 3a 3c 00 00 	lea    0x3c3a(%rip),%r9        # ffffffffc000620a <.refptr.asm_clear_thread_data+0x7a>
ffffffffc00025d0:	48 8d 15 c9 3b 00 00 	lea    0x3bc9(%rip),%rdx        # ffffffffc00061a0 <.refptr.asm_clear_thread_data+0x10>
ffffffffc00025d7:	ff 15 83 26 00 00    	callq  *0x2683(%rip)        # ffffffffc0004c60 <.refptr.fatal_error_line>
ffffffffc00025dd:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
ffffffffc00025e1:	48 89 c8             	mov    %rcx,%rax
ffffffffc00025e4:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffffc00025e8:	48 c1 e6 0c          	shl    $0xc,%rsi
ffffffffc00025ec:	f6 c1 01             	test   $0x1,%cl
ffffffffc00025ef:	74 7f                	je     ffffffffc0002670 <malloc+0x1a0>
ffffffffc00025f1:	48 8d 0c 06          	lea    (%rsi,%rax,1),%rcx
ffffffffc00025f5:	48 89 d8             	mov    %rbx,%rax
ffffffffc00025f8:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
ffffffffc00025fc:	48 89 fa             	mov    %rdi,%rdx
ffffffffc00025ff:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
ffffffffc0002603:	48 39 cf             	cmp    %rcx,%rdi
ffffffffc0002606:	72 28                	jb     ffffffffc0002630 <malloc+0x160>
ffffffffc0002608:	48 89 53 08          	mov    %rdx,0x8(%rbx)
ffffffffc000260c:	48 89 e8             	mov    %rbp,%rax
ffffffffc000260f:	48 83 c4 30          	add    $0x30,%rsp
ffffffffc0002613:	5b                   	pop    %rbx
ffffffffc0002614:	5e                   	pop    %rsi
ffffffffc0002615:	5f                   	pop    %rdi
ffffffffc0002616:	5d                   	pop    %rbp
ffffffffc0002617:	41 5c                	pop    %r12
ffffffffc0002619:	c3                   	retq   
ffffffffc000261a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc0002620:	31 c0                	xor    %eax,%eax
ffffffffc0002622:	48 83 c4 30          	add    $0x30,%rsp
ffffffffc0002626:	5b                   	pop    %rbx
ffffffffc0002627:	5e                   	pop    %rsi
ffffffffc0002628:	5f                   	pop    %rdi
ffffffffc0002629:	5d                   	pop    %rbp
ffffffffc000262a:	41 5c                	pop    %r12
ffffffffc000262c:	c3                   	retq   
ffffffffc000262d:	0f 1f 00             	nopl   (%rax)
ffffffffc0002630:	49 89 d0             	mov    %rdx,%r8
ffffffffc0002633:	48 29 f9             	sub    %rdi,%rcx
ffffffffc0002636:	48 8d 54 02 10       	lea    0x10(%rdx,%rax,1),%rdx
ffffffffc000263b:	49 83 c8 02          	or     $0x2,%r8
ffffffffc000263f:	4c 89 43 08          	mov    %r8,0x8(%rbx)
ffffffffc0002643:	48 89 02             	mov    %rax,(%rdx)
ffffffffc0002646:	48 8d 41 f0          	lea    -0x10(%rcx),%rax
ffffffffc000264a:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffffc000264e:	48 83 c8 01          	or     $0x1,%rax
ffffffffc0002652:	48 89 42 08          	mov    %rax,0x8(%rdx)
ffffffffc0002656:	eb b4                	jmp    ffffffffc000260c <malloc+0x13c>
ffffffffc0002658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffffc000265f:	00 
ffffffffc0002660:	48 89 d8             	mov    %rbx,%rax
ffffffffc0002663:	48 8d 6b 10          	lea    0x10(%rbx),%rbp
ffffffffc0002667:	eb 93                	jmp    ffffffffc00025fc <malloc+0x12c>
ffffffffc0002669:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0002670:	48 83 c9 02          	or     $0x2,%rcx
ffffffffc0002674:	48 01 e8             	add    %rbp,%rax
ffffffffc0002677:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
ffffffffc000267b:	48 8d 4e f0          	lea    -0x10(%rsi),%rcx
ffffffffc000267f:	48 89 c3             	mov    %rax,%rbx
ffffffffc0002682:	48 8d 68 10          	lea    0x10(%rax),%rbp
ffffffffc0002686:	48 89 ca             	mov    %rcx,%rdx
ffffffffc0002689:	4c 89 20             	mov    %r12,(%rax)
ffffffffc000268c:	48 83 ca 01          	or     $0x1,%rdx
ffffffffc0002690:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffffc0002694:	e9 63 ff ff ff       	jmpq   ffffffffc00025fc <malloc+0x12c>
ffffffffc0002699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc00026a0:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffffc00026a5:	ff 15 95 3b 00 00    	callq  *0x3b95(%rip)        # ffffffffc0006240 <.refptr.vm_reserve>
ffffffffc00026ab:	48 89 c3             	mov    %rax,%rbx
ffffffffc00026ae:	48 85 c0             	test   %rax,%rax
ffffffffc00026b1:	0f 84 69 ff ff ff    	je     ffffffffc0002620 <malloc+0x150>
ffffffffc00026b7:	66 0f 6f 05 61 3b 00 	movdqa 0x3b61(%rip),%xmm0        # ffffffffc0006220 <.refptr.asm_clear_thread_data+0x90>
ffffffffc00026be:	00 
ffffffffc00026bf:	48 89 05 3a 4f 00 00 	mov    %rax,0x4f3a(%rip)        # ffffffffc0007600 <__libc_alloc_head>
ffffffffc00026c6:	0f 11 00             	movups %xmm0,(%rax)
ffffffffc00026c9:	b8 f1 7f 00 00       	mov    $0x7ff1,%eax
ffffffffc00026ce:	e9 56 fe ff ff       	jmpq   ffffffffc0002529 <malloc+0x59>
ffffffffc00026d3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffffc00026da:	00 00 00 00 
ffffffffc00026de:	66 90                	xchg   %ax,%ax

ffffffffc00026e0 <calloc>:
ffffffffc00026e0:	41 55                	push   %r13
ffffffffc00026e2:	41 54                	push   %r12
ffffffffc00026e4:	48 83 ec 28          	sub    $0x28,%rsp
ffffffffc00026e8:	49 89 c8             	mov    %rcx,%r8
ffffffffc00026eb:	49 89 d4             	mov    %rdx,%r12
ffffffffc00026ee:	48 89 d1             	mov    %rdx,%rcx
ffffffffc00026f1:	31 d2                	xor    %edx,%edx
ffffffffc00026f3:	4d 0f af e0          	imul   %r8,%r12
ffffffffc00026f7:	4c 89 e0             	mov    %r12,%rax
ffffffffc00026fa:	48 f7 f1             	div    %rcx
ffffffffc00026fd:	4c 39 c0             	cmp    %r8,%rax
ffffffffc0002700:	75 46                	jne    ffffffffc0002748 <calloc+0x68>
ffffffffc0002702:	4c 89 e0             	mov    %r12,%rax
ffffffffc0002705:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
ffffffffc0002709:	48 83 c0 10          	add    $0x10,%rax
ffffffffc000270d:	41 f6 c4 0f          	test   $0xf,%r12b
ffffffffc0002711:	4c 0f 45 e0          	cmovne %rax,%r12
ffffffffc0002715:	48 8d 05 b4 fd ff ff 	lea    -0x24c(%rip),%rax        # ffffffffc00024d0 <malloc>
ffffffffc000271c:	4c 89 e1             	mov    %r12,%rcx
ffffffffc000271f:	ff d0                	callq  *%rax
ffffffffc0002721:	49 89 c5             	mov    %rax,%r13
ffffffffc0002724:	48 85 c0             	test   %rax,%rax
ffffffffc0002727:	74 3f                	je     ffffffffc0002768 <calloc+0x88>
ffffffffc0002729:	48 89 c2             	mov    %rax,%rdx
ffffffffc000272c:	4c 89 e1             	mov    %r12,%rcx
ffffffffc000272f:	ff 15 fb 3a 00 00    	callq  *0x3afb(%rip)        # ffffffffc0006230 <.refptr.__asm_fill_zero>
ffffffffc0002735:	4c 89 e8             	mov    %r13,%rax
ffffffffc0002738:	48 83 c4 28          	add    $0x28,%rsp
ffffffffc000273c:	41 5c                	pop    %r12
ffffffffc000273e:	41 5d                	pop    %r13
ffffffffc0002740:	c3                   	retq   
ffffffffc0002741:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0002748:	45 31 ed             	xor    %r13d,%r13d
ffffffffc000274b:	48 8d 0d 8a 3a 00 00 	lea    0x3a8a(%rip),%rcx        # ffffffffc00061dc <.refptr.asm_clear_thread_data+0x4c>
ffffffffc0002752:	ff 15 08 39 00 00    	callq  *0x3908(%rip)        # ffffffffc0006060 <.refptr.fatal_error>
ffffffffc0002758:	4c 89 e8             	mov    %r13,%rax
ffffffffc000275b:	48 83 c4 28          	add    $0x28,%rsp
ffffffffc000275f:	41 5c                	pop    %r12
ffffffffc0002761:	41 5d                	pop    %r13
ffffffffc0002763:	c3                   	retq   
ffffffffc0002764:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffffc0002768:	48 8d 0d 87 3a 00 00 	lea    0x3a87(%rip),%rcx        # ffffffffc00061f6 <.refptr.asm_clear_thread_data+0x66>
ffffffffc000276f:	ff 15 eb 38 00 00    	callq  *0x38eb(%rip)        # ffffffffc0006060 <.refptr.fatal_error>
ffffffffc0002775:	eb be                	jmp    ffffffffc0002735 <calloc+0x55>
ffffffffc0002777:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffffc000277e:	00 00 

ffffffffc0002780 <realloc>:
ffffffffc0002780:	31 c0                	xor    %eax,%eax
ffffffffc0002782:	c3                   	retq   
ffffffffc0002783:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffffc000278a:	00 00 00 00 
ffffffffc000278e:	66 90                	xchg   %ax,%ax

ffffffffc0002790 <free>:
ffffffffc0002790:	48 85 c9             	test   %rcx,%rcx
ffffffffc0002793:	74 6d                	je     ffffffffc0002802 <free+0x72>
ffffffffc0002795:	48 8b 51 f8          	mov    -0x8(%rcx),%rdx
ffffffffc0002799:	48 89 d0             	mov    %rdx,%rax
ffffffffc000279c:	48 83 c8 01          	or     $0x1,%rax
ffffffffc00027a0:	48 89 41 f8          	mov    %rax,-0x8(%rcx)
ffffffffc00027a4:	a8 02                	test   $0x2,%al
ffffffffc00027a6:	74 2a                	je     ffffffffc00027d2 <free+0x42>
ffffffffc00027a8:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
ffffffffc00027ac:	4c 8b 4c 11 08       	mov    0x8(%rcx,%rdx,1),%r9
ffffffffc00027b1:	41 f6 c1 01          	test   $0x1,%r9b
ffffffffc00027b5:	74 1b                	je     ffffffffc00027d2 <free+0x42>
ffffffffc00027b7:	4c 89 c8             	mov    %r9,%rax
ffffffffc00027ba:	41 83 e1 02          	and    $0x2,%r9d
ffffffffc00027be:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffffc00027c2:	48 8d 44 02 10       	lea    0x10(%rdx,%rax,1),%rax
ffffffffc00027c7:	4c 09 c8             	or     %r9,%rax
ffffffffc00027ca:	48 83 c8 01          	or     $0x1,%rax
ffffffffc00027ce:	48 89 41 f8          	mov    %rax,-0x8(%rcx)
ffffffffc00027d2:	48 8b 51 f0          	mov    -0x10(%rcx),%rdx
ffffffffc00027d6:	48 85 d2             	test   %rdx,%rdx
ffffffffc00027d9:	74 27                	je     ffffffffc0002802 <free+0x72>
ffffffffc00027db:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
ffffffffc00027df:	f6 c1 01             	test   $0x1,%cl
ffffffffc00027e2:	74 1e                	je     ffffffffc0002802 <free+0x72>
ffffffffc00027e4:	49 89 c0             	mov    %rax,%r8
ffffffffc00027e7:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
ffffffffc00027eb:	83 e0 02             	and    $0x2,%eax
ffffffffc00027ee:	49 83 e0 fc          	and    $0xfffffffffffffffc,%r8
ffffffffc00027f2:	4a 8d 4c 01 10       	lea    0x10(%rcx,%r8,1),%rcx
ffffffffc00027f7:	48 09 c8             	or     %rcx,%rax
ffffffffc00027fa:	48 83 c8 01          	or     $0x1,%rax
ffffffffc00027fe:	48 89 42 08          	mov    %rax,0x8(%rdx)
ffffffffc0002802:	c3                   	retq   
ffffffffc0002803:	90                   	nop
ffffffffc0002804:	90                   	nop
ffffffffc0002805:	90                   	nop
ffffffffc0002806:	90                   	nop
ffffffffc0002807:	90                   	nop
ffffffffc0002808:	90                   	nop
ffffffffc0002809:	90                   	nop
ffffffffc000280a:	90                   	nop
ffffffffc000280b:	90                   	nop
ffffffffc000280c:	90                   	nop
ffffffffc000280d:	90                   	nop
ffffffffc000280e:	90                   	nop
ffffffffc000280f:	90                   	nop

ffffffffc0002810 <__vprintf_buffer_write_func>:
ffffffffc0002810:	48 8b 02             	mov    (%rdx),%rax
ffffffffc0002813:	41 89 c8             	mov    %ecx,%r8d
ffffffffc0002816:	48 8b 08             	mov    (%rax),%rcx
ffffffffc0002819:	48 8b 42 10          	mov    0x10(%rdx),%rax
ffffffffc000281d:	44 88 04 01          	mov    %r8b,(%rcx,%rax,1)
ffffffffc0002821:	48 83 42 10 01       	addq   $0x1,0x10(%rdx)
ffffffffc0002826:	c3                   	retq   
ffffffffc0002827:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffffc000282e:	00 00 

ffffffffc0002830 <__vprintf_buffer_reserve_func>:
ffffffffc0002830:	53                   	push   %rbx
ffffffffc0002831:	48 83 ec 20          	sub    $0x20,%rsp
ffffffffc0002835:	48 8b 1a             	mov    (%rdx),%rbx
ffffffffc0002838:	48 03 4a 08          	add    0x8(%rdx),%rcx
ffffffffc000283c:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
ffffffffc0002840:	48 89 ca             	mov    %rcx,%rdx
ffffffffc0002843:	48 8b 0b             	mov    (%rbx),%rcx
ffffffffc0002846:	ff 15 04 3a 00 00    	callq  *0x3a04(%rip)        # ffffffffc0006250 <.refptr.realloc>
ffffffffc000284c:	48 89 03             	mov    %rax,(%rbx)
ffffffffc000284f:	48 83 c4 20          	add    $0x20,%rsp
ffffffffc0002853:	5b                   	pop    %rbx
ffffffffc0002854:	c3                   	retq   
ffffffffc0002855:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffffc000285c:	00 00 00 00 

ffffffffc0002860 <__vprintf_handle_sign>:
ffffffffc0002860:	41 54                	push   %r12
ffffffffc0002862:	57                   	push   %rdi
ffffffffc0002863:	56                   	push   %rsi
ffffffffc0002864:	53                   	push   %rbx
ffffffffc0002865:	48 83 ec 28          	sub    $0x28,%rsp
ffffffffc0002869:	8b 7c 24 70          	mov    0x70(%rsp),%edi
ffffffffc000286d:	49 89 cc             	mov    %rcx,%r12
ffffffffc0002870:	48 89 d0             	mov    %rdx,%rax
ffffffffc0002873:	4c 89 c6             	mov    %r8,%rsi
ffffffffc0002876:	44 89 cb             	mov    %r9d,%ebx
ffffffffc0002879:	41 f6 c1 06          	test   $0x6,%r9b
ffffffffc000287d:	75 19                	jne    ffffffffc0002898 <__vprintf_handle_sign+0x38>
ffffffffc000287f:	45 31 c0             	xor    %r8d,%r8d
ffffffffc0002882:	40 84 ff             	test   %dil,%dil
ffffffffc0002885:	75 11                	jne    ffffffffc0002898 <__vprintf_handle_sign+0x38>
ffffffffc0002887:	44 89 c0             	mov    %r8d,%eax
ffffffffc000288a:	48 83 c4 28          	add    $0x28,%rsp
ffffffffc000288e:	5b                   	pop    %rbx
ffffffffc000288f:	5e                   	pop    %rsi
ffffffffc0002890:	5f                   	pop    %rdi
ffffffffc0002891:	41 5c                	pop    %r12
ffffffffc0002893:	c3                   	retq   
ffffffffc0002894:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffffc0002898:	48 85 c0             	test   %rax,%rax
ffffffffc000289b:	74 0a                	je     ffffffffc00028a7 <__vprintf_handle_sign+0x47>
ffffffffc000289d:	4c 89 e2             	mov    %r12,%rdx
ffffffffc00028a0:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffffc00028a5:	ff d0                	callq  *%rax
ffffffffc00028a7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffffc00028ad:	48 85 f6             	test   %rsi,%rsi
ffffffffc00028b0:	74 d5                	je     ffffffffc0002887 <__vprintf_handle_sign+0x27>
ffffffffc00028b2:	b9 2d 00 00 00       	mov    $0x2d,%ecx
ffffffffc00028b7:	40 84 ff             	test   %dil,%dil
ffffffffc00028ba:	74 1c                	je     ffffffffc00028d8 <__vprintf_handle_sign+0x78>
ffffffffc00028bc:	4c 89 e2             	mov    %r12,%rdx
ffffffffc00028bf:	ff d6                	callq  *%rsi
ffffffffc00028c1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffffc00028c7:	44 89 c0             	mov    %r8d,%eax
ffffffffc00028ca:	48 83 c4 28          	add    $0x28,%rsp
ffffffffc00028ce:	5b                   	pop    %rbx
ffffffffc00028cf:	5e                   	pop    %rsi
ffffffffc00028d0:	5f                   	pop    %rdi
ffffffffc00028d1:	41 5c                	pop    %r12
ffffffffc00028d3:	c3                   	retq   
ffffffffc00028d4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffffc00028d8:	83 e3 04             	and    $0x4,%ebx
ffffffffc00028db:	4c 89 e2             	mov    %r12,%rdx
ffffffffc00028de:	66 83 fb 01          	cmp    $0x1,%bx
ffffffffc00028e2:	19 c9                	sbb    %ecx,%ecx
ffffffffc00028e4:	83 e1 0b             	and    $0xb,%ecx
ffffffffc00028e7:	83 c1 20             	add    $0x20,%ecx
ffffffffc00028ea:	ff d6                	callq  *%rsi
ffffffffc00028ec:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffffc00028f2:	eb d3                	jmp    ffffffffc00028c7 <__vprintf_handle_sign+0x67>
ffffffffc00028f4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffffc00028fb:	00 00 00 00 
ffffffffc00028ff:	90                   	nop

ffffffffc0002900 <__vprintf_write_uint>:
ffffffffc0002900:	41 57                	push   %r15
ffffffffc0002902:	41 56                	push   %r14
ffffffffc0002904:	41 55                	push   %r13
ffffffffc0002906:	41 54                	push   %r12
ffffffffc0002908:	55                   	push   %rbp
ffffffffc0002909:	57                   	push   %rdi
ffffffffc000290a:	56                   	push   %rsi
ffffffffc000290b:	53                   	push   %rbx
ffffffffc000290c:	48 83 ec 38          	sub    $0x38,%rsp
ffffffffc0002910:	8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%eax
ffffffffc0002917:	48 8b ac 24 a8 00 00 	mov    0xa8(%rsp),%rbp
ffffffffc000291e:	00 
ffffffffc000291f:	44 8b b4 24 b0 00 00 	mov    0xb0(%rsp),%r14d
ffffffffc0002926:	00 
ffffffffc0002927:	49 89 d5             	mov    %rdx,%r13
ffffffffc000292a:	44 89 ca             	mov    %r9d,%edx
ffffffffc000292d:	49 89 cc             	mov    %rcx,%r12
ffffffffc0002930:	4c 89 c7             	mov    %r8,%rdi
ffffffffc0002933:	45 89 cf             	mov    %r9d,%r15d
ffffffffc0002936:	83 e2 10             	and    $0x10,%edx
ffffffffc0002939:	41 f6 c1 20          	test   $0x20,%r9b
ffffffffc000293d:	74 39                	je     ffffffffc0002978 <__vprintf_write_uint+0x78>
ffffffffc000293f:	45 85 f6             	test   %r14d,%r14d
ffffffffc0002942:	75 3a                	jne    ffffffffc000297e <__vprintf_write_uint+0x7e>
ffffffffc0002944:	48 85 ed             	test   %rbp,%rbp
ffffffffc0002947:	0f 85 f3 00 00 00    	jne    ffffffffc0002a40 <__vprintf_write_uint+0x140>
ffffffffc000294d:	3c 08                	cmp    $0x8,%al
ffffffffc000294f:	75 09                	jne    ffffffffc000295a <__vprintf_write_uint+0x5a>
ffffffffc0002951:	66 85 d2             	test   %dx,%dx
ffffffffc0002954:	0f 85 14 05 00 00    	jne    ffffffffc0002e6e <__vprintf_write_uint+0x56e>
ffffffffc000295a:	45 31 ed             	xor    %r13d,%r13d
ffffffffc000295d:	44 89 e8             	mov    %r13d,%eax
ffffffffc0002960:	48 83 c4 38          	add    $0x38,%rsp
ffffffffc0002964:	5b                   	pop    %rbx
ffffffffc0002965:	5e                   	pop    %rsi
ffffffffc0002966:	5f                   	pop    %rdi
ffffffffc0002967:	5d                   	pop    %rbp
ffffffffc0002968:	41 5c                	pop    %r12
ffffffffc000296a:	41 5d                	pop    %r13
ffffffffc000296c:	41 5e                	pop    %r14
ffffffffc000296e:	41 5f                	pop    %r15
ffffffffc0002970:	c3                   	retq   
ffffffffc0002971:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0002978:	41 be 01 00 00 00    	mov    $0x1,%r14d
ffffffffc000297e:	66 85 d2             	test   %dx,%dx
ffffffffc0002981:	0f 85 c9 00 00 00    	jne    ffffffffc0002a50 <__vprintf_write_uint+0x150>
ffffffffc0002987:	48 85 ed             	test   %rbp,%rbp
ffffffffc000298a:	0f 84 d9 00 00 00    	je     ffffffffc0002a69 <__vprintf_write_uint+0x169>
ffffffffc0002990:	3c 08                	cmp    $0x8,%al
ffffffffc0002992:	0f 84 0a 05 00 00    	je     ffffffffc0002ea2 <__vprintf_write_uint+0x5a2>
ffffffffc0002998:	45 31 c0             	xor    %r8d,%r8d
ffffffffc000299b:	3c 0a                	cmp    $0xa,%al
ffffffffc000299d:	0f 84 1d 03 00 00    	je     ffffffffc0002cc0 <__vprintf_write_uint+0x3c0>
ffffffffc00029a3:	48 89 e8             	mov    %rbp,%rax
ffffffffc00029a6:	31 f6                	xor    %esi,%esi
ffffffffc00029a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffffc00029af:	00 
ffffffffc00029b0:	83 c6 01             	add    $0x1,%esi
ffffffffc00029b3:	48 c1 e8 04          	shr    $0x4,%rax
ffffffffc00029b7:	75 f7                	jne    ffffffffc00029b0 <__vprintf_write_uint+0xb0>
ffffffffc00029b9:	40 0f b6 c6          	movzbl %sil,%eax
ffffffffc00029bd:	44 89 f3             	mov    %r14d,%ebx
ffffffffc00029c0:	44 39 f0             	cmp    %r14d,%eax
ffffffffc00029c3:	0f 43 d8             	cmovae %eax,%ebx
ffffffffc00029c6:	4d 85 ed             	test   %r13,%r13
ffffffffc00029c9:	74 1a                	je     ffffffffc00029e5 <__vprintf_write_uint+0xe5>
ffffffffc00029cb:	44 89 44 24 2c       	mov    %r8d,0x2c(%rsp)
ffffffffc00029d0:	89 d9                	mov    %ebx,%ecx
ffffffffc00029d2:	4c 89 e2             	mov    %r12,%rdx
ffffffffc00029d5:	89 44 24 28          	mov    %eax,0x28(%rsp)
ffffffffc00029d9:	41 ff d5             	callq  *%r13
ffffffffc00029dc:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
ffffffffc00029e1:	8b 44 24 28          	mov    0x28(%rsp),%eax
ffffffffc00029e5:	46 8d 2c 03          	lea    (%rbx,%r8,1),%r13d
ffffffffc00029e9:	48 85 ff             	test   %rdi,%rdi
ffffffffc00029ec:	0f 84 6b ff ff ff    	je     ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc00029f2:	45 89 fe             	mov    %r15d,%r14d
ffffffffc00029f5:	29 c3                	sub    %eax,%ebx
ffffffffc00029f7:	c1 e6 02             	shl    $0x2,%esi
ffffffffc00029fa:	66 41 83 e6 08       	and    $0x8,%r14w
ffffffffc00029ff:	0f 84 d8 00 00 00    	je     ffffffffc0002add <__vprintf_write_uint+0x1dd>
ffffffffc0002a05:	40 84 f6             	test   %sil,%sil
ffffffffc0002a08:	0f 85 de 00 00 00    	jne    ffffffffc0002aec <__vprintf_write_uint+0x1ec>
ffffffffc0002a0e:	66 90                	xchg   %ax,%ax
ffffffffc0002a10:	85 db                	test   %ebx,%ebx
ffffffffc0002a12:	0f 84 45 ff ff ff    	je     ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002a18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffffc0002a1f:	00 
ffffffffc0002a20:	83 eb 01             	sub    $0x1,%ebx
ffffffffc0002a23:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002a26:	b9 30 00 00 00       	mov    $0x30,%ecx
ffffffffc0002a2b:	ff d7                	callq  *%rdi
ffffffffc0002a2d:	85 db                	test   %ebx,%ebx
ffffffffc0002a2f:	75 ef                	jne    ffffffffc0002a20 <__vprintf_write_uint+0x120>
ffffffffc0002a31:	e9 27 ff ff ff       	jmpq   ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002a36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffffc0002a3d:	00 00 00 
ffffffffc0002a40:	66 85 d2             	test   %dx,%dx
ffffffffc0002a43:	0f 84 47 ff ff ff    	je     ffffffffc0002990 <__vprintf_write_uint+0x90>
ffffffffc0002a49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0002a50:	3c 08                	cmp    $0x8,%al
ffffffffc0002a52:	0f 84 38 01 00 00    	je     ffffffffc0002b90 <__vprintf_write_uint+0x290>
ffffffffc0002a58:	3c 10                	cmp    $0x10,%al
ffffffffc0002a5a:	0f 84 f8 01 00 00    	je     ffffffffc0002c58 <__vprintf_write_uint+0x358>
ffffffffc0002a60:	48 85 ed             	test   %rbp,%rbp
ffffffffc0002a63:	0f 85 2f ff ff ff    	jne    ffffffffc0002998 <__vprintf_write_uint+0x98>
ffffffffc0002a69:	31 f6                	xor    %esi,%esi
ffffffffc0002a6b:	45 85 f6             	test   %r14d,%r14d
ffffffffc0002a6e:	bb 01 00 00 00       	mov    $0x1,%ebx
ffffffffc0002a73:	41 0f 45 de          	cmovne %r14d,%ebx
ffffffffc0002a77:	4d 85 ed             	test   %r13,%r13
ffffffffc0002a7a:	74 08                	je     ffffffffc0002a84 <__vprintf_write_uint+0x184>
ffffffffc0002a7c:	89 d9                	mov    %ebx,%ecx
ffffffffc0002a7e:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002a81:	41 ff d5             	callq  *%r13
ffffffffc0002a84:	44 8d 2c 33          	lea    (%rbx,%rsi,1),%r13d
ffffffffc0002a88:	48 85 ff             	test   %rdi,%rdi
ffffffffc0002a8b:	0f 84 cc fe ff ff    	je     ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002a91:	83 eb 01             	sub    $0x1,%ebx
ffffffffc0002a94:	41 83 e7 08          	and    $0x8,%r15d
ffffffffc0002a98:	0f 85 ad 00 00 00    	jne    ffffffffc0002b4b <__vprintf_write_uint+0x24b>
ffffffffc0002a9e:	85 db                	test   %ebx,%ebx
ffffffffc0002aa0:	74 17                	je     ffffffffc0002ab9 <__vprintf_write_uint+0x1b9>
ffffffffc0002aa2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc0002aa8:	83 eb 01             	sub    $0x1,%ebx
ffffffffc0002aab:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002aae:	b9 30 00 00 00       	mov    $0x30,%ecx
ffffffffc0002ab3:	ff d7                	callq  *%rdi
ffffffffc0002ab5:	85 db                	test   %ebx,%ebx
ffffffffc0002ab7:	75 ef                	jne    ffffffffc0002aa8 <__vprintf_write_uint+0x1a8>
ffffffffc0002ab9:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002abc:	b9 30 00 00 00       	mov    $0x30,%ecx
ffffffffc0002ac1:	ff d7                	callq  *%rdi
ffffffffc0002ac3:	e9 95 fe ff ff       	jmpq   ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002ac8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffffc0002acf:	00 
ffffffffc0002ad0:	83 eb 01             	sub    $0x1,%ebx
ffffffffc0002ad3:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002ad6:	b9 30 00 00 00       	mov    $0x30,%ecx
ffffffffc0002adb:	ff d7                	callq  *%rdi
ffffffffc0002add:	85 db                	test   %ebx,%ebx
ffffffffc0002adf:	75 ef                	jne    ffffffffc0002ad0 <__vprintf_write_uint+0x1d0>
ffffffffc0002ae1:	40 84 f6             	test   %sil,%sil
ffffffffc0002ae4:	0f 84 73 fe ff ff    	je     ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002aea:	31 db                	xor    %ebx,%ebx
ffffffffc0002aec:	41 81 e7 00 04 00 00 	and    $0x400,%r15d
ffffffffc0002af3:	75 7b                	jne    ffffffffc0002b70 <__vprintf_write_uint+0x270>
ffffffffc0002af5:	eb 19                	jmp    ffffffffc0002b10 <__vprintf_write_uint+0x210>
ffffffffc0002af7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffffc0002afe:	00 00 
ffffffffc0002b00:	83 c1 57             	add    $0x57,%ecx
ffffffffc0002b03:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002b06:	0f b6 c9             	movzbl %cl,%ecx
ffffffffc0002b09:	ff d7                	callq  *%rdi
ffffffffc0002b0b:	40 84 f6             	test   %sil,%sil
ffffffffc0002b0e:	74 26                	je     ffffffffc0002b36 <__vprintf_write_uint+0x236>
ffffffffc0002b10:	83 ee 04             	sub    $0x4,%esi
ffffffffc0002b13:	48 89 e8             	mov    %rbp,%rax
ffffffffc0002b16:	89 f1                	mov    %esi,%ecx
ffffffffc0002b18:	48 d3 e8             	shr    %cl,%rax
ffffffffc0002b1b:	48 89 c1             	mov    %rax,%rcx
ffffffffc0002b1e:	83 e1 0f             	and    $0xf,%ecx
ffffffffc0002b21:	80 f9 09             	cmp    $0x9,%cl
ffffffffc0002b24:	77 da                	ja     ffffffffc0002b00 <__vprintf_write_uint+0x200>
ffffffffc0002b26:	83 c1 30             	add    $0x30,%ecx
ffffffffc0002b29:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002b2c:	0f b6 c9             	movzbl %cl,%ecx
ffffffffc0002b2f:	ff d7                	callq  *%rdi
ffffffffc0002b31:	40 84 f6             	test   %sil,%sil
ffffffffc0002b34:	75 da                	jne    ffffffffc0002b10 <__vprintf_write_uint+0x210>
ffffffffc0002b36:	66 45 85 f6          	test   %r14w,%r14w
ffffffffc0002b3a:	0f 84 1d fe ff ff    	je     ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002b40:	e9 cb fe ff ff       	jmpq   ffffffffc0002a10 <__vprintf_write_uint+0x110>
ffffffffc0002b45:	0f 1f 00             	nopl   (%rax)
ffffffffc0002b48:	83 eb 01             	sub    $0x1,%ebx
ffffffffc0002b4b:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002b4e:	b9 30 00 00 00       	mov    $0x30,%ecx
ffffffffc0002b53:	ff d7                	callq  *%rdi
ffffffffc0002b55:	85 db                	test   %ebx,%ebx
ffffffffc0002b57:	75 ef                	jne    ffffffffc0002b48 <__vprintf_write_uint+0x248>
ffffffffc0002b59:	e9 ff fd ff ff       	jmpq   ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002b5e:	66 90                	xchg   %ax,%ax
ffffffffc0002b60:	83 c1 37             	add    $0x37,%ecx
ffffffffc0002b63:	0f b6 c9             	movzbl %cl,%ecx
ffffffffc0002b66:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002b69:	ff d7                	callq  *%rdi
ffffffffc0002b6b:	40 84 f6             	test   %sil,%sil
ffffffffc0002b6e:	74 c6                	je     ffffffffc0002b36 <__vprintf_write_uint+0x236>
ffffffffc0002b70:	83 ee 04             	sub    $0x4,%esi
ffffffffc0002b73:	48 89 e8             	mov    %rbp,%rax
ffffffffc0002b76:	89 f1                	mov    %esi,%ecx
ffffffffc0002b78:	48 d3 e8             	shr    %cl,%rax
ffffffffc0002b7b:	48 89 c1             	mov    %rax,%rcx
ffffffffc0002b7e:	83 e1 0f             	and    $0xf,%ecx
ffffffffc0002b81:	80 f9 09             	cmp    $0x9,%cl
ffffffffc0002b84:	77 da                	ja     ffffffffc0002b60 <__vprintf_write_uint+0x260>
ffffffffc0002b86:	83 c1 30             	add    $0x30,%ecx
ffffffffc0002b89:	eb d8                	jmp    ffffffffc0002b63 <__vprintf_write_uint+0x263>
ffffffffc0002b8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0002b90:	4d 85 ed             	test   %r13,%r13
ffffffffc0002b93:	74 0b                	je     ffffffffc0002ba0 <__vprintf_write_uint+0x2a0>
ffffffffc0002b95:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002b98:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffffc0002b9d:	41 ff d5             	callq  *%r13
ffffffffc0002ba0:	48 85 ff             	test   %rdi,%rdi
ffffffffc0002ba3:	74 0a                	je     ffffffffc0002baf <__vprintf_write_uint+0x2af>
ffffffffc0002ba5:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002ba8:	b9 30 00 00 00       	mov    $0x30,%ecx
ffffffffc0002bad:	ff d7                	callq  *%rdi
ffffffffc0002baf:	41 83 fe 01          	cmp    $0x1,%r14d
ffffffffc0002bb3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffffc0002bb9:	41 83 d6 ff          	adc    $0xffffffff,%r14d
ffffffffc0002bbd:	48 85 ed             	test   %rbp,%rbp
ffffffffc0002bc0:	0f 84 4a 02 00 00    	je     ffffffffc0002e10 <__vprintf_write_uint+0x510>
ffffffffc0002bc6:	48 89 e8             	mov    %rbp,%rax
ffffffffc0002bc9:	31 f6                	xor    %esi,%esi
ffffffffc0002bcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0002bd0:	83 c6 01             	add    $0x1,%esi
ffffffffc0002bd3:	48 c1 e8 03          	shr    $0x3,%rax
ffffffffc0002bd7:	75 f7                	jne    ffffffffc0002bd0 <__vprintf_write_uint+0x2d0>
ffffffffc0002bd9:	40 0f b6 c6          	movzbl %sil,%eax
ffffffffc0002bdd:	44 89 f3             	mov    %r14d,%ebx
ffffffffc0002be0:	44 39 f0             	cmp    %r14d,%eax
ffffffffc0002be3:	0f 43 d8             	cmovae %eax,%ebx
ffffffffc0002be6:	4d 85 ed             	test   %r13,%r13
ffffffffc0002be9:	74 1a                	je     ffffffffc0002c05 <__vprintf_write_uint+0x305>
ffffffffc0002beb:	44 89 44 24 2c       	mov    %r8d,0x2c(%rsp)
ffffffffc0002bf0:	89 d9                	mov    %ebx,%ecx
ffffffffc0002bf2:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002bf5:	89 44 24 28          	mov    %eax,0x28(%rsp)
ffffffffc0002bf9:	41 ff d5             	callq  *%r13
ffffffffc0002bfc:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
ffffffffc0002c01:	8b 44 24 28          	mov    0x28(%rsp),%eax
ffffffffc0002c05:	46 8d 2c 03          	lea    (%rbx,%r8,1),%r13d
ffffffffc0002c09:	48 85 ff             	test   %rdi,%rdi
ffffffffc0002c0c:	0f 84 4b fd ff ff    	je     ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002c12:	44 8d 34 76          	lea    (%rsi,%rsi,2),%r14d
ffffffffc0002c16:	29 c3                	sub    %eax,%ebx
ffffffffc0002c18:	44 89 f6             	mov    %r14d,%esi
ffffffffc0002c1b:	66 41 83 e7 08       	and    $0x8,%r15w
ffffffffc0002c20:	0f 85 fa 01 00 00    	jne    ffffffffc0002e20 <__vprintf_write_uint+0x520>
ffffffffc0002c26:	85 db                	test   %ebx,%ebx
ffffffffc0002c28:	0f 84 8c 02 00 00    	je     ffffffffc0002eba <__vprintf_write_uint+0x5ba>
ffffffffc0002c2e:	66 90                	xchg   %ax,%ax
ffffffffc0002c30:	83 eb 01             	sub    $0x1,%ebx
ffffffffc0002c33:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002c36:	b9 30 00 00 00       	mov    $0x30,%ecx
ffffffffc0002c3b:	ff d7                	callq  *%rdi
ffffffffc0002c3d:	85 db                	test   %ebx,%ebx
ffffffffc0002c3f:	75 ef                	jne    ffffffffc0002c30 <__vprintf_write_uint+0x330>
ffffffffc0002c41:	45 84 f6             	test   %r14b,%r14b
ffffffffc0002c44:	0f 84 13 fd ff ff    	je     ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002c4a:	31 db                	xor    %ebx,%ebx
ffffffffc0002c4c:	e9 d7 01 00 00       	jmpq   ffffffffc0002e28 <__vprintf_write_uint+0x528>
ffffffffc0002c51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0002c58:	4d 85 ed             	test   %r13,%r13
ffffffffc0002c5b:	74 0b                	je     ffffffffc0002c68 <__vprintf_write_uint+0x368>
ffffffffc0002c5d:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002c60:	b9 02 00 00 00       	mov    $0x2,%ecx
ffffffffc0002c65:	41 ff d5             	callq  *%r13
ffffffffc0002c68:	48 85 ff             	test   %rdi,%rdi
ffffffffc0002c6b:	74 22                	je     ffffffffc0002c8f <__vprintf_write_uint+0x38f>
ffffffffc0002c6d:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002c70:	b9 30 00 00 00       	mov    $0x30,%ecx
ffffffffc0002c75:	ff d7                	callq  *%rdi
ffffffffc0002c77:	44 89 f8             	mov    %r15d,%eax
ffffffffc0002c7a:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002c7d:	66 25 00 04          	and    $0x400,%ax
ffffffffc0002c81:	66 83 f8 01          	cmp    $0x1,%ax
ffffffffc0002c85:	19 c9                	sbb    %ecx,%ecx
ffffffffc0002c87:	83 e1 20             	and    $0x20,%ecx
ffffffffc0002c8a:	83 c1 58             	add    $0x58,%ecx
ffffffffc0002c8d:	ff d7                	callq  *%rdi
ffffffffc0002c8f:	41 8d 46 fe          	lea    -0x2(%r14),%eax
ffffffffc0002c93:	41 83 fe 01          	cmp    $0x1,%r14d
ffffffffc0002c97:	bb 00 00 00 00       	mov    $0x0,%ebx
ffffffffc0002c9c:	41 b8 02 00 00 00    	mov    $0x2,%r8d
ffffffffc0002ca2:	0f 47 d8             	cmova  %eax,%ebx
ffffffffc0002ca5:	41 89 de             	mov    %ebx,%r14d
ffffffffc0002ca8:	48 85 ed             	test   %rbp,%rbp
ffffffffc0002cab:	0f 85 f2 fc ff ff    	jne    ffffffffc00029a3 <__vprintf_write_uint+0xa3>
ffffffffc0002cb1:	be 02 00 00 00       	mov    $0x2,%esi
ffffffffc0002cb6:	e9 b0 fd ff ff       	jmpq   ffffffffc0002a6b <__vprintf_write_uint+0x16b>
ffffffffc0002cbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0002cc0:	48 8d 45 01          	lea    0x1(%rbp),%rax
ffffffffc0002cc4:	41 b8 02 00 00 00    	mov    $0x2,%r8d
ffffffffc0002cca:	be 0a 00 00 00       	mov    $0xa,%esi
ffffffffc0002ccf:	48 83 f8 0a          	cmp    $0xa,%rax
ffffffffc0002cd3:	77 19                	ja     ffffffffc0002cee <__vprintf_write_uint+0x3ee>
ffffffffc0002cd5:	e9 d0 01 00 00       	jmpq   ffffffffc0002eaa <__vprintf_write_uint+0x5aa>
ffffffffc0002cda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc0002ce0:	41 83 c0 01          	add    $0x1,%r8d
ffffffffc0002ce4:	41 80 f8 14          	cmp    $0x14,%r8b
ffffffffc0002ce8:	0f 84 aa 01 00 00    	je     ffffffffc0002e98 <__vprintf_write_uint+0x598>
ffffffffc0002cee:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffffc0002cf2:	48 01 f6             	add    %rsi,%rsi
ffffffffc0002cf5:	48 39 c6             	cmp    %rax,%rsi
ffffffffc0002cf8:	72 e6                	jb     ffffffffc0002ce0 <__vprintf_write_uint+0x3e0>
ffffffffc0002cfa:	41 0f b6 c0          	movzbl %r8b,%eax
ffffffffc0002cfe:	44 39 f0             	cmp    %r14d,%eax
ffffffffc0002d01:	44 0f 43 f0          	cmovae %eax,%r14d
ffffffffc0002d05:	4d 85 ed             	test   %r13,%r13
ffffffffc0002d08:	74 1c                	je     ffffffffc0002d26 <__vprintf_write_uint+0x426>
ffffffffc0002d0a:	44 88 44 24 2c       	mov    %r8b,0x2c(%rsp)
ffffffffc0002d0f:	44 89 f1             	mov    %r14d,%ecx
ffffffffc0002d12:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002d15:	89 44 24 28          	mov    %eax,0x28(%rsp)
ffffffffc0002d19:	41 ff d5             	callq  *%r13
ffffffffc0002d1c:	44 0f b6 44 24 2c    	movzbl 0x2c(%rsp),%r8d
ffffffffc0002d22:	8b 44 24 28          	mov    0x28(%rsp),%eax
ffffffffc0002d26:	45 89 f5             	mov    %r14d,%r13d
ffffffffc0002d29:	48 85 ff             	test   %rdi,%rdi
ffffffffc0002d2c:	0f 84 2b fc ff ff    	je     ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002d32:	44 89 f3             	mov    %r14d,%ebx
ffffffffc0002d35:	29 c3                	sub    %eax,%ebx
ffffffffc0002d37:	66 41 83 e7 08       	and    $0x8,%r15w
ffffffffc0002d3c:	75 28                	jne    ffffffffc0002d66 <__vprintf_write_uint+0x466>
ffffffffc0002d3e:	85 db                	test   %ebx,%ebx
ffffffffc0002d40:	74 22                	je     ffffffffc0002d64 <__vprintf_write_uint+0x464>
ffffffffc0002d42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc0002d48:	83 eb 01             	sub    $0x1,%ebx
ffffffffc0002d4b:	44 88 44 24 28       	mov    %r8b,0x28(%rsp)
ffffffffc0002d50:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002d53:	b9 30 00 00 00       	mov    $0x30,%ecx
ffffffffc0002d58:	ff d7                	callq  *%rdi
ffffffffc0002d5a:	85 db                	test   %ebx,%ebx
ffffffffc0002d5c:	44 0f b6 44 24 28    	movzbl 0x28(%rsp),%r8d
ffffffffc0002d62:	75 e4                	jne    ffffffffc0002d48 <__vprintf_write_uint+0x448>
ffffffffc0002d64:	31 db                	xor    %ebx,%ebx
ffffffffc0002d66:	41 80 f8 14          	cmp    $0x14,%r8b
ffffffffc0002d6a:	74 17                	je     ffffffffc0002d83 <__vprintf_write_uint+0x483>
ffffffffc0002d6c:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
ffffffffc0002d73:	cc cc cc 
ffffffffc0002d76:	48 89 f0             	mov    %rsi,%rax
ffffffffc0002d79:	48 f7 e2             	mul    %rdx
ffffffffc0002d7c:	48 c1 ea 03          	shr    $0x3,%rdx
ffffffffc0002d80:	48 89 d6             	mov    %rdx,%rsi
ffffffffc0002d83:	49 be cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r14
ffffffffc0002d8a:	cc cc cc 
ffffffffc0002d8d:	0f 1f 00             	nopl   (%rax)
ffffffffc0002d90:	48 89 e8             	mov    %rbp,%rax
ffffffffc0002d93:	31 d2                	xor    %edx,%edx
ffffffffc0002d95:	44 88 44 24 28       	mov    %r8b,0x28(%rsp)
ffffffffc0002d9a:	48 f7 f6             	div    %rsi
ffffffffc0002d9d:	48 89 c1             	mov    %rax,%rcx
ffffffffc0002da0:	49 f7 e6             	mul    %r14
ffffffffc0002da3:	48 c1 ea 03          	shr    $0x3,%rdx
ffffffffc0002da7:	48 8d 04 92          	lea    (%rdx,%rdx,4),%rax
ffffffffc0002dab:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002dae:	48 01 c0             	add    %rax,%rax
ffffffffc0002db1:	48 29 c1             	sub    %rax,%rcx
ffffffffc0002db4:	83 c1 30             	add    $0x30,%ecx
ffffffffc0002db7:	0f b6 c9             	movzbl %cl,%ecx
ffffffffc0002dba:	ff d7                	callq  *%rdi
ffffffffc0002dbc:	48 89 f0             	mov    %rsi,%rax
ffffffffc0002dbf:	44 0f b6 44 24 28    	movzbl 0x28(%rsp),%r8d
ffffffffc0002dc5:	49 f7 e6             	mul    %r14
ffffffffc0002dc8:	48 89 d6             	mov    %rdx,%rsi
ffffffffc0002dcb:	48 c1 ee 03          	shr    $0x3,%rsi
ffffffffc0002dcf:	41 80 e8 01          	sub    $0x1,%r8b
ffffffffc0002dd3:	75 bb                	jne    ffffffffc0002d90 <__vprintf_write_uint+0x490>
ffffffffc0002dd5:	66 45 85 ff          	test   %r15w,%r15w
ffffffffc0002dd9:	0f 84 7e fb ff ff    	je     ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002ddf:	85 db                	test   %ebx,%ebx
ffffffffc0002de1:	0f 84 76 fb ff ff    	je     ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002de7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffffc0002dee:	00 00 
ffffffffc0002df0:	83 eb 01             	sub    $0x1,%ebx
ffffffffc0002df3:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002df6:	b9 30 00 00 00       	mov    $0x30,%ecx
ffffffffc0002dfb:	ff d7                	callq  *%rdi
ffffffffc0002dfd:	85 db                	test   %ebx,%ebx
ffffffffc0002dff:	75 ef                	jne    ffffffffc0002df0 <__vprintf_write_uint+0x4f0>
ffffffffc0002e01:	e9 57 fb ff ff       	jmpq   ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002e06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffffc0002e0d:	00 00 00 
ffffffffc0002e10:	be 01 00 00 00       	mov    $0x1,%esi
ffffffffc0002e15:	e9 51 fc ff ff       	jmpq   ffffffffc0002a6b <__vprintf_write_uint+0x16b>
ffffffffc0002e1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc0002e20:	45 84 f6             	test   %r14b,%r14b
ffffffffc0002e23:	74 28                	je     ffffffffc0002e4d <__vprintf_write_uint+0x54d>
ffffffffc0002e25:	0f 1f 00             	nopl   (%rax)
ffffffffc0002e28:	83 ee 03             	sub    $0x3,%esi
ffffffffc0002e2b:	48 89 e8             	mov    %rbp,%rax
ffffffffc0002e2e:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002e31:	89 f1                	mov    %esi,%ecx
ffffffffc0002e33:	48 d3 e8             	shr    %cl,%rax
ffffffffc0002e36:	83 e0 07             	and    $0x7,%eax
ffffffffc0002e39:	8d 48 30             	lea    0x30(%rax),%ecx
ffffffffc0002e3c:	ff d7                	callq  *%rdi
ffffffffc0002e3e:	40 84 f6             	test   %sil,%sil
ffffffffc0002e41:	75 e5                	jne    ffffffffc0002e28 <__vprintf_write_uint+0x528>
ffffffffc0002e43:	66 45 85 ff          	test   %r15w,%r15w
ffffffffc0002e47:	0f 84 10 fb ff ff    	je     ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002e4d:	85 db                	test   %ebx,%ebx
ffffffffc0002e4f:	0f 84 08 fb ff ff    	je     ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002e55:	0f 1f 00             	nopl   (%rax)
ffffffffc0002e58:	83 eb 01             	sub    $0x1,%ebx
ffffffffc0002e5b:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0002e5e:	b9 30 00 00 00       	mov    $0x30,%ecx
ffffffffc0002e63:	ff d7                	callq  *%rdi
ffffffffc0002e65:	85 db                	test   %ebx,%ebx
ffffffffc0002e67:	75 ef                	jne    ffffffffc0002e58 <__vprintf_write_uint+0x558>
ffffffffc0002e69:	e9 ef fa ff ff       	jmpq   ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002e6e:	4d 85 ed             	test   %r13,%r13
ffffffffc0002e71:	74 0b                	je     ffffffffc0002e7e <__vprintf_write_uint+0x57e>
ffffffffc0002e73:	48 89 ca             	mov    %rcx,%rdx
ffffffffc0002e76:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffffc0002e7b:	41 ff d5             	callq  *%r13
ffffffffc0002e7e:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffffc0002e84:	48 85 ff             	test   %rdi,%rdi
ffffffffc0002e87:	0f 85 2c fc ff ff    	jne    ffffffffc0002ab9 <__vprintf_write_uint+0x1b9>
ffffffffc0002e8d:	e9 cb fa ff ff       	jmpq   ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002e92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc0002e98:	b8 14 00 00 00       	mov    $0x14,%eax
ffffffffc0002e9d:	e9 5c fe ff ff       	jmpq   ffffffffc0002cfe <__vprintf_write_uint+0x3fe>
ffffffffc0002ea2:	45 31 c0             	xor    %r8d,%r8d
ffffffffc0002ea5:	e9 1c fd ff ff       	jmpq   ffffffffc0002bc6 <__vprintf_write_uint+0x2c6>
ffffffffc0002eaa:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffffc0002eaf:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffffc0002eb5:	e9 44 fe ff ff       	jmpq   ffffffffc0002cfe <__vprintf_write_uint+0x3fe>
ffffffffc0002eba:	45 84 f6             	test   %r14b,%r14b
ffffffffc0002ebd:	0f 84 9a fa ff ff    	je     ffffffffc000295d <__vprintf_write_uint+0x5d>
ffffffffc0002ec3:	31 db                	xor    %ebx,%ebx
ffffffffc0002ec5:	e9 5e ff ff ff       	jmpq   ffffffffc0002e28 <__vprintf_write_uint+0x528>
ffffffffc0002eca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffffc0002ed0 <__vprintf_buffer>:
ffffffffc0002ed0:	41 57                	push   %r15
ffffffffc0002ed2:	41 56                	push   %r14
ffffffffc0002ed4:	41 55                	push   %r13
ffffffffc0002ed6:	41 54                	push   %r12
ffffffffc0002ed8:	55                   	push   %rbp
ffffffffc0002ed9:	57                   	push   %rdi
ffffffffc0002eda:	56                   	push   %rsi
ffffffffc0002edb:	53                   	push   %rbx
ffffffffc0002edc:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
ffffffffc0002ee3:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffffc0002ee7:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
ffffffffc0002eee:	0f b6 02             	movzbl (%rdx),%eax
ffffffffc0002ef1:	48 89 ce             	mov    %rcx,%rsi
ffffffffc0002ef4:	48 89 d3             	mov    %rdx,%rbx
ffffffffc0002ef7:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
ffffffffc0002efc:	4d 89 c4             	mov    %r8,%r12
ffffffffc0002eff:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
ffffffffc0002f04:	84 c0                	test   %al,%al
ffffffffc0002f06:	0f 84 59 06 00 00    	je     ffffffffc0003565 <__vprintf_buffer+0x695>
ffffffffc0002f0c:	4c 8b 2d 3d 33 00 00 	mov    0x333d(%rip),%r13        # ffffffffc0006250 <.refptr.realloc>
ffffffffc0002f13:	31 ed                	xor    %ebp,%ebp
ffffffffc0002f15:	4c 8d 35 e4 f9 ff ff 	lea    -0x61c(%rip),%r14        # ffffffffc0002900 <__vprintf_write_uint>
ffffffffc0002f1c:	eb 49                	jmp    ffffffffc0002f67 <__vprintf_buffer+0x97>
ffffffffc0002f1e:	66 90                	xchg   %ax,%ax
ffffffffc0002f20:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
ffffffffc0002f25:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
ffffffffc0002f2a:	48 83 c5 01          	add    $0x1,%rbp
ffffffffc0002f2e:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffffc0002f32:	48 8b 0e             	mov    (%rsi),%rcx
ffffffffc0002f35:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
ffffffffc0002f3a:	41 ff d5             	callq  *%r13
ffffffffc0002f3d:	48 89 06             	mov    %rax,(%rsi)
ffffffffc0002f40:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
ffffffffc0002f45:	0f b6 0b             	movzbl (%rbx),%ecx
ffffffffc0002f48:	48 89 fb             	mov    %rdi,%rbx
ffffffffc0002f4b:	48 8b 10             	mov    (%rax),%rdx
ffffffffc0002f4e:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc0002f53:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
ffffffffc0002f56:	48 83 44 24 70 01    	addq   $0x1,0x70(%rsp)
ffffffffc0002f5c:	0f b6 03             	movzbl (%rbx),%eax
ffffffffc0002f5f:	84 c0                	test   %al,%al
ffffffffc0002f61:	0f 84 0e 01 00 00    	je     ffffffffc0003075 <__vprintf_buffer+0x1a5>
ffffffffc0002f67:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffffc0002f6b:	3c 25                	cmp    $0x25,%al
ffffffffc0002f6d:	75 b1                	jne    ffffffffc0002f20 <__vprintf_buffer+0x50>
ffffffffc0002f6f:	48 89 fb             	mov    %rdi,%rbx
ffffffffc0002f72:	31 f6                	xor    %esi,%esi
ffffffffc0002f74:	eb 26                	jmp    ffffffffc0002f9c <__vprintf_buffer+0xcc>
ffffffffc0002f76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffffc0002f7d:	00 00 00 
ffffffffc0002f80:	3c 2b                	cmp    $0x2b,%al
ffffffffc0002f82:	74 2c                	je     ffffffffc0002fb0 <__vprintf_buffer+0xe0>
ffffffffc0002f84:	3c 20                	cmp    $0x20,%al
ffffffffc0002f86:	74 30                	je     ffffffffc0002fb8 <__vprintf_buffer+0xe8>
ffffffffc0002f88:	3c 2d                	cmp    $0x2d,%al
ffffffffc0002f8a:	74 34                	je     ffffffffc0002fc0 <__vprintf_buffer+0xf0>
ffffffffc0002f8c:	3c 23                	cmp    $0x23,%al
ffffffffc0002f8e:	75 38                	jne    ffffffffc0002fc8 <__vprintf_buffer+0xf8>
ffffffffc0002f90:	83 ce 10             	or     $0x10,%esi
ffffffffc0002f93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0002f98:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0002f9c:	0f be 03             	movsbl (%rbx),%eax
ffffffffc0002f9f:	3c 30                	cmp    $0x30,%al
ffffffffc0002fa1:	75 dd                	jne    ffffffffc0002f80 <__vprintf_buffer+0xb0>
ffffffffc0002fa3:	83 ce 01             	or     $0x1,%esi
ffffffffc0002fa6:	eb f0                	jmp    ffffffffc0002f98 <__vprintf_buffer+0xc8>
ffffffffc0002fa8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffffc0002faf:	00 
ffffffffc0002fb0:	83 ce 02             	or     $0x2,%esi
ffffffffc0002fb3:	eb e3                	jmp    ffffffffc0002f98 <__vprintf_buffer+0xc8>
ffffffffc0002fb5:	0f 1f 00             	nopl   (%rax)
ffffffffc0002fb8:	83 ce 04             	or     $0x4,%esi
ffffffffc0002fbb:	eb db                	jmp    ffffffffc0002f98 <__vprintf_buffer+0xc8>
ffffffffc0002fbd:	0f 1f 00             	nopl   (%rax)
ffffffffc0002fc0:	83 ce 08             	or     $0x8,%esi
ffffffffc0002fc3:	eb d3                	jmp    ffffffffc0002f98 <__vprintf_buffer+0xc8>
ffffffffc0002fc5:	0f 1f 00             	nopl   (%rax)
ffffffffc0002fc8:	3c 2a                	cmp    $0x2a,%al
ffffffffc0002fca:	0f 85 ed 00 00 00    	jne    ffffffffc00030bd <__vprintf_buffer+0x1ed>
ffffffffc0002fd0:	45 8b 3c 24          	mov    (%r12),%r15d
ffffffffc0002fd4:	49 8d 54 24 08       	lea    0x8(%r12),%rdx
ffffffffc0002fd9:	45 85 ff             	test   %r15d,%r15d
ffffffffc0002fdc:	79 06                	jns    ffffffffc0002fe4 <__vprintf_buffer+0x114>
ffffffffc0002fde:	83 ce 08             	or     $0x8,%esi
ffffffffc0002fe1:	41 f7 df             	neg    %r15d
ffffffffc0002fe4:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
ffffffffc0002fe8:	49 89 d4             	mov    %rdx,%r12
ffffffffc0002feb:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0002fef:	45 31 c0             	xor    %r8d,%r8d
ffffffffc0002ff2:	3c 2e                	cmp    $0x2e,%al
ffffffffc0002ff4:	0f 84 f9 00 00 00    	je     ffffffffc00030f3 <__vprintf_buffer+0x223>
ffffffffc0002ffa:	3c 68                	cmp    $0x68,%al
ffffffffc0002ffc:	0f 84 24 01 00 00    	je     ffffffffc0003126 <__vprintf_buffer+0x256>
ffffffffc0003002:	3c 6c                	cmp    $0x6c,%al
ffffffffc0003004:	0f 84 05 03 00 00    	je     ffffffffc000330f <__vprintf_buffer+0x43f>
ffffffffc000300a:	3c 6a                	cmp    $0x6a,%al
ffffffffc000300c:	74 0c                	je     ffffffffc000301a <__vprintf_buffer+0x14a>
ffffffffc000300e:	3c 7a                	cmp    $0x7a,%al
ffffffffc0003010:	74 08                	je     ffffffffc000301a <__vprintf_buffer+0x14a>
ffffffffc0003012:	3c 74                	cmp    $0x74,%al
ffffffffc0003014:	0f 85 20 01 00 00    	jne    ffffffffc000313a <__vprintf_buffer+0x26a>
ffffffffc000301a:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
ffffffffc000301e:	66 81 ce 00 02       	or     $0x200,%si
ffffffffc0003023:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003027:	3c 25                	cmp    $0x25,%al
ffffffffc0003029:	0f 85 13 01 00 00    	jne    ffffffffc0003142 <__vprintf_buffer+0x272>
ffffffffc000302f:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
ffffffffc0003034:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
ffffffffc0003039:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc000303d:	48 83 c5 01          	add    $0x1,%rbp
ffffffffc0003041:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffffc0003045:	48 8b 0e             	mov    (%rsi),%rcx
ffffffffc0003048:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
ffffffffc000304d:	41 ff d5             	callq  *%r13
ffffffffc0003050:	48 89 06             	mov    %rax,(%rsi)
ffffffffc0003053:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
ffffffffc0003058:	48 8b 10             	mov    (%rax),%rdx
ffffffffc000305b:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc0003060:	c6 04 02 25          	movb   $0x25,(%rdx,%rax,1)
ffffffffc0003064:	0f b6 03             	movzbl (%rbx),%eax
ffffffffc0003067:	48 83 44 24 70 01    	addq   $0x1,0x70(%rsp)
ffffffffc000306d:	84 c0                	test   %al,%al
ffffffffc000306f:	0f 85 f2 fe ff ff    	jne    ffffffffc0002f67 <__vprintf_buffer+0x97>
ffffffffc0003075:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
ffffffffc000307a:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
ffffffffc000307f:	44 8d 65 01          	lea    0x1(%rbp),%r12d
ffffffffc0003083:	48 8b 0e             	mov    (%rsi),%rcx
ffffffffc0003086:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffffc000308a:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
ffffffffc000308f:	41 ff d5             	callq  *%r13
ffffffffc0003092:	48 89 06             	mov    %rax,(%rsi)
ffffffffc0003095:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
ffffffffc000309a:	48 8b 10             	mov    (%rax),%rdx
ffffffffc000309d:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc00030a2:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
ffffffffc00030a6:	44 89 e0             	mov    %r12d,%eax
ffffffffc00030a9:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
ffffffffc00030b0:	5b                   	pop    %rbx
ffffffffc00030b1:	5e                   	pop    %rsi
ffffffffc00030b2:	5f                   	pop    %rdi
ffffffffc00030b3:	5d                   	pop    %rbp
ffffffffc00030b4:	41 5c                	pop    %r12
ffffffffc00030b6:	41 5d                	pop    %r13
ffffffffc00030b8:	41 5e                	pop    %r14
ffffffffc00030ba:	41 5f                	pop    %r15
ffffffffc00030bc:	c3                   	retq   
ffffffffc00030bd:	8d 50 d0             	lea    -0x30(%rax),%edx
ffffffffc00030c0:	45 31 ff             	xor    %r15d,%r15d
ffffffffc00030c3:	80 fa 09             	cmp    $0x9,%dl
ffffffffc00030c6:	0f 87 23 ff ff ff    	ja     ffffffffc0002fef <__vprintf_buffer+0x11f>
ffffffffc00030cc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffffc00030d0:	43 8d 14 bf          	lea    (%r15,%r15,4),%edx
ffffffffc00030d4:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc00030d8:	44 8d 7c 50 d0       	lea    -0x30(%rax,%rdx,2),%r15d
ffffffffc00030dd:	0f be 03             	movsbl (%rbx),%eax
ffffffffc00030e0:	8d 50 d0             	lea    -0x30(%rax),%edx
ffffffffc00030e3:	80 fa 09             	cmp    $0x9,%dl
ffffffffc00030e6:	76 e8                	jbe    ffffffffc00030d0 <__vprintf_buffer+0x200>
ffffffffc00030e8:	45 31 c0             	xor    %r8d,%r8d
ffffffffc00030eb:	3c 2e                	cmp    $0x2e,%al
ffffffffc00030ed:	0f 85 07 ff ff ff    	jne    ffffffffc0002ffa <__vprintf_buffer+0x12a>
ffffffffc00030f3:	0f be 43 01          	movsbl 0x1(%rbx),%eax
ffffffffc00030f7:	83 ce 20             	or     $0x20,%esi
ffffffffc00030fa:	3c 2a                	cmp    $0x2a,%al
ffffffffc00030fc:	0f 85 4e 01 00 00    	jne    ffffffffc0003250 <__vprintf_buffer+0x380>
ffffffffc0003102:	45 8b 04 24          	mov    (%r12),%r8d
ffffffffc0003106:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffffc000310b:	45 85 c0             	test   %r8d,%r8d
ffffffffc000310e:	4c 0f 48 c0          	cmovs  %rax,%r8
ffffffffc0003112:	0f b6 43 02          	movzbl 0x2(%rbx),%eax
ffffffffc0003116:	49 83 c4 08          	add    $0x8,%r12
ffffffffc000311a:	48 83 c3 02          	add    $0x2,%rbx
ffffffffc000311e:	3c 68                	cmp    $0x68,%al
ffffffffc0003120:	0f 85 dc fe ff ff    	jne    ffffffffc0003002 <__vprintf_buffer+0x132>
ffffffffc0003126:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
ffffffffc000312a:	3c 68                	cmp    $0x68,%al
ffffffffc000312c:	0f 84 28 03 00 00    	je     ffffffffc000345a <__vprintf_buffer+0x58a>
ffffffffc0003132:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003136:	40 80 ce 80          	or     $0x80,%sil
ffffffffc000313a:	3c 25                	cmp    $0x25,%al
ffffffffc000313c:	0f 84 ed fe ff ff    	je     ffffffffc000302f <__vprintf_buffer+0x15f>
ffffffffc0003142:	3c 63                	cmp    $0x63,%al
ffffffffc0003144:	0f 84 33 01 00 00    	je     ffffffffc000327d <__vprintf_buffer+0x3ad>
ffffffffc000314a:	3c 73                	cmp    $0x73,%al
ffffffffc000314c:	0f 84 d7 01 00 00    	je     ffffffffc0003329 <__vprintf_buffer+0x459>
ffffffffc0003152:	3c 64                	cmp    $0x64,%al
ffffffffc0003154:	0f 84 be 02 00 00    	je     ffffffffc0003418 <__vprintf_buffer+0x548>
ffffffffc000315a:	3c 69                	cmp    $0x69,%al
ffffffffc000315c:	0f 84 b6 02 00 00    	je     ffffffffc0003418 <__vprintf_buffer+0x548>
ffffffffc0003162:	8d 50 a8             	lea    -0x58(%rax),%edx
ffffffffc0003165:	80 fa 20             	cmp    $0x20,%dl
ffffffffc0003168:	0f 87 01 05 00 00    	ja     ffffffffc000366f <__vprintf_buffer+0x79f>
ffffffffc000316e:	48 b9 01 00 80 20 01 	movabs $0x120800001,%rcx
ffffffffc0003175:	00 00 00 
ffffffffc0003178:	48 0f a3 d1          	bt     %rdx,%rcx
ffffffffc000317c:	0f 83 ed 04 00 00    	jae    ffffffffc000366f <__vprintf_buffer+0x79f>
ffffffffc0003182:	89 f2                	mov    %esi,%edx
ffffffffc0003184:	4d 8d 7c 24 08       	lea    0x8(%r12),%r15
ffffffffc0003189:	80 ce 04             	or     $0x4,%dh
ffffffffc000318c:	3c 58                	cmp    $0x58,%al
ffffffffc000318e:	0f 44 f2             	cmove  %edx,%esi
ffffffffc0003191:	40 f6 c6 40          	test   $0x40,%sil
ffffffffc0003195:	0f 84 e3 03 00 00    	je     ffffffffc000357e <__vprintf_buffer+0x6ae>
ffffffffc000319b:	41 0f b6 3c 24       	movzbl (%r12),%edi
ffffffffc00031a0:	40 f6 c6 06          	test   $0x6,%sil
ffffffffc00031a4:	74 56                	je     ffffffffc00031fc <__vprintf_buffer+0x32c>
ffffffffc00031a6:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
ffffffffc00031ab:	4c 8b 64 24 60       	mov    0x60(%rsp),%r12
ffffffffc00031b0:	44 89 44 24 40       	mov    %r8d,0x40(%rsp)
ffffffffc00031b5:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffffc00031b9:	49 8b 0c 24          	mov    (%r12),%rcx
ffffffffc00031bd:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
ffffffffc00031c2:	41 ff d5             	callq  *%r13
ffffffffc00031c5:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc00031ca:	44 8b 44 24 40       	mov    0x40(%rsp),%r8d
ffffffffc00031cf:	49 89 04 24          	mov    %rax,(%r12)
ffffffffc00031d3:	89 f0                	mov    %esi,%eax
ffffffffc00031d5:	83 e0 04             	and    $0x4,%eax
ffffffffc00031d8:	48 8b 0a             	mov    (%rdx),%rcx
ffffffffc00031db:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
ffffffffc00031e0:	66 83 f8 01          	cmp    $0x1,%ax
ffffffffc00031e4:	19 c0                	sbb    %eax,%eax
ffffffffc00031e6:	48 83 c5 01          	add    $0x1,%rbp
ffffffffc00031ea:	83 e0 0b             	and    $0xb,%eax
ffffffffc00031ed:	83 c0 20             	add    $0x20,%eax
ffffffffc00031f0:	88 04 11             	mov    %al,(%rcx,%rdx,1)
ffffffffc00031f3:	0f b6 03             	movzbl (%rbx),%eax
ffffffffc00031f6:	48 83 44 24 70 01    	addq   $0x1,0x70(%rsp)
ffffffffc00031fc:	4d 89 fc             	mov    %r15,%r12
ffffffffc00031ff:	ba 08 00 00 00       	mov    $0x8,%edx
ffffffffc0003204:	3c 6f                	cmp    $0x6f,%al
ffffffffc0003206:	74 12                	je     ffffffffc000321a <__vprintf_buffer+0x34a>
ffffffffc0003208:	83 e0 df             	and    $0xffffffdf,%eax
ffffffffc000320b:	ba 10 00 00 00       	mov    $0x10,%edx
ffffffffc0003210:	3c 58                	cmp    $0x58,%al
ffffffffc0003212:	b8 0a 00 00 00       	mov    $0xa,%eax
ffffffffc0003217:	0f 45 d0             	cmovne %eax,%edx
ffffffffc000321a:	44 89 44 24 30       	mov    %r8d,0x30(%rsp)
ffffffffc000321f:	48 8d 4c 24 60       	lea    0x60(%rsp),%rcx
ffffffffc0003224:	44 0f b7 ce          	movzwl %si,%r9d
ffffffffc0003228:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc000322c:	89 54 24 20          	mov    %edx,0x20(%rsp)
ffffffffc0003230:	4c 8d 05 d9 f5 ff ff 	lea    -0xa27(%rip),%r8        # ffffffffc0002810 <__vprintf_buffer_write_func>
ffffffffc0003237:	48 8d 15 f2 f5 ff ff 	lea    -0xa0e(%rip),%rdx        # ffffffffc0002830 <__vprintf_buffer_reserve_func>
ffffffffc000323e:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
ffffffffc0003243:	41 ff d6             	callq  *%r14
ffffffffc0003246:	48 98                	cltq   
ffffffffc0003248:	48 01 c5             	add    %rax,%rbp
ffffffffc000324b:	e9 0c fd ff ff       	jmpq   ffffffffc0002f5c <__vprintf_buffer+0x8c>
ffffffffc0003250:	8d 50 d0             	lea    -0x30(%rax),%edx
ffffffffc0003253:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003257:	80 fa 09             	cmp    $0x9,%dl
ffffffffc000325a:	0f 87 9a fd ff ff    	ja     ffffffffc0002ffa <__vprintf_buffer+0x12a>
ffffffffc0003260:	43 8d 14 80          	lea    (%r8,%r8,4),%edx
ffffffffc0003264:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003268:	44 8d 44 50 d0       	lea    -0x30(%rax,%rdx,2),%r8d
ffffffffc000326d:	0f be 03             	movsbl (%rbx),%eax
ffffffffc0003270:	8d 50 d0             	lea    -0x30(%rax),%edx
ffffffffc0003273:	80 fa 09             	cmp    $0x9,%dl
ffffffffc0003276:	76 e8                	jbe    ffffffffc0003260 <__vprintf_buffer+0x390>
ffffffffc0003278:	e9 7d fd ff ff       	jmpq   ffffffffc0002ffa <__vprintf_buffer+0x12a>
ffffffffc000327d:	45 85 ff             	test   %r15d,%r15d
ffffffffc0003280:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffffc0003285:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
ffffffffc000328a:	44 0f 44 f8          	cmove  %eax,%r15d
ffffffffc000328e:	48 8b 0f             	mov    (%rdi),%rcx
ffffffffc0003291:	44 89 fa             	mov    %r15d,%edx
ffffffffc0003294:	48 03 54 24 68       	add    0x68(%rsp),%rdx
ffffffffc0003299:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
ffffffffc000329e:	41 ff d5             	callq  *%r13
ffffffffc00032a1:	83 e6 08             	and    $0x8,%esi
ffffffffc00032a4:	4d 8d 44 24 08       	lea    0x8(%r12),%r8
ffffffffc00032a9:	48 89 07             	mov    %rax,(%rdi)
ffffffffc00032ac:	41 8d 47 ff          	lea    -0x1(%r15),%eax
ffffffffc00032b0:	0f 84 f1 02 00 00    	je     ffffffffc00035a7 <__vprintf_buffer+0x6d7>
ffffffffc00032b6:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc00032bb:	45 8b 0c 24          	mov    (%r12),%r9d
ffffffffc00032bf:	48 8b 0a             	mov    (%rdx),%rcx
ffffffffc00032c2:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
ffffffffc00032c7:	44 88 0c 11          	mov    %r9b,(%rcx,%rdx,1)
ffffffffc00032cb:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
ffffffffc00032d0:	48 8d 57 01          	lea    0x1(%rdi),%rdx
ffffffffc00032d4:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc00032d9:	85 c0                	test   %eax,%eax
ffffffffc00032db:	74 22                	je     ffffffffc00032ff <__vprintf_buffer+0x42f>
ffffffffc00032dd:	0f 1f 00             	nopl   (%rax)
ffffffffc00032e0:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
ffffffffc00032e5:	48 8b 09             	mov    (%rcx),%rcx
ffffffffc00032e8:	c6 04 11 20          	movb   $0x20,(%rcx,%rdx,1)
ffffffffc00032ec:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
ffffffffc00032f1:	48 8d 57 01          	lea    0x1(%rdi),%rdx
ffffffffc00032f5:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc00032fa:	83 e8 01             	sub    $0x1,%eax
ffffffffc00032fd:	75 e1                	jne    ffffffffc00032e0 <__vprintf_buffer+0x410>
ffffffffc00032ff:	48 83 c5 01          	add    $0x1,%rbp
ffffffffc0003303:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003307:	4d 89 c4             	mov    %r8,%r12
ffffffffc000330a:	e9 4d fc ff ff       	jmpq   ffffffffc0002f5c <__vprintf_buffer+0x8c>
ffffffffc000330f:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
ffffffffc0003313:	3c 6c                	cmp    $0x6c,%al
ffffffffc0003315:	0f 84 38 02 00 00    	je     ffffffffc0003553 <__vprintf_buffer+0x683>
ffffffffc000331b:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc000331f:	66 81 ce 00 01       	or     $0x100,%si
ffffffffc0003324:	e9 11 fe ff ff       	jmpq   ffffffffc000313a <__vprintf_buffer+0x26a>
ffffffffc0003329:	4c 8b 54 24 60       	mov    0x60(%rsp),%r10
ffffffffc000332e:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
ffffffffc0003333:	4d 8b 24 24          	mov    (%r12),%r12
ffffffffc0003337:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc000333b:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
ffffffffc0003340:	49 8b 0a             	mov    (%r10),%rcx
ffffffffc0003343:	4d 85 e4             	test   %r12,%r12
ffffffffc0003346:	0f 84 44 01 00 00    	je     ffffffffc0003490 <__vprintf_buffer+0x5c0>
ffffffffc000334c:	89 f2                	mov    %esi,%edx
ffffffffc000334e:	45 89 fb             	mov    %r15d,%r11d
ffffffffc0003351:	83 e2 08             	and    $0x8,%edx
ffffffffc0003354:	83 e6 20             	and    $0x20,%esi
ffffffffc0003357:	66 89 54 24 40       	mov    %dx,0x40(%rsp)
ffffffffc000335c:	0f 84 68 03 00 00    	je     ffffffffc00036ca <__vprintf_buffer+0x7fa>
ffffffffc0003362:	4d 39 d8             	cmp    %r11,%r8
ffffffffc0003365:	4c 89 de             	mov    %r11,%rsi
ffffffffc0003368:	4c 89 54 24 58       	mov    %r10,0x58(%rsp)
ffffffffc000336d:	49 0f 43 f0          	cmovae %r8,%rsi
ffffffffc0003371:	4c 89 5c 24 50       	mov    %r11,0x50(%rsp)
ffffffffc0003376:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
ffffffffc000337b:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
ffffffffc000337f:	48 01 f5             	add    %rsi,%rbp
ffffffffc0003382:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
ffffffffc0003387:	41 ff d5             	callq  *%r13
ffffffffc000338a:	4c 8b 54 24 58       	mov    0x58(%rsp),%r10
ffffffffc000338f:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
ffffffffc0003394:	4c 8b 5c 24 50       	mov    0x50(%rsp),%r11
ffffffffc0003399:	49 89 02             	mov    %rax,(%r10)
ffffffffc000339c:	4d 39 d8             	cmp    %r11,%r8
ffffffffc000339f:	0f 86 44 02 00 00    	jbe    ffffffffc00035e9 <__vprintf_buffer+0x719>
ffffffffc00033a5:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc00033aa:	45 31 ff             	xor    %r15d,%r15d
ffffffffc00033ad:	4d 01 e0             	add    %r12,%r8
ffffffffc00033b0:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc00033b5:	41 0f b6 0c 24       	movzbl (%r12),%ecx
ffffffffc00033ba:	49 83 c4 01          	add    $0x1,%r12
ffffffffc00033be:	48 8b 12             	mov    (%rdx),%rdx
ffffffffc00033c1:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
ffffffffc00033c4:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc00033c9:	48 83 c0 01          	add    $0x1,%rax
ffffffffc00033cd:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
ffffffffc00033d2:	4d 39 e0             	cmp    %r12,%r8
ffffffffc00033d5:	75 d9                	jne    ffffffffc00033b0 <__vprintf_buffer+0x4e0>
ffffffffc00033d7:	66 83 7c 24 40 00    	cmpw   $0x0,0x40(%rsp)
ffffffffc00033dd:	49 89 fc             	mov    %rdi,%r12
ffffffffc00033e0:	0f 84 76 fb ff ff    	je     ffffffffc0002f5c <__vprintf_buffer+0x8c>
ffffffffc00033e6:	45 85 ff             	test   %r15d,%r15d
ffffffffc00033e9:	74 25                	je     ffffffffc0003410 <__vprintf_buffer+0x540>
ffffffffc00033eb:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc00033f0:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc00033f5:	48 8b 12             	mov    (%rdx),%rdx
ffffffffc00033f8:	c6 04 02 20          	movb   $0x20,(%rdx,%rax,1)
ffffffffc00033fc:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc0003401:	48 83 c0 01          	add    $0x1,%rax
ffffffffc0003405:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
ffffffffc000340a:	41 83 ef 01          	sub    $0x1,%r15d
ffffffffc000340e:	75 e0                	jne    ffffffffc00033f0 <__vprintf_buffer+0x520>
ffffffffc0003410:	49 89 fc             	mov    %rdi,%r12
ffffffffc0003413:	e9 44 fb ff ff       	jmpq   ffffffffc0002f5c <__vprintf_buffer+0x8c>
ffffffffc0003418:	89 f2                	mov    %esi,%edx
ffffffffc000341a:	4d 8d 7c 24 08       	lea    0x8(%r12),%r15
ffffffffc000341f:	80 ce 04             	or     $0x4,%dh
ffffffffc0003422:	3c 58                	cmp    $0x58,%al
ffffffffc0003424:	0f 44 f2             	cmove  %edx,%esi
ffffffffc0003427:	40 f6 c6 40          	test   $0x40,%sil
ffffffffc000342b:	74 3d                	je     ffffffffc000346a <__vprintf_buffer+0x59a>
ffffffffc000342d:	49 0f be 3c 24       	movsbq (%r12),%rdi
ffffffffc0003432:	40 f6 c6 06          	test   $0x6,%sil
ffffffffc0003436:	0f 85 cf 01 00 00    	jne    ffffffffc000360b <__vprintf_buffer+0x73b>
ffffffffc000343c:	48 85 ff             	test   %rdi,%rdi
ffffffffc000343f:	0f 88 a3 02 00 00    	js     ffffffffc00036e8 <__vprintf_buffer+0x818>
ffffffffc0003445:	48 89 fa             	mov    %rdi,%rdx
ffffffffc0003448:	4d 89 fc             	mov    %r15,%r12
ffffffffc000344b:	48 c1 fa 3f          	sar    $0x3f,%rdx
ffffffffc000344f:	48 31 d7             	xor    %rdx,%rdi
ffffffffc0003452:	48 29 d7             	sub    %rdx,%rdi
ffffffffc0003455:	e9 a5 fd ff ff       	jmpq   ffffffffc00031ff <__vprintf_buffer+0x32f>
ffffffffc000345a:	0f b6 43 02          	movzbl 0x2(%rbx),%eax
ffffffffc000345e:	83 ce 40             	or     $0x40,%esi
ffffffffc0003461:	48 83 c3 02          	add    $0x2,%rbx
ffffffffc0003465:	e9 d0 fc ff ff       	jmpq   ffffffffc000313a <__vprintf_buffer+0x26a>
ffffffffc000346a:	40 f6 c6 80          	test   $0x80,%sil
ffffffffc000346e:	0f 85 42 02 00 00    	jne    ffffffffc00036b6 <__vprintf_buffer+0x7e6>
ffffffffc0003474:	66 f7 c6 00 01       	test   $0x100,%si
ffffffffc0003479:	0f 85 9b 02 00 00    	jne    ffffffffc000371a <__vprintf_buffer+0x84a>
ffffffffc000347f:	66 f7 c6 00 02       	test   $0x200,%si
ffffffffc0003484:	0f 85 90 02 00 00    	jne    ffffffffc000371a <__vprintf_buffer+0x84a>
ffffffffc000348a:	49 63 3c 24          	movslq (%r12),%rdi
ffffffffc000348e:	eb a2                	jmp    ffffffffc0003432 <__vprintf_buffer+0x562>
ffffffffc0003490:	48 8d 50 06          	lea    0x6(%rax),%rdx
ffffffffc0003494:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
ffffffffc0003499:	48 83 c5 06          	add    $0x6,%rbp
ffffffffc000349d:	49 89 fc             	mov    %rdi,%r12
ffffffffc00034a0:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
ffffffffc00034a5:	41 ff d5             	callq  *%r13
ffffffffc00034a8:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
ffffffffc00034ad:	49 89 02             	mov    %rax,(%r10)
ffffffffc00034b0:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
ffffffffc00034b5:	48 8b 10             	mov    (%rax),%rdx
ffffffffc00034b8:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc00034bd:	c6 04 02 28          	movb   $0x28,(%rdx,%rax,1)
ffffffffc00034c1:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc00034c6:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffffc00034ca:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc00034cf:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc00034d4:	48 8b 12             	mov    (%rdx),%rdx
ffffffffc00034d7:	c6 44 02 01 6e       	movb   $0x6e,0x1(%rdx,%rax,1)
ffffffffc00034dc:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc00034e1:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffffc00034e5:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc00034ea:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc00034ef:	48 8b 12             	mov    (%rdx),%rdx
ffffffffc00034f2:	c6 44 02 01 75       	movb   $0x75,0x1(%rdx,%rax,1)
ffffffffc00034f7:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc00034fc:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffffc0003500:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc0003505:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc000350a:	48 8b 12             	mov    (%rdx),%rdx
ffffffffc000350d:	c6 44 02 01 6c       	movb   $0x6c,0x1(%rdx,%rax,1)
ffffffffc0003512:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc0003517:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffffc000351b:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc0003520:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc0003525:	48 8b 12             	mov    (%rdx),%rdx
ffffffffc0003528:	c6 44 02 01 6c       	movb   $0x6c,0x1(%rdx,%rax,1)
ffffffffc000352d:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc0003532:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffffc0003536:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc000353b:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc0003540:	48 8b 12             	mov    (%rdx),%rdx
ffffffffc0003543:	c6 44 02 01 29       	movb   $0x29,0x1(%rdx,%rax,1)
ffffffffc0003548:	48 83 44 24 70 01    	addq   $0x1,0x70(%rsp)
ffffffffc000354e:	e9 09 fa ff ff       	jmpq   ffffffffc0002f5c <__vprintf_buffer+0x8c>
ffffffffc0003553:	0f b6 43 02          	movzbl 0x2(%rbx),%eax
ffffffffc0003557:	66 81 ce 00 02       	or     $0x200,%si
ffffffffc000355c:	48 83 c3 02          	add    $0x2,%rbx
ffffffffc0003560:	e9 d5 fb ff ff       	jmpq   ffffffffc000313a <__vprintf_buffer+0x26a>
ffffffffc0003565:	4c 8b 2d e4 2c 00 00 	mov    0x2ce4(%rip),%r13        # ffffffffc0006250 <.refptr.realloc>
ffffffffc000356c:	31 c9                	xor    %ecx,%ecx
ffffffffc000356e:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffffc0003573:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffffc0003579:	e9 0c fb ff ff       	jmpq   ffffffffc000308a <__vprintf_buffer+0x1ba>
ffffffffc000357e:	40 f6 c6 80          	test   $0x80,%sil
ffffffffc0003582:	0f 85 38 01 00 00    	jne    ffffffffc00036c0 <__vprintf_buffer+0x7f0>
ffffffffc0003588:	66 f7 c6 00 01       	test   $0x100,%si
ffffffffc000358d:	0f 85 90 01 00 00    	jne    ffffffffc0003723 <__vprintf_buffer+0x853>
ffffffffc0003593:	66 f7 c6 00 02       	test   $0x200,%si
ffffffffc0003598:	0f 85 85 01 00 00    	jne    ffffffffc0003723 <__vprintf_buffer+0x853>
ffffffffc000359e:	41 8b 3c 24          	mov    (%r12),%edi
ffffffffc00035a2:	e9 f9 fb ff ff       	jmpq   ffffffffc00031a0 <__vprintf_buffer+0x2d0>
ffffffffc00035a7:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
ffffffffc00035ac:	85 c0                	test   %eax,%eax
ffffffffc00035ae:	74 1f                	je     ffffffffc00035cf <__vprintf_buffer+0x6ff>
ffffffffc00035b0:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
ffffffffc00035b5:	48 8b 09             	mov    (%rcx),%rcx
ffffffffc00035b8:	c6 04 11 20          	movb   $0x20,(%rcx,%rdx,1)
ffffffffc00035bc:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
ffffffffc00035c1:	48 8d 57 01          	lea    0x1(%rdi),%rdx
ffffffffc00035c5:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc00035ca:	83 e8 01             	sub    $0x1,%eax
ffffffffc00035cd:	75 e1                	jne    ffffffffc00035b0 <__vprintf_buffer+0x6e0>
ffffffffc00035cf:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
ffffffffc00035d4:	41 8b 0c 24          	mov    (%r12),%ecx
ffffffffc00035d8:	48 8b 00             	mov    (%rax),%rax
ffffffffc00035db:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
ffffffffc00035de:	48 83 44 24 70 01    	addq   $0x1,0x70(%rsp)
ffffffffc00035e4:	e9 16 fd ff ff       	jmpq   ffffffffc00032ff <__vprintf_buffer+0x42f>
ffffffffc00035e9:	45 29 c7             	sub    %r8d,%r15d
ffffffffc00035ec:	66 83 7c 24 40 00    	cmpw   $0x0,0x40(%rsp)
ffffffffc00035f2:	0f 84 34 01 00 00    	je     ffffffffc000372c <__vprintf_buffer+0x85c>
ffffffffc00035f8:	4d 85 c0             	test   %r8,%r8
ffffffffc00035fb:	0f 84 e5 fd ff ff    	je     ffffffffc00033e6 <__vprintf_buffer+0x516>
ffffffffc0003601:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc0003606:	e9 a2 fd ff ff       	jmpq   ffffffffc00033ad <__vprintf_buffer+0x4dd>
ffffffffc000360b:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
ffffffffc0003610:	4c 8b 64 24 60       	mov    0x60(%rsp),%r12
ffffffffc0003615:	44 89 44 24 40       	mov    %r8d,0x40(%rsp)
ffffffffc000361a:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffffc000361e:	49 8b 0c 24          	mov    (%r12),%rcx
ffffffffc0003622:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
ffffffffc0003627:	41 ff d5             	callq  *%r13
ffffffffc000362a:	48 85 ff             	test   %rdi,%rdi
ffffffffc000362d:	44 8b 44 24 40       	mov    0x40(%rsp),%r8d
ffffffffc0003632:	49 89 04 24          	mov    %rax,(%r12)
ffffffffc0003636:	0f 88 33 01 00 00    	js     ffffffffc000376f <__vprintf_buffer+0x89f>
ffffffffc000363c:	89 f0                	mov    %esi,%eax
ffffffffc000363e:	83 e0 04             	and    $0x4,%eax
ffffffffc0003641:	66 83 f8 01          	cmp    $0x1,%ax
ffffffffc0003645:	19 c0                	sbb    %eax,%eax
ffffffffc0003647:	83 e0 0b             	and    $0xb,%eax
ffffffffc000364a:	83 c0 20             	add    $0x20,%eax
ffffffffc000364d:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc0003652:	48 83 c5 01          	add    $0x1,%rbp
ffffffffc0003656:	48 8b 0a             	mov    (%rdx),%rcx
ffffffffc0003659:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
ffffffffc000365e:	88 04 11             	mov    %al,(%rcx,%rdx,1)
ffffffffc0003661:	0f b6 03             	movzbl (%rbx),%eax
ffffffffc0003664:	48 83 44 24 70 01    	addq   $0x1,0x70(%rsp)
ffffffffc000366a:	e9 d6 fd ff ff       	jmpq   ffffffffc0003445 <__vprintf_buffer+0x575>
ffffffffc000366f:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
ffffffffc0003674:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
ffffffffc0003679:	48 8b 0e             	mov    (%rsi),%rcx
ffffffffc000367c:	3c 70                	cmp    $0x70,%al
ffffffffc000367e:	0f 84 f5 00 00 00    	je     ffffffffc0003779 <__vprintf_buffer+0x8a9>
ffffffffc0003684:	48 83 c2 01          	add    $0x1,%rdx
ffffffffc0003688:	48 83 c5 01          	add    $0x1,%rbp
ffffffffc000368c:	48 89 fb             	mov    %rdi,%rbx
ffffffffc000368f:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
ffffffffc0003694:	41 ff d5             	callq  *%r13
ffffffffc0003697:	48 89 06             	mov    %rax,(%rsi)
ffffffffc000369a:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
ffffffffc000369f:	48 8b 10             	mov    (%rax),%rdx
ffffffffc00036a2:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc00036a7:	c6 04 02 25          	movb   $0x25,(%rdx,%rax,1)
ffffffffc00036ab:	48 83 44 24 70 01    	addq   $0x1,0x70(%rsp)
ffffffffc00036b1:	e9 a6 f8 ff ff       	jmpq   ffffffffc0002f5c <__vprintf_buffer+0x8c>
ffffffffc00036b6:	49 0f bf 3c 24       	movswq (%r12),%rdi
ffffffffc00036bb:	e9 72 fd ff ff       	jmpq   ffffffffc0003432 <__vprintf_buffer+0x562>
ffffffffc00036c0:	41 0f b7 3c 24       	movzwl (%r12),%edi
ffffffffc00036c5:	e9 d6 fa ff ff       	jmpq   ffffffffc00031a0 <__vprintf_buffer+0x2d0>
ffffffffc00036ca:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
ffffffffc00036cf:	0f 84 f1 03 00 00    	je     ffffffffc0003ac6 <__vprintf_buffer+0xbf6>
ffffffffc00036d5:	45 31 c0             	xor    %r8d,%r8d
ffffffffc00036d8:	49 83 c0 01          	add    $0x1,%r8
ffffffffc00036dc:	43 80 3c 04 00       	cmpb   $0x0,(%r12,%r8,1)
ffffffffc00036e1:	75 f5                	jne    ffffffffc00036d8 <__vprintf_buffer+0x808>
ffffffffc00036e3:	e9 7a fc ff ff       	jmpq   ffffffffc0003362 <__vprintf_buffer+0x492>
ffffffffc00036e8:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
ffffffffc00036ed:	4c 8b 64 24 60       	mov    0x60(%rsp),%r12
ffffffffc00036f2:	44 89 44 24 40       	mov    %r8d,0x40(%rsp)
ffffffffc00036f7:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffffc00036fb:	49 8b 0c 24          	mov    (%r12),%rcx
ffffffffc00036ff:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
ffffffffc0003704:	41 ff d5             	callq  *%r13
ffffffffc0003707:	44 8b 44 24 40       	mov    0x40(%rsp),%r8d
ffffffffc000370c:	49 89 04 24          	mov    %rax,(%r12)
ffffffffc0003710:	b8 2d 00 00 00       	mov    $0x2d,%eax
ffffffffc0003715:	e9 33 ff ff ff       	jmpq   ffffffffc000364d <__vprintf_buffer+0x77d>
ffffffffc000371a:	49 8b 3c 24          	mov    (%r12),%rdi
ffffffffc000371e:	e9 0f fd ff ff       	jmpq   ffffffffc0003432 <__vprintf_buffer+0x562>
ffffffffc0003723:	49 8b 3c 24          	mov    (%r12),%rdi
ffffffffc0003727:	e9 74 fa ff ff       	jmpq   ffffffffc00031a0 <__vprintf_buffer+0x2d0>
ffffffffc000372c:	45 85 ff             	test   %r15d,%r15d
ffffffffc000372f:	0f 84 d4 03 00 00    	je     ffffffffc0003b09 <__vprintf_buffer+0xc39>
ffffffffc0003735:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc000373a:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc000373f:	48 8b 12             	mov    (%rdx),%rdx
ffffffffc0003742:	c6 04 02 20          	movb   $0x20,(%rdx,%rax,1)
ffffffffc0003746:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffffc000374b:	48 83 c0 01          	add    $0x1,%rax
ffffffffc000374f:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
ffffffffc0003754:	41 83 ef 01          	sub    $0x1,%r15d
ffffffffc0003758:	75 e0                	jne    ffffffffc000373a <__vprintf_buffer+0x86a>
ffffffffc000375a:	31 d2                	xor    %edx,%edx
ffffffffc000375c:	66 89 54 24 40       	mov    %dx,0x40(%rsp)
ffffffffc0003761:	4d 85 c0             	test   %r8,%r8
ffffffffc0003764:	0f 85 43 fc ff ff    	jne    ffffffffc00033ad <__vprintf_buffer+0x4dd>
ffffffffc000376a:	e9 a1 fc ff ff       	jmpq   ffffffffc0003410 <__vprintf_buffer+0x540>
ffffffffc000376f:	b8 2d 00 00 00       	mov    $0x2d,%eax
ffffffffc0003774:	e9 d4 fe ff ff       	jmpq   ffffffffc000364d <__vprintf_buffer+0x77d>
ffffffffc0003779:	48 83 c2 11          	add    $0x11,%rdx
ffffffffc000377d:	48 83 c5 10          	add    $0x10,%rbp
ffffffffc0003781:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
ffffffffc0003786:	41 ff d5             	callq  *%r13
ffffffffc0003789:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc000378e:	48 89 06             	mov    %rax,(%rsi)
ffffffffc0003791:	49 8b 04 24          	mov    (%r12),%rax
ffffffffc0003795:	4c 8b 02             	mov    (%rdx),%r8
ffffffffc0003798:	48 89 c1             	mov    %rax,%rcx
ffffffffc000379b:	48 c1 e9 3c          	shr    $0x3c,%rcx
ffffffffc000379f:	80 f9 0a             	cmp    $0xa,%cl
ffffffffc00037a2:	19 d2                	sbb    %edx,%edx
ffffffffc00037a4:	83 e2 d9             	and    $0xffffffd9,%edx
ffffffffc00037a7:	8d 54 0a 57          	lea    0x57(%rdx,%rcx,1),%edx
ffffffffc00037ab:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
ffffffffc00037b0:	41 88 14 08          	mov    %dl,(%r8,%rcx,1)
ffffffffc00037b4:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
ffffffffc00037b9:	49 8d 50 01          	lea    0x1(%r8),%rdx
ffffffffc00037bd:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc00037c2:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc00037c7:	4c 8b 0a             	mov    (%rdx),%r9
ffffffffc00037ca:	48 89 c2             	mov    %rax,%rdx
ffffffffc00037cd:	48 c1 ea 38          	shr    $0x38,%rdx
ffffffffc00037d1:	89 d1                	mov    %edx,%ecx
ffffffffc00037d3:	83 e1 0f             	and    $0xf,%ecx
ffffffffc00037d6:	80 f9 0a             	cmp    $0xa,%cl
ffffffffc00037d9:	19 d2                	sbb    %edx,%edx
ffffffffc00037db:	83 e2 d9             	and    $0xffffffd9,%edx
ffffffffc00037de:	8d 54 0a 57          	lea    0x57(%rdx,%rcx,1),%edx
ffffffffc00037e2:	43 88 54 01 01       	mov    %dl,0x1(%r9,%r8,1)
ffffffffc00037e7:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
ffffffffc00037ec:	49 8d 50 01          	lea    0x1(%r8),%rdx
ffffffffc00037f0:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc00037f5:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc00037fa:	4c 8b 0a             	mov    (%rdx),%r9
ffffffffc00037fd:	48 89 c2             	mov    %rax,%rdx
ffffffffc0003800:	48 c1 ea 34          	shr    $0x34,%rdx
ffffffffc0003804:	89 d1                	mov    %edx,%ecx
ffffffffc0003806:	83 e1 0f             	and    $0xf,%ecx
ffffffffc0003809:	80 f9 0a             	cmp    $0xa,%cl
ffffffffc000380c:	19 d2                	sbb    %edx,%edx
ffffffffc000380e:	83 e2 d9             	and    $0xffffffd9,%edx
ffffffffc0003811:	8d 54 0a 57          	lea    0x57(%rdx,%rcx,1),%edx
ffffffffc0003815:	43 88 54 01 01       	mov    %dl,0x1(%r9,%r8,1)
ffffffffc000381a:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
ffffffffc000381f:	49 8d 50 01          	lea    0x1(%r8),%rdx
ffffffffc0003823:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc0003828:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc000382d:	4c 8b 0a             	mov    (%rdx),%r9
ffffffffc0003830:	48 89 c2             	mov    %rax,%rdx
ffffffffc0003833:	48 c1 ea 30          	shr    $0x30,%rdx
ffffffffc0003837:	89 d1                	mov    %edx,%ecx
ffffffffc0003839:	83 e1 0f             	and    $0xf,%ecx
ffffffffc000383c:	80 f9 0a             	cmp    $0xa,%cl
ffffffffc000383f:	19 d2                	sbb    %edx,%edx
ffffffffc0003841:	83 e2 d9             	and    $0xffffffd9,%edx
ffffffffc0003844:	8d 54 0a 57          	lea    0x57(%rdx,%rcx,1),%edx
ffffffffc0003848:	43 88 54 01 01       	mov    %dl,0x1(%r9,%r8,1)
ffffffffc000384d:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
ffffffffc0003852:	49 8d 50 01          	lea    0x1(%r8),%rdx
ffffffffc0003856:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc000385b:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc0003860:	4c 8b 0a             	mov    (%rdx),%r9
ffffffffc0003863:	48 89 c2             	mov    %rax,%rdx
ffffffffc0003866:	48 c1 ea 2c          	shr    $0x2c,%rdx
ffffffffc000386a:	89 d1                	mov    %edx,%ecx
ffffffffc000386c:	83 e1 0f             	and    $0xf,%ecx
ffffffffc000386f:	80 f9 0a             	cmp    $0xa,%cl
ffffffffc0003872:	19 d2                	sbb    %edx,%edx
ffffffffc0003874:	83 e2 d9             	and    $0xffffffd9,%edx
ffffffffc0003877:	8d 54 0a 57          	lea    0x57(%rdx,%rcx,1),%edx
ffffffffc000387b:	43 88 54 01 01       	mov    %dl,0x1(%r9,%r8,1)
ffffffffc0003880:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
ffffffffc0003885:	49 8d 50 01          	lea    0x1(%r8),%rdx
ffffffffc0003889:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc000388e:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc0003893:	4c 8b 0a             	mov    (%rdx),%r9
ffffffffc0003896:	48 89 c2             	mov    %rax,%rdx
ffffffffc0003899:	48 c1 ea 28          	shr    $0x28,%rdx
ffffffffc000389d:	89 d1                	mov    %edx,%ecx
ffffffffc000389f:	83 e1 0f             	and    $0xf,%ecx
ffffffffc00038a2:	80 f9 0a             	cmp    $0xa,%cl
ffffffffc00038a5:	19 d2                	sbb    %edx,%edx
ffffffffc00038a7:	83 e2 d9             	and    $0xffffffd9,%edx
ffffffffc00038aa:	8d 54 0a 57          	lea    0x57(%rdx,%rcx,1),%edx
ffffffffc00038ae:	43 88 54 01 01       	mov    %dl,0x1(%r9,%r8,1)
ffffffffc00038b3:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
ffffffffc00038b8:	49 8d 50 01          	lea    0x1(%r8),%rdx
ffffffffc00038bc:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc00038c1:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc00038c6:	4c 8b 0a             	mov    (%rdx),%r9
ffffffffc00038c9:	48 89 c2             	mov    %rax,%rdx
ffffffffc00038cc:	48 c1 ea 24          	shr    $0x24,%rdx
ffffffffc00038d0:	89 d1                	mov    %edx,%ecx
ffffffffc00038d2:	83 e1 0f             	and    $0xf,%ecx
ffffffffc00038d5:	80 f9 0a             	cmp    $0xa,%cl
ffffffffc00038d8:	19 d2                	sbb    %edx,%edx
ffffffffc00038da:	83 e2 d9             	and    $0xffffffd9,%edx
ffffffffc00038dd:	8d 54 0a 57          	lea    0x57(%rdx,%rcx,1),%edx
ffffffffc00038e1:	43 88 54 01 01       	mov    %dl,0x1(%r9,%r8,1)
ffffffffc00038e6:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
ffffffffc00038eb:	49 8d 50 01          	lea    0x1(%r8),%rdx
ffffffffc00038ef:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc00038f4:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc00038f9:	4c 8b 0a             	mov    (%rdx),%r9
ffffffffc00038fc:	48 89 c2             	mov    %rax,%rdx
ffffffffc00038ff:	48 c1 ea 20          	shr    $0x20,%rdx
ffffffffc0003903:	89 d1                	mov    %edx,%ecx
ffffffffc0003905:	83 e1 0f             	and    $0xf,%ecx
ffffffffc0003908:	80 f9 0a             	cmp    $0xa,%cl
ffffffffc000390b:	19 d2                	sbb    %edx,%edx
ffffffffc000390d:	83 e2 d9             	and    $0xffffffd9,%edx
ffffffffc0003910:	8d 54 0a 57          	lea    0x57(%rdx,%rcx,1),%edx
ffffffffc0003914:	43 88 54 01 01       	mov    %dl,0x1(%r9,%r8,1)
ffffffffc0003919:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
ffffffffc000391e:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
ffffffffc0003922:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
ffffffffc0003927:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
ffffffffc000392c:	48 8b 09             	mov    (%rcx),%rcx
ffffffffc000392f:	c6 44 11 01 5f       	movb   $0x5f,0x1(%rcx,%rdx,1)
ffffffffc0003934:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
ffffffffc0003939:	49 8d 50 01          	lea    0x1(%r8),%rdx
ffffffffc000393d:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc0003942:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc0003947:	4c 8b 0a             	mov    (%rdx),%r9
ffffffffc000394a:	48 89 c2             	mov    %rax,%rdx
ffffffffc000394d:	48 c1 ea 1c          	shr    $0x1c,%rdx
ffffffffc0003951:	83 e2 0f             	and    $0xf,%edx
ffffffffc0003954:	80 fa 0a             	cmp    $0xa,%dl
ffffffffc0003957:	19 c9                	sbb    %ecx,%ecx
ffffffffc0003959:	83 e1 d9             	and    $0xffffffd9,%ecx
ffffffffc000395c:	8d 54 0a 57          	lea    0x57(%rdx,%rcx,1),%edx
ffffffffc0003960:	43 88 54 01 01       	mov    %dl,0x1(%r9,%r8,1)
ffffffffc0003965:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
ffffffffc000396a:	49 8d 50 01          	lea    0x1(%r8),%rdx
ffffffffc000396e:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc0003973:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc0003978:	4c 8b 0a             	mov    (%rdx),%r9
ffffffffc000397b:	48 89 c2             	mov    %rax,%rdx
ffffffffc000397e:	48 c1 ea 18          	shr    $0x18,%rdx
ffffffffc0003982:	89 d1                	mov    %edx,%ecx
ffffffffc0003984:	83 e1 0f             	and    $0xf,%ecx
ffffffffc0003987:	80 f9 0a             	cmp    $0xa,%cl
ffffffffc000398a:	19 d2                	sbb    %edx,%edx
ffffffffc000398c:	83 e2 d9             	and    $0xffffffd9,%edx
ffffffffc000398f:	8d 54 0a 57          	lea    0x57(%rdx,%rcx,1),%edx
ffffffffc0003993:	43 88 54 01 01       	mov    %dl,0x1(%r9,%r8,1)
ffffffffc0003998:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
ffffffffc000399d:	49 8d 50 01          	lea    0x1(%r8),%rdx
ffffffffc00039a1:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc00039a6:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc00039ab:	4c 8b 0a             	mov    (%rdx),%r9
ffffffffc00039ae:	48 89 c2             	mov    %rax,%rdx
ffffffffc00039b1:	48 c1 ea 14          	shr    $0x14,%rdx
ffffffffc00039b5:	89 d1                	mov    %edx,%ecx
ffffffffc00039b7:	83 e1 0f             	and    $0xf,%ecx
ffffffffc00039ba:	80 f9 0a             	cmp    $0xa,%cl
ffffffffc00039bd:	19 d2                	sbb    %edx,%edx
ffffffffc00039bf:	83 e2 d9             	and    $0xffffffd9,%edx
ffffffffc00039c2:	8d 54 0a 57          	lea    0x57(%rdx,%rcx,1),%edx
ffffffffc00039c6:	43 88 54 01 01       	mov    %dl,0x1(%r9,%r8,1)
ffffffffc00039cb:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
ffffffffc00039d0:	49 8d 50 01          	lea    0x1(%r8),%rdx
ffffffffc00039d4:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc00039d9:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc00039de:	4c 8b 0a             	mov    (%rdx),%r9
ffffffffc00039e1:	48 89 c2             	mov    %rax,%rdx
ffffffffc00039e4:	48 c1 ea 10          	shr    $0x10,%rdx
ffffffffc00039e8:	83 e2 0f             	and    $0xf,%edx
ffffffffc00039eb:	80 fa 0a             	cmp    $0xa,%dl
ffffffffc00039ee:	19 c9                	sbb    %ecx,%ecx
ffffffffc00039f0:	83 e1 d9             	and    $0xffffffd9,%ecx
ffffffffc00039f3:	8d 54 0a 57          	lea    0x57(%rdx,%rcx,1),%edx
ffffffffc00039f7:	43 88 54 01 01       	mov    %dl,0x1(%r9,%r8,1)
ffffffffc00039fc:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
ffffffffc0003a01:	49 8d 50 01          	lea    0x1(%r8),%rdx
ffffffffc0003a05:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc0003a0a:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc0003a0f:	4c 8b 0a             	mov    (%rdx),%r9
ffffffffc0003a12:	48 89 c2             	mov    %rax,%rdx
ffffffffc0003a15:	48 c1 ea 0c          	shr    $0xc,%rdx
ffffffffc0003a19:	83 e2 0f             	and    $0xf,%edx
ffffffffc0003a1c:	80 fa 0a             	cmp    $0xa,%dl
ffffffffc0003a1f:	19 c9                	sbb    %ecx,%ecx
ffffffffc0003a21:	83 e1 d9             	and    $0xffffffd9,%ecx
ffffffffc0003a24:	8d 54 0a 57          	lea    0x57(%rdx,%rcx,1),%edx
ffffffffc0003a28:	43 88 54 01 01       	mov    %dl,0x1(%r9,%r8,1)
ffffffffc0003a2d:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
ffffffffc0003a32:	49 8d 50 01          	lea    0x1(%r8),%rdx
ffffffffc0003a36:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc0003a3b:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc0003a40:	4c 8b 0a             	mov    (%rdx),%r9
ffffffffc0003a43:	48 89 c2             	mov    %rax,%rdx
ffffffffc0003a46:	48 c1 ea 08          	shr    $0x8,%rdx
ffffffffc0003a4a:	83 e2 0f             	and    $0xf,%edx
ffffffffc0003a4d:	80 fa 0a             	cmp    $0xa,%dl
ffffffffc0003a50:	19 c9                	sbb    %ecx,%ecx
ffffffffc0003a52:	83 e1 d9             	and    $0xffffffd9,%ecx
ffffffffc0003a55:	8d 54 0a 57          	lea    0x57(%rdx,%rcx,1),%edx
ffffffffc0003a59:	43 88 54 01 01       	mov    %dl,0x1(%r9,%r8,1)
ffffffffc0003a5e:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
ffffffffc0003a63:	49 8d 50 01          	lea    0x1(%r8),%rdx
ffffffffc0003a67:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc0003a6c:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc0003a71:	4c 8b 0a             	mov    (%rdx),%r9
ffffffffc0003a74:	89 c2                	mov    %eax,%edx
ffffffffc0003a76:	c0 ea 04             	shr    $0x4,%dl
ffffffffc0003a79:	80 fa 0a             	cmp    $0xa,%dl
ffffffffc0003a7c:	19 c9                	sbb    %ecx,%ecx
ffffffffc0003a7e:	83 e0 0f             	and    $0xf,%eax
ffffffffc0003a81:	83 e1 d9             	and    $0xffffffd9,%ecx
ffffffffc0003a84:	3c 0a                	cmp    $0xa,%al
ffffffffc0003a86:	8d 54 0a 57          	lea    0x57(%rdx,%rcx,1),%edx
ffffffffc0003a8a:	43 88 54 01 01       	mov    %dl,0x1(%r9,%r8,1)
ffffffffc0003a8f:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
ffffffffc0003a94:	48 8d 51 01          	lea    0x1(%rcx),%rdx
ffffffffc0003a98:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffffc0003a9d:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
ffffffffc0003aa2:	4c 8b 02             	mov    (%rdx),%r8
ffffffffc0003aa5:	19 d2                	sbb    %edx,%edx
ffffffffc0003aa7:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003aab:	49 83 c4 08          	add    $0x8,%r12
ffffffffc0003aaf:	83 e2 d9             	and    $0xffffffd9,%edx
ffffffffc0003ab2:	8d 44 10 57          	lea    0x57(%rax,%rdx,1),%eax
ffffffffc0003ab6:	41 88 44 08 01       	mov    %al,0x1(%r8,%rcx,1)
ffffffffc0003abb:	48 83 44 24 70 01    	addq   $0x1,0x70(%rsp)
ffffffffc0003ac1:	e9 96 f4 ff ff       	jmpq   ffffffffc0002f5c <__vprintf_buffer+0x8c>
ffffffffc0003ac6:	4a 8d 14 18          	lea    (%rax,%r11,1),%rdx
ffffffffc0003aca:	4c 89 54 24 50       	mov    %r10,0x50(%rsp)
ffffffffc0003acf:	4c 89 5c 24 48       	mov    %r11,0x48(%rsp)
ffffffffc0003ad4:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
ffffffffc0003ad9:	41 ff d5             	callq  *%r13
ffffffffc0003adc:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
ffffffffc0003ae1:	4c 8b 54 24 50       	mov    0x50(%rsp),%r10
ffffffffc0003ae6:	4c 01 dd             	add    %r11,%rbp
ffffffffc0003ae9:	66 83 7c 24 40 00    	cmpw   $0x0,0x40(%rsp)
ffffffffc0003aef:	49 89 02             	mov    %rax,(%r10)
ffffffffc0003af2:	0f 85 ee f8 ff ff    	jne    ffffffffc00033e6 <__vprintf_buffer+0x516>
ffffffffc0003af8:	45 31 c0             	xor    %r8d,%r8d
ffffffffc0003afb:	45 85 ff             	test   %r15d,%r15d
ffffffffc0003afe:	0f 85 31 fc ff ff    	jne    ffffffffc0003735 <__vprintf_buffer+0x865>
ffffffffc0003b04:	e9 07 f9 ff ff       	jmpq   ffffffffc0003410 <__vprintf_buffer+0x540>
ffffffffc0003b09:	4d 85 c0             	test   %r8,%r8
ffffffffc0003b0c:	0f 85 ef fa ff ff    	jne    ffffffffc0003601 <__vprintf_buffer+0x731>
ffffffffc0003b12:	e9 f9 f8 ff ff       	jmpq   ffffffffc0003410 <__vprintf_buffer+0x540>
ffffffffc0003b17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffffc0003b1e:	00 00 

ffffffffc0003b20 <__vprintf_raw>:
ffffffffc0003b20:	41 57                	push   %r15
ffffffffc0003b22:	41 56                	push   %r14
ffffffffc0003b24:	41 55                	push   %r13
ffffffffc0003b26:	41 54                	push   %r12
ffffffffc0003b28:	55                   	push   %rbp
ffffffffc0003b29:	57                   	push   %rdi
ffffffffc0003b2a:	56                   	push   %rsi
ffffffffc0003b2b:	53                   	push   %rbx
ffffffffc0003b2c:	48 83 ec 68          	sub    $0x68,%rsp
ffffffffc0003b30:	45 31 ed             	xor    %r13d,%r13d
ffffffffc0003b33:	4c 8b b4 24 d0 00 00 	mov    0xd0(%rsp),%r14
ffffffffc0003b3a:	00 
ffffffffc0003b3b:	48 89 d0             	mov    %rdx,%rax
ffffffffc0003b3e:	49 89 cc             	mov    %rcx,%r12
ffffffffc0003b41:	48 89 d5             	mov    %rdx,%rbp
ffffffffc0003b44:	4c 89 c6             	mov    %r8,%rsi
ffffffffc0003b47:	4c 09 c0             	or     %r8,%rax
ffffffffc0003b4a:	4c 89 cb             	mov    %r9,%rbx
ffffffffc0003b4d:	0f 84 5c 01 00 00    	je     ffffffffc0003caf <__vprintf_raw+0x18f>
ffffffffc0003b53:	41 0f b6 01          	movzbl (%r9),%eax
ffffffffc0003b57:	84 c0                	test   %al,%al
ffffffffc0003b59:	0f 84 c1 05 00 00    	je     ffffffffc0004120 <__vprintf_raw+0x600>
ffffffffc0003b5f:	31 ff                	xor    %edi,%edi
ffffffffc0003b61:	eb 33                	jmp    ffffffffc0003b96 <__vprintf_raw+0x76>
ffffffffc0003b63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0003b68:	48 85 ed             	test   %rbp,%rbp
ffffffffc0003b6b:	74 0a                	je     ffffffffc0003b77 <__vprintf_raw+0x57>
ffffffffc0003b6d:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0003b70:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffffc0003b75:	ff d5                	callq  *%rbp
ffffffffc0003b77:	48 85 f6             	test   %rsi,%rsi
ffffffffc0003b7a:	74 08                	je     ffffffffc0003b84 <__vprintf_raw+0x64>
ffffffffc0003b7c:	0f be 0b             	movsbl (%rbx),%ecx
ffffffffc0003b7f:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0003b82:	ff d6                	callq  *%rsi
ffffffffc0003b84:	48 83 c7 01          	add    $0x1,%rdi
ffffffffc0003b88:	4c 89 eb             	mov    %r13,%rbx
ffffffffc0003b8b:	0f b6 03             	movzbl (%rbx),%eax
ffffffffc0003b8e:	84 c0                	test   %al,%al
ffffffffc0003b90:	0f 84 fa 00 00 00    	je     ffffffffc0003c90 <__vprintf_raw+0x170>
ffffffffc0003b96:	4c 8d 6b 01          	lea    0x1(%rbx),%r13
ffffffffc0003b9a:	3c 25                	cmp    $0x25,%al
ffffffffc0003b9c:	75 ca                	jne    ffffffffc0003b68 <__vprintf_raw+0x48>
ffffffffc0003b9e:	4c 89 eb             	mov    %r13,%rbx
ffffffffc0003ba1:	31 c0                	xor    %eax,%eax
ffffffffc0003ba3:	eb 1f                	jmp    ffffffffc0003bc4 <__vprintf_raw+0xa4>
ffffffffc0003ba5:	0f 1f 00             	nopl   (%rax)
ffffffffc0003ba8:	80 fa 2b             	cmp    $0x2b,%dl
ffffffffc0003bab:	74 2b                	je     ffffffffc0003bd8 <__vprintf_raw+0xb8>
ffffffffc0003bad:	80 fa 20             	cmp    $0x20,%dl
ffffffffc0003bb0:	74 2e                	je     ffffffffc0003be0 <__vprintf_raw+0xc0>
ffffffffc0003bb2:	80 fa 2d             	cmp    $0x2d,%dl
ffffffffc0003bb5:	74 31                	je     ffffffffc0003be8 <__vprintf_raw+0xc8>
ffffffffc0003bb7:	80 fa 23             	cmp    $0x23,%dl
ffffffffc0003bba:	75 34                	jne    ffffffffc0003bf0 <__vprintf_raw+0xd0>
ffffffffc0003bbc:	83 c8 10             	or     $0x10,%eax
ffffffffc0003bbf:	90                   	nop
ffffffffc0003bc0:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003bc4:	0f be 13             	movsbl (%rbx),%edx
ffffffffc0003bc7:	80 fa 30             	cmp    $0x30,%dl
ffffffffc0003bca:	75 dc                	jne    ffffffffc0003ba8 <__vprintf_raw+0x88>
ffffffffc0003bcc:	83 c8 01             	or     $0x1,%eax
ffffffffc0003bcf:	eb ef                	jmp    ffffffffc0003bc0 <__vprintf_raw+0xa0>
ffffffffc0003bd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0003bd8:	83 c8 02             	or     $0x2,%eax
ffffffffc0003bdb:	eb e3                	jmp    ffffffffc0003bc0 <__vprintf_raw+0xa0>
ffffffffc0003bdd:	0f 1f 00             	nopl   (%rax)
ffffffffc0003be0:	83 c8 04             	or     $0x4,%eax
ffffffffc0003be3:	eb db                	jmp    ffffffffc0003bc0 <__vprintf_raw+0xa0>
ffffffffc0003be5:	0f 1f 00             	nopl   (%rax)
ffffffffc0003be8:	83 c8 08             	or     $0x8,%eax
ffffffffc0003beb:	eb d3                	jmp    ffffffffc0003bc0 <__vprintf_raw+0xa0>
ffffffffc0003bed:	0f 1f 00             	nopl   (%rax)
ffffffffc0003bf0:	80 fa 2a             	cmp    $0x2a,%dl
ffffffffc0003bf3:	0f 85 ca 00 00 00    	jne    ffffffffc0003cc3 <__vprintf_raw+0x1a3>
ffffffffc0003bf9:	45 8b 06             	mov    (%r14),%r8d
ffffffffc0003bfc:	49 8d 4e 08          	lea    0x8(%r14),%rcx
ffffffffc0003c00:	45 85 c0             	test   %r8d,%r8d
ffffffffc0003c03:	79 06                	jns    ffffffffc0003c0b <__vprintf_raw+0xeb>
ffffffffc0003c05:	83 c8 08             	or     $0x8,%eax
ffffffffc0003c08:	41 f7 d8             	neg    %r8d
ffffffffc0003c0b:	0f b6 53 01          	movzbl 0x1(%rbx),%edx
ffffffffc0003c0f:	45 89 c7             	mov    %r8d,%r15d
ffffffffc0003c12:	49 89 ce             	mov    %rcx,%r14
ffffffffc0003c15:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003c19:	45 31 d2             	xor    %r10d,%r10d
ffffffffc0003c1c:	80 fa 2e             	cmp    $0x2e,%dl
ffffffffc0003c1f:	0f 84 d7 00 00 00    	je     ffffffffc0003cfc <__vprintf_raw+0x1dc>
ffffffffc0003c25:	80 fa 68             	cmp    $0x68,%dl
ffffffffc0003c28:	0f 84 fc 00 00 00    	je     ffffffffc0003d2a <__vprintf_raw+0x20a>
ffffffffc0003c2e:	80 fa 6c             	cmp    $0x6c,%dl
ffffffffc0003c31:	0f 84 5a 02 00 00    	je     ffffffffc0003e91 <__vprintf_raw+0x371>
ffffffffc0003c37:	80 fa 6a             	cmp    $0x6a,%dl
ffffffffc0003c3a:	74 0e                	je     ffffffffc0003c4a <__vprintf_raw+0x12a>
ffffffffc0003c3c:	80 fa 7a             	cmp    $0x7a,%dl
ffffffffc0003c3f:	74 09                	je     ffffffffc0003c4a <__vprintf_raw+0x12a>
ffffffffc0003c41:	80 fa 74             	cmp    $0x74,%dl
ffffffffc0003c44:	0f 85 f3 00 00 00    	jne    ffffffffc0003d3d <__vprintf_raw+0x21d>
ffffffffc0003c4a:	0f b6 53 01          	movzbl 0x1(%rbx),%edx
ffffffffc0003c4e:	80 cc 02             	or     $0x2,%ah
ffffffffc0003c51:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003c55:	80 fa 25             	cmp    $0x25,%dl
ffffffffc0003c58:	0f 85 e8 00 00 00    	jne    ffffffffc0003d46 <__vprintf_raw+0x226>
ffffffffc0003c5e:	48 85 ed             	test   %rbp,%rbp
ffffffffc0003c61:	74 0a                	je     ffffffffc0003c6d <__vprintf_raw+0x14d>
ffffffffc0003c63:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0003c66:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffffc0003c6b:	ff d5                	callq  *%rbp
ffffffffc0003c6d:	48 85 f6             	test   %rsi,%rsi
ffffffffc0003c70:	74 0a                	je     ffffffffc0003c7c <__vprintf_raw+0x15c>
ffffffffc0003c72:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0003c75:	b9 25 00 00 00       	mov    $0x25,%ecx
ffffffffc0003c7a:	ff d6                	callq  *%rsi
ffffffffc0003c7c:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
ffffffffc0003c80:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003c84:	48 83 c7 01          	add    $0x1,%rdi
ffffffffc0003c88:	84 c0                	test   %al,%al
ffffffffc0003c8a:	0f 85 06 ff ff ff    	jne    ffffffffc0003b96 <__vprintf_raw+0x76>
ffffffffc0003c90:	44 8d 6f 01          	lea    0x1(%rdi),%r13d
ffffffffc0003c94:	48 85 ed             	test   %rbp,%rbp
ffffffffc0003c97:	74 0a                	je     ffffffffc0003ca3 <__vprintf_raw+0x183>
ffffffffc0003c99:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0003c9c:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffffc0003ca1:	ff d5                	callq  *%rbp
ffffffffc0003ca3:	48 85 f6             	test   %rsi,%rsi
ffffffffc0003ca6:	74 07                	je     ffffffffc0003caf <__vprintf_raw+0x18f>
ffffffffc0003ca8:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0003cab:	31 c9                	xor    %ecx,%ecx
ffffffffc0003cad:	ff d6                	callq  *%rsi
ffffffffc0003caf:	44 89 e8             	mov    %r13d,%eax
ffffffffc0003cb2:	48 83 c4 68          	add    $0x68,%rsp
ffffffffc0003cb6:	5b                   	pop    %rbx
ffffffffc0003cb7:	5e                   	pop    %rsi
ffffffffc0003cb8:	5f                   	pop    %rdi
ffffffffc0003cb9:	5d                   	pop    %rbp
ffffffffc0003cba:	41 5c                	pop    %r12
ffffffffc0003cbc:	41 5d                	pop    %r13
ffffffffc0003cbe:	41 5e                	pop    %r14
ffffffffc0003cc0:	41 5f                	pop    %r15
ffffffffc0003cc2:	c3                   	retq   
ffffffffc0003cc3:	8d 4a d0             	lea    -0x30(%rdx),%ecx
ffffffffc0003cc6:	45 31 ff             	xor    %r15d,%r15d
ffffffffc0003cc9:	80 f9 09             	cmp    $0x9,%cl
ffffffffc0003ccc:	0f 87 47 ff ff ff    	ja     ffffffffc0003c19 <__vprintf_raw+0xf9>
ffffffffc0003cd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc0003cd8:	43 8d 0c bf          	lea    (%r15,%r15,4),%ecx
ffffffffc0003cdc:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003ce0:	44 8d 7c 4a d0       	lea    -0x30(%rdx,%rcx,2),%r15d
ffffffffc0003ce5:	0f be 13             	movsbl (%rbx),%edx
ffffffffc0003ce8:	8d 4a d0             	lea    -0x30(%rdx),%ecx
ffffffffc0003ceb:	80 f9 09             	cmp    $0x9,%cl
ffffffffc0003cee:	76 e8                	jbe    ffffffffc0003cd8 <__vprintf_raw+0x1b8>
ffffffffc0003cf0:	45 31 d2             	xor    %r10d,%r10d
ffffffffc0003cf3:	80 fa 2e             	cmp    $0x2e,%dl
ffffffffc0003cf6:	0f 85 29 ff ff ff    	jne    ffffffffc0003c25 <__vprintf_raw+0x105>
ffffffffc0003cfc:	0f be 53 01          	movsbl 0x1(%rbx),%edx
ffffffffc0003d00:	83 c8 20             	or     $0x20,%eax
ffffffffc0003d03:	80 fa 2a             	cmp    $0x2a,%dl
ffffffffc0003d06:	0f 85 f3 00 00 00    	jne    ffffffffc0003dff <__vprintf_raw+0x2df>
ffffffffc0003d0c:	41 8b 16             	mov    (%r14),%edx
ffffffffc0003d0f:	85 d2                	test   %edx,%edx
ffffffffc0003d11:	4c 0f 49 d2          	cmovns %rdx,%r10
ffffffffc0003d15:	0f b6 53 02          	movzbl 0x2(%rbx),%edx
ffffffffc0003d19:	49 83 c6 08          	add    $0x8,%r14
ffffffffc0003d1d:	48 83 c3 02          	add    $0x2,%rbx
ffffffffc0003d21:	80 fa 68             	cmp    $0x68,%dl
ffffffffc0003d24:	0f 85 04 ff ff ff    	jne    ffffffffc0003c2e <__vprintf_raw+0x10e>
ffffffffc0003d2a:	0f b6 53 01          	movzbl 0x1(%rbx),%edx
ffffffffc0003d2e:	80 fa 68             	cmp    $0x68,%dl
ffffffffc0003d31:	0f 84 7b 02 00 00    	je     ffffffffc0003fb2 <__vprintf_raw+0x492>
ffffffffc0003d37:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003d3b:	0c 80                	or     $0x80,%al
ffffffffc0003d3d:	80 fa 25             	cmp    $0x25,%dl
ffffffffc0003d40:	0f 84 18 ff ff ff    	je     ffffffffc0003c5e <__vprintf_raw+0x13e>
ffffffffc0003d46:	80 fa 63             	cmp    $0x63,%dl
ffffffffc0003d49:	0f 84 de 00 00 00    	je     ffffffffc0003e2d <__vprintf_raw+0x30d>
ffffffffc0003d4f:	80 fa 73             	cmp    $0x73,%dl
ffffffffc0003d52:	0f 84 52 01 00 00    	je     ffffffffc0003eaa <__vprintf_raw+0x38a>
ffffffffc0003d58:	80 fa 64             	cmp    $0x64,%dl
ffffffffc0003d5b:	0f 84 14 02 00 00    	je     ffffffffc0003f75 <__vprintf_raw+0x455>
ffffffffc0003d61:	80 fa 69             	cmp    $0x69,%dl
ffffffffc0003d64:	0f 84 0b 02 00 00    	je     ffffffffc0003f75 <__vprintf_raw+0x455>
ffffffffc0003d6a:	8d 4a a8             	lea    -0x58(%rdx),%ecx
ffffffffc0003d6d:	80 f9 20             	cmp    $0x20,%cl
ffffffffc0003d70:	0f 87 13 04 00 00    	ja     ffffffffc0004189 <__vprintf_raw+0x669>
ffffffffc0003d76:	49 b8 01 00 80 20 01 	movabs $0x120800001,%r8
ffffffffc0003d7d:	00 00 00 
ffffffffc0003d80:	49 0f a3 c8          	bt     %rcx,%r8
ffffffffc0003d84:	0f 83 ff 03 00 00    	jae    ffffffffc0004189 <__vprintf_raw+0x669>
ffffffffc0003d8a:	89 c1                	mov    %eax,%ecx
ffffffffc0003d8c:	4d 8d 7e 08          	lea    0x8(%r14),%r15
ffffffffc0003d90:	80 cd 04             	or     $0x4,%ch
ffffffffc0003d93:	80 fa 58             	cmp    $0x58,%dl
ffffffffc0003d96:	0f 44 c1             	cmove  %ecx,%eax
ffffffffc0003d99:	a8 40                	test   $0x40,%al
ffffffffc0003d9b:	0f 84 30 03 00 00    	je     ffffffffc00040d1 <__vprintf_raw+0x5b1>
ffffffffc0003da1:	45 0f b6 2e          	movzbl (%r14),%r13d
ffffffffc0003da5:	a8 06                	test   $0x6,%al
ffffffffc0003da7:	0f 85 7e 03 00 00    	jne    ffffffffc000412b <__vprintf_raw+0x60b>
ffffffffc0003dad:	4d 89 fe             	mov    %r15,%r14
ffffffffc0003db0:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffffc0003db5:	80 fa 6f             	cmp    $0x6f,%dl
ffffffffc0003db8:	74 13                	je     ffffffffc0003dcd <__vprintf_raw+0x2ad>
ffffffffc0003dba:	83 e2 df             	and    $0xffffffdf,%edx
ffffffffc0003dbd:	b9 10 00 00 00       	mov    $0x10,%ecx
ffffffffc0003dc2:	80 fa 58             	cmp    $0x58,%dl
ffffffffc0003dc5:	ba 0a 00 00 00       	mov    $0xa,%edx
ffffffffc0003dca:	0f 45 ca             	cmovne %edx,%ecx
ffffffffc0003dcd:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
ffffffffc0003dd1:	44 0f b7 c8          	movzwl %ax,%r9d
ffffffffc0003dd5:	49 89 f0             	mov    %rsi,%r8
ffffffffc0003dd8:	48 89 ea             	mov    %rbp,%rdx
ffffffffc0003ddb:	44 89 54 24 30       	mov    %r10d,0x30(%rsp)
ffffffffc0003de0:	4c 89 e1             	mov    %r12,%rcx
ffffffffc0003de3:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003de7:	48 8d 05 12 eb ff ff 	lea    -0x14ee(%rip),%rax        # ffffffffc0002900 <__vprintf_write_uint>
ffffffffc0003dee:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
ffffffffc0003df3:	ff d0                	callq  *%rax
ffffffffc0003df5:	48 98                	cltq   
ffffffffc0003df7:	48 01 c7             	add    %rax,%rdi
ffffffffc0003dfa:	e9 8c fd ff ff       	jmpq   ffffffffc0003b8b <__vprintf_raw+0x6b>
ffffffffc0003dff:	8d 4a d0             	lea    -0x30(%rdx),%ecx
ffffffffc0003e02:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003e06:	80 f9 09             	cmp    $0x9,%cl
ffffffffc0003e09:	0f 87 16 fe ff ff    	ja     ffffffffc0003c25 <__vprintf_raw+0x105>
ffffffffc0003e0f:	90                   	nop
ffffffffc0003e10:	43 8d 0c 92          	lea    (%r10,%r10,4),%ecx
ffffffffc0003e14:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003e18:	44 8d 54 4a d0       	lea    -0x30(%rdx,%rcx,2),%r10d
ffffffffc0003e1d:	0f be 13             	movsbl (%rbx),%edx
ffffffffc0003e20:	8d 4a d0             	lea    -0x30(%rdx),%ecx
ffffffffc0003e23:	80 f9 09             	cmp    $0x9,%cl
ffffffffc0003e26:	76 e8                	jbe    ffffffffc0003e10 <__vprintf_raw+0x2f0>
ffffffffc0003e28:	e9 f8 fd ff ff       	jmpq   ffffffffc0003c25 <__vprintf_raw+0x105>
ffffffffc0003e2d:	45 85 ff             	test   %r15d,%r15d
ffffffffc0003e30:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffffc0003e36:	45 0f 44 fd          	cmove  %r13d,%r15d
ffffffffc0003e3a:	48 85 ed             	test   %rbp,%rbp
ffffffffc0003e3d:	74 10                	je     ffffffffc0003e4f <__vprintf_raw+0x32f>
ffffffffc0003e3f:	89 44 24 40          	mov    %eax,0x40(%rsp)
ffffffffc0003e43:	44 89 f9             	mov    %r15d,%ecx
ffffffffc0003e46:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0003e49:	ff d5                	callq  *%rbp
ffffffffc0003e4b:	8b 44 24 40          	mov    0x40(%rsp),%eax
ffffffffc0003e4f:	48 85 f6             	test   %rsi,%rsi
ffffffffc0003e52:	0f 84 24 fe ff ff    	je     ffffffffc0003c7c <__vprintf_raw+0x15c>
ffffffffc0003e58:	41 83 ef 01          	sub    $0x1,%r15d
ffffffffc0003e5c:	4d 8d 6e 08          	lea    0x8(%r14),%r13
ffffffffc0003e60:	a8 08                	test   $0x8,%al
ffffffffc0003e62:	0f 84 79 01 00 00    	je     ffffffffc0003fe1 <__vprintf_raw+0x4c1>
ffffffffc0003e68:	41 0f be 0e          	movsbl (%r14),%ecx
ffffffffc0003e6c:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0003e6f:	ff d6                	callq  *%rsi
ffffffffc0003e71:	45 85 ff             	test   %r15d,%r15d
ffffffffc0003e74:	74 13                	je     ffffffffc0003e89 <__vprintf_raw+0x369>
ffffffffc0003e76:	41 83 ef 01          	sub    $0x1,%r15d
ffffffffc0003e7a:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0003e7d:	b9 20 00 00 00       	mov    $0x20,%ecx
ffffffffc0003e82:	ff d6                	callq  *%rsi
ffffffffc0003e84:	45 85 ff             	test   %r15d,%r15d
ffffffffc0003e87:	75 ed                	jne    ffffffffc0003e76 <__vprintf_raw+0x356>
ffffffffc0003e89:	4d 89 ee             	mov    %r13,%r14
ffffffffc0003e8c:	e9 eb fd ff ff       	jmpq   ffffffffc0003c7c <__vprintf_raw+0x15c>
ffffffffc0003e91:	0f b6 53 01          	movzbl 0x1(%rbx),%edx
ffffffffc0003e95:	80 fa 6c             	cmp    $0x6c,%dl
ffffffffc0003e98:	0f 84 c8 01 00 00    	je     ffffffffc0004066 <__vprintf_raw+0x546>
ffffffffc0003e9e:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003ea2:	80 cc 01             	or     $0x1,%ah
ffffffffc0003ea5:	e9 93 fe ff ff       	jmpq   ffffffffc0003d3d <__vprintf_raw+0x21d>
ffffffffc0003eaa:	4d 8b 0e             	mov    (%r14),%r9
ffffffffc0003ead:	4d 8d 6e 08          	lea    0x8(%r14),%r13
ffffffffc0003eb1:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0003eb5:	4d 85 c9             	test   %r9,%r9
ffffffffc0003eb8:	0f 84 4c 01 00 00    	je     ffffffffc000400a <__vprintf_raw+0x4ea>
ffffffffc0003ebe:	45 89 fe             	mov    %r15d,%r14d
ffffffffc0003ec1:	a8 20                	test   $0x20,%al
ffffffffc0003ec3:	0f 84 20 03 00 00    	je     ffffffffc00041e9 <__vprintf_raw+0x6c9>
ffffffffc0003ec9:	4d 39 f2             	cmp    %r14,%r10
ffffffffc0003ecc:	4c 89 f1             	mov    %r14,%rcx
ffffffffc0003ecf:	49 0f 43 ca          	cmovae %r10,%rcx
ffffffffc0003ed3:	48 85 ed             	test   %rbp,%rbp
ffffffffc0003ed6:	74 2b                	je     ffffffffc0003f03 <__vprintf_raw+0x3e3>
ffffffffc0003ed8:	4c 89 4c 24 58       	mov    %r9,0x58(%rsp)
ffffffffc0003edd:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0003ee0:	4c 89 54 24 50       	mov    %r10,0x50(%rsp)
ffffffffc0003ee5:	89 44 24 48          	mov    %eax,0x48(%rsp)
ffffffffc0003ee9:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
ffffffffc0003eee:	ff d5                	callq  *%rbp
ffffffffc0003ef0:	4c 8b 4c 24 58       	mov    0x58(%rsp),%r9
ffffffffc0003ef5:	4c 8b 54 24 50       	mov    0x50(%rsp),%r10
ffffffffc0003efa:	8b 44 24 48          	mov    0x48(%rsp),%eax
ffffffffc0003efe:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
ffffffffc0003f03:	48 01 cf             	add    %rcx,%rdi
ffffffffc0003f06:	4d 39 f2             	cmp    %r14,%r10
ffffffffc0003f09:	0f 86 e4 01 00 00    	jbe    ffffffffc00040f3 <__vprintf_raw+0x5d3>
ffffffffc0003f0f:	4d 89 ee             	mov    %r13,%r14
ffffffffc0003f12:	48 85 f6             	test   %rsi,%rsi
ffffffffc0003f15:	0f 84 70 fc ff ff    	je     ffffffffc0003b8b <__vprintf_raw+0x6b>
ffffffffc0003f1b:	83 e0 08             	and    $0x8,%eax
ffffffffc0003f1e:	45 31 ff             	xor    %r15d,%r15d
ffffffffc0003f21:	66 89 44 24 48       	mov    %ax,0x48(%rsp)
ffffffffc0003f26:	4b 8d 04 11          	lea    (%r9,%r10,1),%rax
ffffffffc0003f2a:	4d 89 ce             	mov    %r9,%r14
ffffffffc0003f2d:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
ffffffffc0003f32:	41 0f be 0e          	movsbl (%r14),%ecx
ffffffffc0003f36:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0003f39:	49 83 c6 01          	add    $0x1,%r14
ffffffffc0003f3d:	ff d6                	callq  *%rsi
ffffffffc0003f3f:	4c 3b 74 24 40       	cmp    0x40(%rsp),%r14
ffffffffc0003f44:	75 ec                	jne    ffffffffc0003f32 <__vprintf_raw+0x412>
ffffffffc0003f46:	66 83 7c 24 48 00    	cmpw   $0x0,0x48(%rsp)
ffffffffc0003f4c:	4d 89 ee             	mov    %r13,%r14
ffffffffc0003f4f:	0f 84 36 fc ff ff    	je     ffffffffc0003b8b <__vprintf_raw+0x6b>
ffffffffc0003f55:	45 85 ff             	test   %r15d,%r15d
ffffffffc0003f58:	74 13                	je     ffffffffc0003f6d <__vprintf_raw+0x44d>
ffffffffc0003f5a:	41 83 ef 01          	sub    $0x1,%r15d
ffffffffc0003f5e:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0003f61:	b9 20 00 00 00       	mov    $0x20,%ecx
ffffffffc0003f66:	ff d6                	callq  *%rsi
ffffffffc0003f68:	45 85 ff             	test   %r15d,%r15d
ffffffffc0003f6b:	75 ed                	jne    ffffffffc0003f5a <__vprintf_raw+0x43a>
ffffffffc0003f6d:	4d 89 ee             	mov    %r13,%r14
ffffffffc0003f70:	e9 16 fc ff ff       	jmpq   ffffffffc0003b8b <__vprintf_raw+0x6b>
ffffffffc0003f75:	89 c1                	mov    %eax,%ecx
ffffffffc0003f77:	4d 8d 7e 08          	lea    0x8(%r14),%r15
ffffffffc0003f7b:	80 cd 04             	or     $0x4,%ch
ffffffffc0003f7e:	80 fa 58             	cmp    $0x58,%dl
ffffffffc0003f81:	0f 44 c1             	cmove  %ecx,%eax
ffffffffc0003f84:	a8 40                	test   $0x40,%al
ffffffffc0003f86:	74 3a                	je     ffffffffc0003fc2 <__vprintf_raw+0x4a2>
ffffffffc0003f88:	4d 0f be 2e          	movsbq (%r14),%r13
ffffffffc0003f8c:	a8 06                	test   $0x6,%al
ffffffffc0003f8e:	0f 85 e2 00 00 00    	jne    ffffffffc0004076 <__vprintf_raw+0x556>
ffffffffc0003f94:	4d 85 ed             	test   %r13,%r13
ffffffffc0003f97:	0f 88 d9 00 00 00    	js     ffffffffc0004076 <__vprintf_raw+0x556>
ffffffffc0003f9d:	4c 89 e9             	mov    %r13,%rcx
ffffffffc0003fa0:	4d 89 fe             	mov    %r15,%r14
ffffffffc0003fa3:	48 c1 f9 3f          	sar    $0x3f,%rcx
ffffffffc0003fa7:	49 31 cd             	xor    %rcx,%r13
ffffffffc0003faa:	49 29 cd             	sub    %rcx,%r13
ffffffffc0003fad:	e9 fe fd ff ff       	jmpq   ffffffffc0003db0 <__vprintf_raw+0x290>
ffffffffc0003fb2:	0f b6 53 02          	movzbl 0x2(%rbx),%edx
ffffffffc0003fb6:	83 c8 40             	or     $0x40,%eax
ffffffffc0003fb9:	48 83 c3 02          	add    $0x2,%rbx
ffffffffc0003fbd:	e9 7b fd ff ff       	jmpq   ffffffffc0003d3d <__vprintf_raw+0x21d>
ffffffffc0003fc2:	a8 80                	test   $0x80,%al
ffffffffc0003fc4:	0f 85 ef 01 00 00    	jne    ffffffffc00041b9 <__vprintf_raw+0x699>
ffffffffc0003fca:	f6 c4 01             	test   $0x1,%ah
ffffffffc0003fcd:	0f 85 43 02 00 00    	jne    ffffffffc0004216 <__vprintf_raw+0x6f6>
ffffffffc0003fd3:	f6 c4 02             	test   $0x2,%ah
ffffffffc0003fd6:	0f 85 3a 02 00 00    	jne    ffffffffc0004216 <__vprintf_raw+0x6f6>
ffffffffc0003fdc:	4d 63 2e             	movslq (%r14),%r13
ffffffffc0003fdf:	eb ab                	jmp    ffffffffc0003f8c <__vprintf_raw+0x46c>
ffffffffc0003fe1:	45 85 ff             	test   %r15d,%r15d
ffffffffc0003fe4:	74 13                	je     ffffffffc0003ff9 <__vprintf_raw+0x4d9>
ffffffffc0003fe6:	41 83 ef 01          	sub    $0x1,%r15d
ffffffffc0003fea:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0003fed:	b9 20 00 00 00       	mov    $0x20,%ecx
ffffffffc0003ff2:	ff d6                	callq  *%rsi
ffffffffc0003ff4:	45 85 ff             	test   %r15d,%r15d
ffffffffc0003ff7:	75 ed                	jne    ffffffffc0003fe6 <__vprintf_raw+0x4c6>
ffffffffc0003ff9:	41 0f be 0e          	movsbl (%r14),%ecx
ffffffffc0003ffd:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0004000:	4d 89 ee             	mov    %r13,%r14
ffffffffc0004003:	ff d6                	callq  *%rsi
ffffffffc0004005:	e9 72 fc ff ff       	jmpq   ffffffffc0003c7c <__vprintf_raw+0x15c>
ffffffffc000400a:	48 85 ed             	test   %rbp,%rbp
ffffffffc000400d:	74 0a                	je     ffffffffc0004019 <__vprintf_raw+0x4f9>
ffffffffc000400f:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0004012:	b9 06 00 00 00       	mov    $0x6,%ecx
ffffffffc0004017:	ff d5                	callq  *%rbp
ffffffffc0004019:	48 85 f6             	test   %rsi,%rsi
ffffffffc000401c:	74 3c                	je     ffffffffc000405a <__vprintf_raw+0x53a>
ffffffffc000401e:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0004021:	b9 28 00 00 00       	mov    $0x28,%ecx
ffffffffc0004026:	ff d6                	callq  *%rsi
ffffffffc0004028:	4c 89 e2             	mov    %r12,%rdx
ffffffffc000402b:	b9 6e 00 00 00       	mov    $0x6e,%ecx
ffffffffc0004030:	ff d6                	callq  *%rsi
ffffffffc0004032:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0004035:	b9 75 00 00 00       	mov    $0x75,%ecx
ffffffffc000403a:	ff d6                	callq  *%rsi
ffffffffc000403c:	4c 89 e2             	mov    %r12,%rdx
ffffffffc000403f:	b9 6c 00 00 00       	mov    $0x6c,%ecx
ffffffffc0004044:	ff d6                	callq  *%rsi
ffffffffc0004046:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0004049:	b9 6c 00 00 00       	mov    $0x6c,%ecx
ffffffffc000404e:	ff d6                	callq  *%rsi
ffffffffc0004050:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0004053:	b9 29 00 00 00       	mov    $0x29,%ecx
ffffffffc0004058:	ff d6                	callq  *%rsi
ffffffffc000405a:	48 83 c7 06          	add    $0x6,%rdi
ffffffffc000405e:	4d 89 ee             	mov    %r13,%r14
ffffffffc0004061:	e9 25 fb ff ff       	jmpq   ffffffffc0003b8b <__vprintf_raw+0x6b>
ffffffffc0004066:	0f b6 53 02          	movzbl 0x2(%rbx),%edx
ffffffffc000406a:	80 cc 02             	or     $0x2,%ah
ffffffffc000406d:	48 83 c3 02          	add    $0x2,%rbx
ffffffffc0004071:	e9 c7 fc ff ff       	jmpq   ffffffffc0003d3d <__vprintf_raw+0x21d>
ffffffffc0004076:	48 85 ed             	test   %rbp,%rbp
ffffffffc0004079:	74 1c                	je     ffffffffc0004097 <__vprintf_raw+0x577>
ffffffffc000407b:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
ffffffffc0004080:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0004083:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffffc0004088:	89 44 24 40          	mov    %eax,0x40(%rsp)
ffffffffc000408c:	ff d5                	callq  *%rbp
ffffffffc000408e:	44 8b 54 24 48       	mov    0x48(%rsp),%r10d
ffffffffc0004093:	8b 44 24 40          	mov    0x40(%rsp),%eax
ffffffffc0004097:	48 83 c7 01          	add    $0x1,%rdi
ffffffffc000409b:	48 85 f6             	test   %rsi,%rsi
ffffffffc000409e:	0f 84 6a 01 00 00    	je     ffffffffc000420e <__vprintf_raw+0x6ee>
ffffffffc00040a4:	b9 2d 00 00 00       	mov    $0x2d,%ecx
ffffffffc00040a9:	4d 85 ed             	test   %r13,%r13
ffffffffc00040ac:	0f 89 19 01 00 00    	jns    ffffffffc00041cb <__vprintf_raw+0x6ab>
ffffffffc00040b2:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
ffffffffc00040b7:	4c 89 e2             	mov    %r12,%rdx
ffffffffc00040ba:	89 44 24 40          	mov    %eax,0x40(%rsp)
ffffffffc00040be:	ff d6                	callq  *%rsi
ffffffffc00040c0:	0f b6 13             	movzbl (%rbx),%edx
ffffffffc00040c3:	44 8b 54 24 48       	mov    0x48(%rsp),%r10d
ffffffffc00040c8:	8b 44 24 40          	mov    0x40(%rsp),%eax
ffffffffc00040cc:	e9 cc fe ff ff       	jmpq   ffffffffc0003f9d <__vprintf_raw+0x47d>
ffffffffc00040d1:	a8 80                	test   $0x80,%al
ffffffffc00040d3:	0f 85 e9 00 00 00    	jne    ffffffffc00041c2 <__vprintf_raw+0x6a2>
ffffffffc00040d9:	f6 c4 01             	test   $0x1,%ah
ffffffffc00040dc:	0f 85 24 01 00 00    	jne    ffffffffc0004206 <__vprintf_raw+0x6e6>
ffffffffc00040e2:	f6 c4 02             	test   $0x2,%ah
ffffffffc00040e5:	0f 85 1b 01 00 00    	jne    ffffffffc0004206 <__vprintf_raw+0x6e6>
ffffffffc00040eb:	45 8b 2e             	mov    (%r14),%r13d
ffffffffc00040ee:	e9 b2 fc ff ff       	jmpq   ffffffffc0003da5 <__vprintf_raw+0x285>
ffffffffc00040f3:	45 29 d7             	sub    %r10d,%r15d
ffffffffc00040f6:	4d 89 ee             	mov    %r13,%r14
ffffffffc00040f9:	48 85 f6             	test   %rsi,%rsi
ffffffffc00040fc:	0f 84 89 fa ff ff    	je     ffffffffc0003b8b <__vprintf_raw+0x6b>
ffffffffc0004102:	66 83 e0 08          	and    $0x8,%ax
ffffffffc0004106:	66 89 44 24 48       	mov    %ax,0x48(%rsp)
ffffffffc000410b:	0f 84 07 02 00 00    	je     ffffffffc0004318 <__vprintf_raw+0x7f8>
ffffffffc0004111:	4d 85 d2             	test   %r10,%r10
ffffffffc0004114:	0f 85 0c fe ff ff    	jne    ffffffffc0003f26 <__vprintf_raw+0x406>
ffffffffc000411a:	e9 36 fe ff ff       	jmpq   ffffffffc0003f55 <__vprintf_raw+0x435>
ffffffffc000411f:	90                   	nop
ffffffffc0004120:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffffc0004126:	e9 69 fb ff ff       	jmpq   ffffffffc0003c94 <__vprintf_raw+0x174>
ffffffffc000412b:	48 85 ed             	test   %rbp,%rbp
ffffffffc000412e:	74 1c                	je     ffffffffc000414c <__vprintf_raw+0x62c>
ffffffffc0004130:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
ffffffffc0004135:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0004138:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffffc000413d:	89 44 24 40          	mov    %eax,0x40(%rsp)
ffffffffc0004141:	ff d5                	callq  *%rbp
ffffffffc0004143:	44 8b 54 24 48       	mov    0x48(%rsp),%r10d
ffffffffc0004148:	8b 44 24 40          	mov    0x40(%rsp),%eax
ffffffffc000414c:	48 83 c7 01          	add    $0x1,%rdi
ffffffffc0004150:	48 85 f6             	test   %rsi,%rsi
ffffffffc0004153:	0f 84 88 00 00 00    	je     ffffffffc00041e1 <__vprintf_raw+0x6c1>
ffffffffc0004159:	89 c2                	mov    %eax,%edx
ffffffffc000415b:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
ffffffffc0004160:	83 e2 04             	and    $0x4,%edx
ffffffffc0004163:	89 44 24 40          	mov    %eax,0x40(%rsp)
ffffffffc0004167:	66 83 fa 01          	cmp    $0x1,%dx
ffffffffc000416b:	4c 89 e2             	mov    %r12,%rdx
ffffffffc000416e:	19 c9                	sbb    %ecx,%ecx
ffffffffc0004170:	83 e1 0b             	and    $0xb,%ecx
ffffffffc0004173:	83 c1 20             	add    $0x20,%ecx
ffffffffc0004176:	ff d6                	callq  *%rsi
ffffffffc0004178:	0f b6 13             	movzbl (%rbx),%edx
ffffffffc000417b:	44 8b 54 24 48       	mov    0x48(%rsp),%r10d
ffffffffc0004180:	8b 44 24 40          	mov    0x40(%rsp),%eax
ffffffffc0004184:	e9 24 fc ff ff       	jmpq   ffffffffc0003dad <__vprintf_raw+0x28d>
ffffffffc0004189:	80 fa 70             	cmp    $0x70,%dl
ffffffffc000418c:	0f 84 8c 00 00 00    	je     ffffffffc000421e <__vprintf_raw+0x6fe>
ffffffffc0004192:	48 85 ed             	test   %rbp,%rbp
ffffffffc0004195:	74 0a                	je     ffffffffc00041a1 <__vprintf_raw+0x681>
ffffffffc0004197:	4c 89 e2             	mov    %r12,%rdx
ffffffffc000419a:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffffc000419f:	ff d5                	callq  *%rbp
ffffffffc00041a1:	48 85 f6             	test   %rsi,%rsi
ffffffffc00041a4:	0f 84 da f9 ff ff    	je     ffffffffc0003b84 <__vprintf_raw+0x64>
ffffffffc00041aa:	4c 89 e2             	mov    %r12,%rdx
ffffffffc00041ad:	b9 25 00 00 00       	mov    $0x25,%ecx
ffffffffc00041b2:	ff d6                	callq  *%rsi
ffffffffc00041b4:	e9 cb f9 ff ff       	jmpq   ffffffffc0003b84 <__vprintf_raw+0x64>
ffffffffc00041b9:	4d 0f bf 2e          	movswq (%r14),%r13
ffffffffc00041bd:	e9 ca fd ff ff       	jmpq   ffffffffc0003f8c <__vprintf_raw+0x46c>
ffffffffc00041c2:	45 0f b7 2e          	movzwl (%r14),%r13d
ffffffffc00041c6:	e9 da fb ff ff       	jmpq   ffffffffc0003da5 <__vprintf_raw+0x285>
ffffffffc00041cb:	89 c2                	mov    %eax,%edx
ffffffffc00041cd:	83 e2 04             	and    $0x4,%edx
ffffffffc00041d0:	66 83 fa 01          	cmp    $0x1,%dx
ffffffffc00041d4:	19 c9                	sbb    %ecx,%ecx
ffffffffc00041d6:	83 e1 0b             	and    $0xb,%ecx
ffffffffc00041d9:	83 c1 20             	add    $0x20,%ecx
ffffffffc00041dc:	e9 d1 fe ff ff       	jmpq   ffffffffc00040b2 <__vprintf_raw+0x592>
ffffffffc00041e1:	0f b6 13             	movzbl (%rbx),%edx
ffffffffc00041e4:	e9 c4 fb ff ff       	jmpq   ffffffffc0003dad <__vprintf_raw+0x28d>
ffffffffc00041e9:	41 80 39 00          	cmpb   $0x0,(%r9)
ffffffffc00041ed:	0f 84 ba 00 00 00    	je     ffffffffc00042ad <__vprintf_raw+0x78d>
ffffffffc00041f3:	45 31 d2             	xor    %r10d,%r10d
ffffffffc00041f6:	49 83 c2 01          	add    $0x1,%r10
ffffffffc00041fa:	43 80 3c 11 00       	cmpb   $0x0,(%r9,%r10,1)
ffffffffc00041ff:	75 f5                	jne    ffffffffc00041f6 <__vprintf_raw+0x6d6>
ffffffffc0004201:	e9 c3 fc ff ff       	jmpq   ffffffffc0003ec9 <__vprintf_raw+0x3a9>
ffffffffc0004206:	4d 8b 2e             	mov    (%r14),%r13
ffffffffc0004209:	e9 97 fb ff ff       	jmpq   ffffffffc0003da5 <__vprintf_raw+0x285>
ffffffffc000420e:	0f b6 13             	movzbl (%rbx),%edx
ffffffffc0004211:	e9 87 fd ff ff       	jmpq   ffffffffc0003f9d <__vprintf_raw+0x47d>
ffffffffc0004216:	4d 8b 2e             	mov    (%r14),%r13
ffffffffc0004219:	e9 6e fd ff ff       	jmpq   ffffffffc0003f8c <__vprintf_raw+0x46c>
ffffffffc000421e:	48 83 c7 10          	add    $0x10,%rdi
ffffffffc0004222:	48 85 ed             	test   %rbp,%rbp
ffffffffc0004225:	74 0a                	je     ffffffffc0004231 <__vprintf_raw+0x711>
ffffffffc0004227:	4c 89 e2             	mov    %r12,%rdx
ffffffffc000422a:	b9 11 00 00 00       	mov    $0x11,%ecx
ffffffffc000422f:	ff d5                	callq  *%rbp
ffffffffc0004231:	4d 8d 6e 08          	lea    0x8(%r14),%r13
ffffffffc0004235:	48 83 c3 01          	add    $0x1,%rbx
ffffffffc0004239:	48 85 f6             	test   %rsi,%rsi
ffffffffc000423c:	0f 84 2b fd ff ff    	je     ffffffffc0003f6d <__vprintf_raw+0x44d>
ffffffffc0004242:	4d 8b 3e             	mov    (%r14),%r15
ffffffffc0004245:	41 be 3c 00 00 00    	mov    $0x3c,%r14d
ffffffffc000424b:	eb 2a                	jmp    ffffffffc0004277 <__vprintf_raw+0x757>
ffffffffc000424d:	0f 1f 00             	nopl   (%rax)
ffffffffc0004250:	ba 57 00 00 00       	mov    $0x57,%edx
ffffffffc0004255:	3c 09                	cmp    $0x9,%al
ffffffffc0004257:	77 05                	ja     ffffffffc000425e <__vprintf_raw+0x73e>
ffffffffc0004259:	ba 30 00 00 00       	mov    $0x30,%edx
ffffffffc000425e:	01 d0                	add    %edx,%eax
ffffffffc0004260:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0004263:	0f b6 c8             	movzbl %al,%ecx
ffffffffc0004266:	ff d6                	callq  *%rsi
ffffffffc0004268:	44 89 f0             	mov    %r14d,%eax
ffffffffc000426b:	2c 04                	sub    $0x4,%al
ffffffffc000426d:	0f 88 fa fc ff ff    	js     ffffffffc0003f6d <__vprintf_raw+0x44d>
ffffffffc0004273:	41 83 ee 04          	sub    $0x4,%r14d
ffffffffc0004277:	4c 89 f8             	mov    %r15,%rax
ffffffffc000427a:	44 89 f1             	mov    %r14d,%ecx
ffffffffc000427d:	48 d3 e8             	shr    %cl,%rax
ffffffffc0004280:	83 e0 0f             	and    $0xf,%eax
ffffffffc0004283:	41 80 fe 1c          	cmp    $0x1c,%r14b
ffffffffc0004287:	75 c7                	jne    ffffffffc0004250 <__vprintf_raw+0x730>
ffffffffc0004289:	88 44 24 40          	mov    %al,0x40(%rsp)
ffffffffc000428d:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0004290:	b9 5f 00 00 00       	mov    $0x5f,%ecx
ffffffffc0004295:	ff d6                	callq  *%rsi
ffffffffc0004297:	0f b6 44 24 40       	movzbl 0x40(%rsp),%eax
ffffffffc000429c:	3c 09                	cmp    $0x9,%al
ffffffffc000429e:	76 b9                	jbe    ffffffffc0004259 <__vprintf_raw+0x739>
ffffffffc00042a0:	83 c0 57             	add    $0x57,%eax
ffffffffc00042a3:	4c 89 e2             	mov    %r12,%rdx
ffffffffc00042a6:	0f b6 c8             	movzbl %al,%ecx
ffffffffc00042a9:	ff d6                	callq  *%rsi
ffffffffc00042ab:	eb c6                	jmp    ffffffffc0004273 <__vprintf_raw+0x753>
ffffffffc00042ad:	4c 89 f1             	mov    %r14,%rcx
ffffffffc00042b0:	45 31 d2             	xor    %r10d,%r10d
ffffffffc00042b3:	48 85 ed             	test   %rbp,%rbp
ffffffffc00042b6:	0f 85 1c fc ff ff    	jne    ffffffffc0003ed8 <__vprintf_raw+0x3b8>
ffffffffc00042bc:	4c 01 f7             	add    %r14,%rdi
ffffffffc00042bf:	4d 89 ee             	mov    %r13,%r14
ffffffffc00042c2:	48 85 f6             	test   %rsi,%rsi
ffffffffc00042c5:	0f 84 c0 f8 ff ff    	je     ffffffffc0003b8b <__vprintf_raw+0x6b>
ffffffffc00042cb:	a8 08                	test   $0x8,%al
ffffffffc00042cd:	0f 85 82 fc ff ff    	jne    ffffffffc0003f55 <__vprintf_raw+0x435>
ffffffffc00042d3:	45 85 ff             	test   %r15d,%r15d
ffffffffc00042d6:	0f 84 91 fc ff ff    	je     ffffffffc0003f6d <__vprintf_raw+0x44d>
ffffffffc00042dc:	41 83 ef 01          	sub    $0x1,%r15d
ffffffffc00042e0:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
ffffffffc00042e5:	4c 89 e2             	mov    %r12,%rdx
ffffffffc00042e8:	b9 20 00 00 00       	mov    $0x20,%ecx
ffffffffc00042ed:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
ffffffffc00042f2:	ff d6                	callq  *%rsi
ffffffffc00042f4:	45 85 ff             	test   %r15d,%r15d
ffffffffc00042f7:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
ffffffffc00042fc:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
ffffffffc0004301:	75 d9                	jne    ffffffffc00042dc <__vprintf_raw+0x7bc>
ffffffffc0004303:	31 c0                	xor    %eax,%eax
ffffffffc0004305:	66 89 44 24 48       	mov    %ax,0x48(%rsp)
ffffffffc000430a:	4d 85 d2             	test   %r10,%r10
ffffffffc000430d:	0f 85 13 fc ff ff    	jne    ffffffffc0003f26 <__vprintf_raw+0x406>
ffffffffc0004313:	e9 55 fc ff ff       	jmpq   ffffffffc0003f6d <__vprintf_raw+0x44d>
ffffffffc0004318:	45 85 ff             	test   %r15d,%r15d
ffffffffc000431b:	75 bf                	jne    ffffffffc00042dc <__vprintf_raw+0x7bc>
ffffffffc000431d:	4d 85 d2             	test   %r10,%r10
ffffffffc0004320:	0f 85 00 fc ff ff    	jne    ffffffffc0003f26 <__vprintf_raw+0x406>
ffffffffc0004326:	e9 60 f8 ff ff       	jmpq   ffffffffc0003b8b <__vprintf_raw+0x6b>
ffffffffc000432b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffffc0004330 <printf>:
ffffffffc0004330:	48 83 ec 48          	sub    $0x48,%rsp
ffffffffc0004334:	48 8d 44 24 58       	lea    0x58(%rsp),%rax
ffffffffc0004339:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
ffffffffc000433e:	48 8b 15 d3 32 00 00 	mov    0x32d3(%rip),%rdx        # ffffffffc0007618 <__printf_rs>
ffffffffc0004345:	4c 89 44 24 60       	mov    %r8,0x60(%rsp)
ffffffffc000434a:	4c 8b 05 bf 32 00 00 	mov    0x32bf(%rip),%r8        # ffffffffc0007610 <__printf_cb>
ffffffffc0004351:	4c 89 4c 24 68       	mov    %r9,0x68(%rsp)
ffffffffc0004356:	49 89 c9             	mov    %rcx,%r9
ffffffffc0004359:	31 c9                	xor    %ecx,%ecx
ffffffffc000435b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffffc0004360:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc0004365:	48 8d 05 b4 f7 ff ff 	lea    -0x84c(%rip),%rax        # ffffffffc0003b20 <__vprintf_raw>
ffffffffc000436c:	ff d0                	callq  *%rax
ffffffffc000436e:	48 83 c4 48          	add    $0x48,%rsp
ffffffffc0004372:	c3                   	retq   
ffffffffc0004373:	90                   	nop
ffffffffc0004374:	90                   	nop
ffffffffc0004375:	90                   	nop
ffffffffc0004376:	90                   	nop
ffffffffc0004377:	90                   	nop
ffffffffc0004378:	90                   	nop
ffffffffc0004379:	90                   	nop
ffffffffc000437a:	90                   	nop
ffffffffc000437b:	90                   	nop
ffffffffc000437c:	90                   	nop
ffffffffc000437d:	90                   	nop
ffffffffc000437e:	90                   	nop
ffffffffc000437f:	90                   	nop

ffffffffc0004380 <__asm_fill_zero>:
ffffffffc0004380:	57                   	push   %rdi
ffffffffc0004381:	48 31 c0             	xor    %rax,%rax
ffffffffc0004384:	48 c1 e9 03          	shr    $0x3,%rcx
ffffffffc0004388:	48 89 d7             	mov    %rdx,%rdi
ffffffffc000438b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
ffffffffc000438e:	5f                   	pop    %rdi
ffffffffc000438f:	c3                   	retq   
ffffffffc0004390:	54                   	push   %rsp
ffffffffc0004391:	68 72 65 61 64       	pushq  $0x64616572
ffffffffc0004396:	31 21                	xor    %esp,(%rcx)
ffffffffc0004398:	0a 00                	or     (%rax),%al
ffffffffc000439a:	54                   	push   %rsp
ffffffffc000439b:	68 72 65 61 64       	pushq  $0x64616572
ffffffffc00043a0:	32 21                	xor    (%rcx),%ah
ffffffffc00043a2:	0a 00                	or     (%rax),%al
ffffffffc00043a4:	53                   	push   %rbx
ffffffffc00043a5:	74 61                	je     ffffffffc0004408 <__asm_fill_zero+0x88>
ffffffffc00043a7:	72 74                	jb     ffffffffc000441d <__asm_fill_zero+0x9d>
ffffffffc00043a9:	69 6e 67 20 53 79 73 	imul   $0x73795320,0x67(%rsi),%ebp
ffffffffc00043b0:	74 65                	je     ffffffffc0004417 <__asm_fill_zero+0x97>
ffffffffc00043b2:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc00043b3:	2e 2e 2e 0a 00       	cs cs or %cs:(%rax),%al
ffffffffc00043b8:	4d                   	rex.WRB
ffffffffc00043b9:	65 6d                	gs insl (%dx),%es:(%rdi)
ffffffffc00043bb:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00043bc:	72 79                	jb     ffffffffc0004437 <__asm_fill_zero+0xb7>
ffffffffc00043be:	20 4d 61             	and    %cl,0x61(%rbp)
ffffffffc00043c1:	70 20                	jo     ffffffffc00043e3 <__asm_fill_zero+0x63>
ffffffffc00043c3:	28 25 6c 6c 75 29    	sub    %ah,0x29756c6c(%rip)        # ffffffffe975b035 <___KERNEL_UNMAP_END__+0x29751455>
ffffffffc00043c9:	3a 0a                	cmp    (%rdx),%cl
ffffffffc00043cb:	00 20                	add    %ah,(%rax)
ffffffffc00043cd:	20 25 6c 6c 78 20    	and    %ah,0x20786c6c(%rip)        # ffffffffe078b03f <___KERNEL_UNMAP_END__+0x2078145f>
ffffffffc00043d3:	2d 20 2b 25 6c       	sub    $0x6c252b20,%eax
ffffffffc00043d8:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00043d9:	78 00                	js     ffffffffc00043db <__asm_fill_zero+0x5b>
ffffffffc00043db:	20 28                	and    %ch,(%rax)
ffffffffc00043dd:	41                   	rex.B
ffffffffc00043de:	43 50                	rex.XB push %r8
ffffffffc00043e0:	49 20 54 61 62       	rex.WB and %dl,0x62(%r9,%riz,2)
ffffffffc00043e5:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00043e6:	65 73 29             	gs jae ffffffffc0004412 <__asm_fill_zero+0x92>
ffffffffc00043e9:	00 0a                	add    %cl,(%rdx)
ffffffffc00043eb:	00 53 65             	add    %dl,0x65(%rbx)
ffffffffc00043ee:	74 74                	je     ffffffffc0004464 <__asm_fill_zero+0xe4>
ffffffffc00043f0:	69 6e 67 20 55 70 20 	imul   $0x20705520,0x67(%rsi),%ebp
ffffffffc00043f7:	47                   	rex.RXB
ffffffffc00043f8:	44 54                	rex.R push %rsp
ffffffffc00043fa:	2e 2e 2e 0a 00       	cs cs or %cs:(%rax),%al
ffffffffc00043ff:	53                   	push   %rbx
ffffffffc0004400:	65 74 74             	gs je  ffffffffc0004477 <__asm_fill_zero+0xf7>
ffffffffc0004403:	69 6e 67 20 55 70 20 	imul   $0x20705520,0x67(%rsi),%ebp
ffffffffc000440a:	49                   	rex.WB
ffffffffc000440b:	44 54                	rex.R push %rsp
ffffffffc000440d:	2e 2e 2e 0a 00       	cs cs or %cs:(%rax),%al
ffffffffc0004412:	53                   	push   %rbx
ffffffffc0004413:	65 74 74             	gs je  ffffffffc000448a <__asm_fill_zero+0x10a>
ffffffffc0004416:	69 6e 67 20 55 70 20 	imul   $0x20705520,0x67(%rsi),%ebp
ffffffffc000441d:	44                   	rex.R
ffffffffc000441e:	65 66 61             	gs data16 (bad) 
ffffffffc0004421:	75 6c                	jne    ffffffffc000448f <__asm_fill_zero+0x10f>
ffffffffc0004423:	74 20                	je     ffffffffc0004445 <__asm_fill_zero+0xc5>
ffffffffc0004425:	49 53                	rex.WB push %r11
ffffffffc0004427:	52                   	push   %rdx
ffffffffc0004428:	73 2e                	jae    ffffffffc0004458 <__asm_fill_zero+0xd8>
ffffffffc000442a:	2e 2e 0a 00          	cs or  %cs:(%rax),%al
ffffffffc000442e:	53                   	push   %rbx
ffffffffc000442f:	65 74 74             	gs je  ffffffffc00044a6 <__asm_fill_zero+0x126>
ffffffffc0004432:	69 6e 67 20 55 70 20 	imul   $0x20705520,0x67(%rsi),%ebp
ffffffffc0004439:	44                   	rex.R
ffffffffc000443a:	65 66 61             	gs data16 (bad) 
ffffffffc000443d:	75 6c                	jne    ffffffffc00044ab <__asm_fill_zero+0x12b>
ffffffffc000443f:	74 20                	je     ffffffffc0004461 <__asm_fill_zero+0xe1>
ffffffffc0004441:	49 52                	rex.WB push %r10
ffffffffc0004443:	51                   	push   %rcx
ffffffffc0004444:	73 2e                	jae    ffffffffc0004474 <__asm_fill_zero+0xf4>
ffffffffc0004446:	2e 2e 0a 00          	cs or  %cs:(%rax),%al
ffffffffc000444a:	52                   	push   %rdx
ffffffffc000444b:	65 61                	gs (bad) 
ffffffffc000444d:	64 69 6e 67 20 43 50 	imul   $0x55504320,%fs:0x67(%rsi),%ebp
ffffffffc0004454:	55 
ffffffffc0004455:	20 49 6e             	and    %cl,0x6e(%rcx)
ffffffffc0004458:	66 6f                	outsw  %ds:(%rsi),(%dx)
ffffffffc000445a:	2e 2e 2e 0a 00       	cs cs or %cs:(%rax),%al
ffffffffc000445f:	53                   	push   %rbx
ffffffffc0004460:	65 74 74             	gs je  ffffffffc00044d7 <__asm_fill_zero+0x157>
ffffffffc0004463:	69 6e 67 20 55 70 20 	imul   $0x20705520,0x67(%rsi),%ebp
ffffffffc000446a:	50                   	push   %rax
ffffffffc000446b:	43                   	rex.XB
ffffffffc000446c:	49                   	rex.WB
ffffffffc000446d:	2e 2e 2e 0a 00       	cs cs or %cs:(%rax),%al
ffffffffc0004472:	50                   	push   %rax
ffffffffc0004473:	61                   	(bad)  
ffffffffc0004474:	72 73                	jb     ffffffffc00044e9 <__asm_fill_zero+0x169>
ffffffffc0004476:	69 6e 67 20 41 43 50 	imul   $0x50434120,0x67(%rsi),%ebp
ffffffffc000447d:	49                   	rex.WB
ffffffffc000447e:	2e 2e 2e 0a 00       	cs cs or %cs:(%rax),%al
ffffffffc0004483:	00 00                	add    %al,(%rax)
ffffffffc0004485:	00 00                	add    %al,(%rax)
ffffffffc0004487:	00 49 6e             	add    %cl,0x6e(%rcx)
ffffffffc000448a:	69 74 69 61 6c 69 73 	imul   $0x6973696c,0x61(%rcx,%rbp,2),%esi
ffffffffc0004491:	69 
ffffffffc0004492:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0004493:	67 20 41 50          	and    %al,0x50(%ecx)
ffffffffc0004497:	49                   	rex.WB
ffffffffc0004498:	43 20 49 6e          	rex.XB and %cl,0x6e(%r9)
ffffffffc000449c:	74 65                	je     ffffffffc0004503 <__asm_fill_zero+0x183>
ffffffffc000449e:	72 72                	jb     ffffffffc0004512 <__asm_fill_zero+0x192>
ffffffffc00044a0:	75 70                	jne    ffffffffc0004512 <__asm_fill_zero+0x192>
ffffffffc00044a2:	74 73                	je     ffffffffc0004517 <__asm_fill_zero+0x197>
ffffffffc00044a4:	2e 2e 2e 0a 00       	cs cs or %cs:(%rax),%al
ffffffffc00044a9:	53                   	push   %rbx
ffffffffc00044aa:	65 74 74             	gs je  ffffffffc0004521 <__asm_fill_zero+0x1a1>
ffffffffc00044ad:	69 6e 67 20 55 70 20 	imul   $0x20705520,0x67(%rsi),%ebp
ffffffffc00044b4:	43 50                	rex.XB push %r8
ffffffffc00044b6:	55                   	push   %rbp
ffffffffc00044b7:	73 2e                	jae    ffffffffc00044e7 <__asm_fill_zero+0x167>
ffffffffc00044b9:	2e 2e 0a 00          	cs or  %cs:(%rax),%al
ffffffffc00044bd:	53                   	push   %rbx
ffffffffc00044be:	65 74 74             	gs je  ffffffffc0004535 <__asm_fill_zero+0x1b5>
ffffffffc00044c1:	69 6e 67 20 55 70 20 	imul   $0x20705520,0x67(%rsi),%ebp
ffffffffc00044c8:	50                   	push   %rax
ffffffffc00044c9:	72 6f                	jb     ffffffffc000453a <__asm_fill_zero+0x1ba>
ffffffffc00044cb:	63 65 73             	movslq 0x73(%rbp),%esp
ffffffffc00044ce:	73 20                	jae    ffffffffc00044f0 <__asm_fill_zero+0x170>
ffffffffc00044d0:	4c 69 73 74 2e 2e 2e 	imul   $0xa2e2e2e,0x74(%rbx),%r14
ffffffffc00044d7:	0a 
ffffffffc00044d8:	00 53 65             	add    %dl,0x65(%rbx)
ffffffffc00044db:	74 74                	je     ffffffffc0004551 <__asm_fill_zero+0x1d1>
ffffffffc00044dd:	69 6e 67 20 55 70 20 	imul   $0x20705520,0x67(%rsi),%ebp
ffffffffc00044e4:	54                   	push   %rsp
ffffffffc00044e5:	68 72 65 61 64       	pushq  $0x64616572
ffffffffc00044ea:	20 4c 69 73          	and    %cl,0x73(%rcx,%rbp,2)
ffffffffc00044ee:	74 2e                	je     ffffffffc000451e <__asm_fill_zero+0x19e>
ffffffffc00044f0:	2e 2e 0a 00          	cs or  %cs:(%rax),%al
ffffffffc00044f4:	53                   	push   %rbx
ffffffffc00044f5:	65 74 74             	gs je  ffffffffc000456c <__asm_fill_zero+0x1ec>
ffffffffc00044f8:	69 6e 67 20 55 70 20 	imul   $0x20705520,0x67(%rsi),%ebp
ffffffffc00044ff:	53                   	push   %rbx
ffffffffc0004500:	63 68 65             	movslq 0x65(%rax),%ebp
ffffffffc0004503:	64 75 6c             	fs jne ffffffffc0004572 <__asm_fill_zero+0x1f2>
ffffffffc0004506:	65 72 2e             	gs jb  ffffffffc0004537 <__asm_fill_zero+0x1b7>
ffffffffc0004509:	2e 2e 0a 00          	cs or  %cs:(%rax),%al
ffffffffc000450d:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
ffffffffc000450f:	65 61                	gs (bad) 
ffffffffc0004511:	72 69                	jb     ffffffffc000457c <__asm_fill_zero+0x1fc>
ffffffffc0004513:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0004514:	67 20 41 43          	and    %al,0x43(%ecx)
ffffffffc0004518:	50                   	push   %rax
ffffffffc0004519:	49 20 44 61 74       	rex.WB and %al,0x74(%r9,%riz,2)
ffffffffc000451e:	61                   	(bad)  
ffffffffc000451f:	2e 2e 2e 0a 00       	cs cs or %cs:(%rax),%al
ffffffffc0004524:	00 00                	add    %al,(%rax)
ffffffffc0004526:	00 00                	add    %al,(%rax)
ffffffffc0004528:	52                   	push   %rdx
ffffffffc0004529:	65 67 69 73 74 65 72 	imul   $0x6e697265,%gs:0x74(%ebx),%esi
ffffffffc0004530:	69 6e 
ffffffffc0004532:	67 20 4b 65          	and    %cl,0x65(%ebx)
ffffffffc0004536:	72 6e                	jb     ffffffffc00045a6 <__asm_fill_zero+0x226>
ffffffffc0004538:	65 6c                	gs insb (%dx),%es:(%rdi)
ffffffffc000453a:	20 54 68 72          	and    %dl,0x72(%rax,%rbp,2)
ffffffffc000453e:	65 61                	gs (bad) 
ffffffffc0004540:	64 73 2e             	fs jae ffffffffc0004571 <__asm_fill_zero+0x1f1>
ffffffffc0004543:	2e 2e 0a 00          	cs or  %cs:(%rax),%al
ffffffffc0004547:	00 4b 65             	add    %cl,0x65(%rbx)
ffffffffc000454a:	72 6e                	jb     ffffffffc00045ba <.refptr.scheduler_start+0xa>
ffffffffc000454c:	65 6c                	gs insb (%dx),%es:(%rdi)
ffffffffc000454e:	20 27                	and    %ah,(%rdi)
ffffffffc0004550:	2e 74 65             	je,pn  ffffffffc00045b8 <.refptr.scheduler_start+0x8>
ffffffffc0004553:	78 74                	js     ffffffffc00045c9 <.refptr.___KERNEL_UNMAP_START__+0x9>
ffffffffc0004555:	5f                   	pop    %rdi
ffffffffc0004556:	75 6e                	jne    ffffffffc00045c6 <.refptr.___KERNEL_UNMAP_START__+0x6>
ffffffffc0004558:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0004559:	61                   	(bad)  
ffffffffc000455a:	70 27                	jo     ffffffffc0004583 <__asm_fill_zero+0x203>
ffffffffc000455c:	20 53 65             	and    %dl,0x65(%rbx)
ffffffffc000455f:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
ffffffffc0004563:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0004564:	3a 20                	cmp    (%rax),%ah
ffffffffc0004566:	25 70 20 2d 3e       	and    $0x3e2d2070,%eax
ffffffffc000456b:	20 2b                	and    %ch,(%rbx)
ffffffffc000456d:	25 6c 6c 75 20       	and    $0x20756c6c,%eax
ffffffffc0004572:	28 50 61             	sub    %dl,0x61(%rax)
ffffffffc0004575:	67 65 73 3a          	addr32 gs jae ffffffffc00045b3 <.refptr.scheduler_start+0x3>
ffffffffc0004579:	20 25 70 20 2d 3e    	and    %ah,0x3e2d2070(%rip)        # fffffffffe2d65ef <___KERNEL_UNMAP_END__+0x3e2cca0f>
ffffffffc000457f:	20 25 6c 6c 75 20    	and    %ah,0x20756c6c(%rip)        # ffffffffe075b1f1 <___KERNEL_UNMAP_END__+0x20751611>
ffffffffc0004585:	2a 20                	sub    (%rax),%ah
ffffffffc0004587:	34 4b                	xor    $0x4b,%al
ffffffffc0004589:	42 29 0a             	rex.X sub %ecx,(%rdx)
ffffffffc000458c:	00 53 74             	add    %dl,0x74(%rbx)
ffffffffc000458f:	61                   	(bad)  
ffffffffc0004590:	72 74                	jb     ffffffffc0004606 <.refptr.acpi_free_data+0x6>
ffffffffc0004592:	69 6e 67 20 53 63 68 	imul   $0x68635320,0x67(%rsi),%ebp
ffffffffc0004599:	65 64 75 6c          	gs fs jne ffffffffc0004609 <.refptr.acpi_free_data+0x9>
ffffffffc000459d:	65 72 2e             	gs jb  ffffffffc00045ce <.refptr.___KERNEL_UNMAP_START__+0xe>
ffffffffc00045a0:	2e 2e 0a 00          	cs or  %cs:(%rax),%al
	...

ffffffffc00045b0 <.refptr.scheduler_start>:
ffffffffc00045b0:	00 23                	add    %ah,(%rbx)
ffffffffc00045b2:	00 c0                	add    %al,%al
ffffffffc00045b4:	ff                   	(bad)  
ffffffffc00045b5:	ff                   	(bad)  
ffffffffc00045b6:	ff                   	(bad)  
ffffffffc00045b7:	ff 00                	incl   (%rax)
ffffffffc00045b9:	00 00                	add    %al,(%rax)
ffffffffc00045bb:	00 00                	add    %al,(%rax)
ffffffffc00045bd:	00 00                	add    %al,(%rax)
	...

ffffffffc00045c0 <.refptr.___KERNEL_UNMAP_START__>:
ffffffffc00045c0:	20 76 00             	and    %dh,0x0(%rsi)
ffffffffc00045c3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00045c6:	ff                   	(bad)  
ffffffffc00045c7:	ff 00                	incl   (%rax)
ffffffffc00045c9:	00 00                	add    %al,(%rax)
ffffffffc00045cb:	00 00                	add    %al,(%rax)
ffffffffc00045cd:	00 00                	add    %al,(%rax)
	...

ffffffffc00045d0 <.refptr.___KERNEL_UNMAP_END__>:
ffffffffc00045d0:	e0 9b                	loopne ffffffffc000456d <__asm_fill_zero+0x1ed>
ffffffffc00045d2:	00 c0                	add    %al,%al
ffffffffc00045d4:	ff                   	(bad)  
ffffffffc00045d5:	ff                   	(bad)  
ffffffffc00045d6:	ff                   	(bad)  
ffffffffc00045d7:	ff 00                	incl   (%rax)
ffffffffc00045d9:	00 00                	add    %al,(%rax)
ffffffffc00045db:	00 00                	add    %al,(%rax)
ffffffffc00045dd:	00 00                	add    %al,(%rax)
	...

ffffffffc00045e0 <.refptr.create_thread>:
ffffffffc00045e0:	90                   	nop
ffffffffc00045e1:	23 00                	and    (%rax),%eax
ffffffffc00045e3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00045e6:	ff                   	(bad)  
ffffffffc00045e7:	ff 00                	incl   (%rax)
ffffffffc00045e9:	00 00                	add    %al,(%rax)
ffffffffc00045eb:	00 00                	add    %al,(%rax)
ffffffffc00045ed:	00 00                	add    %al,(%rax)
	...

ffffffffc00045f0 <.refptr.kernel_process>:
ffffffffc00045f0:	c0 75 00 c0          	shlb   $0xc0,0x0(%rbp)
ffffffffc00045f4:	ff                   	(bad)  
ffffffffc00045f5:	ff                   	(bad)  
ffffffffc00045f6:	ff                   	(bad)  
ffffffffc00045f7:	ff 00                	incl   (%rax)
ffffffffc00045f9:	00 00                	add    %al,(%rax)
ffffffffc00045fb:	00 00                	add    %al,(%rax)
ffffffffc00045fd:	00 00                	add    %al,(%rax)
	...

ffffffffc0004600 <.refptr.acpi_free_data>:
ffffffffc0004600:	a0 7e 00 c0 ff ff ff 	movabs 0xffffffffc0007e,%al
ffffffffc0004607:	ff 00 
ffffffffc0004609:	00 00                	add    %al,(%rax)
ffffffffc000460b:	00 00                	add    %al,(%rax)
ffffffffc000460d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004610 <.refptr.scheduler_init>:
ffffffffc0004610:	70 9b                	jo     ffffffffc00045ad <__asm_fill_zero+0x22d>
ffffffffc0004612:	00 c0                	add    %al,%al
ffffffffc0004614:	ff                   	(bad)  
ffffffffc0004615:	ff                   	(bad)  
ffffffffc0004616:	ff                   	(bad)  
ffffffffc0004617:	ff 00                	incl   (%rax)
ffffffffc0004619:	00 00                	add    %al,(%rax)
ffffffffc000461b:	00 00                	add    %al,(%rax)
ffffffffc000461d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004620 <.refptr.thread_init>:
ffffffffc0004620:	80 9b 00 c0 ff ff ff 	sbbb   $0xff,-0x4000(%rbx)
ffffffffc0004627:	ff 00                	incl   (%rax)
ffffffffc0004629:	00 00                	add    %al,(%rax)
ffffffffc000462b:	00 00                	add    %al,(%rax)
ffffffffc000462d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004630 <.refptr.process_init>:
ffffffffc0004630:	80 9a 00 c0 ff ff ff 	sbbb   $0xff,-0x4000(%rdx)
ffffffffc0004637:	ff 00                	incl   (%rax)
ffffffffc0004639:	00 00                	add    %al,(%rax)
ffffffffc000463b:	00 00                	add    %al,(%rax)
ffffffffc000463d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004640 <.refptr.cpu_init>:
ffffffffc0004640:	60                   	(bad)  
ffffffffc0004641:	7f 00                	jg     ffffffffc0004643 <.refptr.cpu_init+0x3>
ffffffffc0004643:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0004646:	ff                   	(bad)  
ffffffffc0004647:	ff 00                	incl   (%rax)
ffffffffc0004649:	00 00                	add    %al,(%rax)
ffffffffc000464b:	00 00                	add    %al,(%rax)
ffffffffc000464d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004650 <.refptr.apic_init>:
ffffffffc0004650:	c0 7e 00 c0          	sarb   $0xc0,0x0(%rsi)
ffffffffc0004654:	ff                   	(bad)  
ffffffffc0004655:	ff                   	(bad)  
ffffffffc0004656:	ff                   	(bad)  
ffffffffc0004657:	ff 00                	incl   (%rax)
ffffffffc0004659:	00 00                	add    %al,(%rax)
ffffffffc000465b:	00 00                	add    %al,(%rax)
ffffffffc000465d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004660 <.refptr.acpi_init>:
ffffffffc0004660:	80 7b 00 c0          	cmpb   $0xc0,0x0(%rbx)
ffffffffc0004664:	ff                   	(bad)  
ffffffffc0004665:	ff                   	(bad)  
ffffffffc0004666:	ff                   	(bad)  
ffffffffc0004667:	ff 00                	incl   (%rax)
ffffffffc0004669:	00 00                	add    %al,(%rax)
ffffffffc000466b:	00 00                	add    %al,(%rax)
ffffffffc000466d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004670 <.refptr.pci_init>:
ffffffffc0004670:	e0 09                	loopne ffffffffc000467b <.refptr.pci_init+0xb>
ffffffffc0004672:	00 c0                	add    %al,%al
ffffffffc0004674:	ff                   	(bad)  
ffffffffc0004675:	ff                   	(bad)  
ffffffffc0004676:	ff                   	(bad)  
ffffffffc0004677:	ff 00                	incl   (%rax)
ffffffffc0004679:	00 00                	add    %al,(%rax)
ffffffffc000467b:	00 00                	add    %al,(%rax)
ffffffffc000467d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004680 <.refptr.cpu_info_init>:
ffffffffc0004680:	70 82                	jo     ffffffffc0004604 <.refptr.acpi_free_data+0x4>
ffffffffc0004682:	00 c0                	add    %al,%al
ffffffffc0004684:	ff                   	(bad)  
ffffffffc0004685:	ff                   	(bad)  
ffffffffc0004686:	ff                   	(bad)  
ffffffffc0004687:	ff 00                	incl   (%rax)
ffffffffc0004689:	00 00                	add    %al,(%rax)
ffffffffc000468b:	00 00                	add    %al,(%rax)
ffffffffc000468d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004690 <.refptr.setup_irq>:
ffffffffc0004690:	90                   	nop
ffffffffc0004691:	8e 00                	mov    (%rax),%es
ffffffffc0004693:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0004696:	ff                   	(bad)  
ffffffffc0004697:	ff 00                	incl   (%rax)
ffffffffc0004699:	00 00                	add    %al,(%rax)
ffffffffc000469b:	00 00                	add    %al,(%rax)
ffffffffc000469d:	00 00                	add    %al,(%rax)
	...

ffffffffc00046a0 <.refptr.setup_isr>:
ffffffffc00046a0:	c0 90 00 c0 ff ff ff 	rclb   $0xff,-0x4000(%rax)
ffffffffc00046a7:	ff 00                	incl   (%rax)
ffffffffc00046a9:	00 00                	add    %al,(%rax)
ffffffffc00046ab:	00 00                	add    %al,(%rax)
ffffffffc00046ad:	00 00                	add    %al,(%rax)
	...

ffffffffc00046b0 <.refptr.setup_idt>:
ffffffffc00046b0:	70 8e                	jo     ffffffffc0004640 <.refptr.cpu_init>
ffffffffc00046b2:	00 c0                	add    %al,%al
ffffffffc00046b4:	ff                   	(bad)  
ffffffffc00046b5:	ff                   	(bad)  
ffffffffc00046b6:	ff                   	(bad)  
ffffffffc00046b7:	ff 00                	incl   (%rax)
ffffffffc00046b9:	00 00                	add    %al,(%rax)
ffffffffc00046bb:	00 00                	add    %al,(%rax)
ffffffffc00046bd:	00 00                	add    %al,(%rax)
	...

ffffffffc00046c0 <.refptr.asm_setup_gdt>:
ffffffffc00046c0:	3f                   	(bad)  
ffffffffc00046c1:	7b 00                	jnp    ffffffffc00046c3 <.refptr.asm_setup_gdt+0x3>
ffffffffc00046c3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00046c6:	ff                   	(bad)  
ffffffffc00046c7:	ff 00                	incl   (%rax)
ffffffffc00046c9:	00 00                	add    %al,(%rax)
ffffffffc00046cb:	00 00                	add    %al,(%rax)
ffffffffc00046cd:	00 00                	add    %al,(%rax)
	...

ffffffffc00046d0 <.refptr._console_vprint>:
ffffffffc00046d0:	f0 13 00             	lock adc (%rax),%eax
ffffffffc00046d3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00046d6:	ff                   	(bad)  
ffffffffc00046d7:	ff 00                	incl   (%rax)
ffffffffc00046d9:	00 00                	add    %al,(%rax)
ffffffffc00046db:	00 00                	add    %al,(%rax)
ffffffffc00046dd:	00 00                	add    %al,(%rax)
	...

ffffffffc00046e0 <.refptr.console_init>:
ffffffffc00046e0:	20 94 00 c0 ff ff ff 	and    %dl,-0x40(%rax,%rax,1)
ffffffffc00046e7:	ff 00                	incl   (%rax)
ffffffffc00046e9:	00 00                	add    %al,(%rax)
ffffffffc00046eb:	00 00                	add    %al,(%rax)
ffffffffc00046ed:	00 00                	add    %al,(%rax)
	...

ffffffffc00046f0 <.refptr.lock_init>:
ffffffffc00046f0:	20 9a 00 c0 ff ff    	and    %bl,-0x4000(%rdx)
ffffffffc00046f6:	ff                   	(bad)  
ffffffffc00046f7:	ff 00                	incl   (%rax)
ffffffffc00046f9:	00 00                	add    %al,(%rax)
ffffffffc00046fb:	00 00                	add    %al,(%rax)
ffffffffc00046fd:	00 00                	add    %al,(%rax)
	...

ffffffffc0004700 <.refptr.gfx_init>:
ffffffffc0004700:	00 95 00 c0 ff ff    	add    %dl,-0x4000(%rbp)
ffffffffc0004706:	ff                   	(bad)  
ffffffffc0004707:	ff 00                	incl   (%rax)
ffffffffc0004709:	00 00                	add    %al,(%rax)
ffffffffc000470b:	00 00                	add    %al,(%rax)
ffffffffc000470d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004710 <.refptr.vm_init>:
ffffffffc0004710:	40 99                	rex cltd 
ffffffffc0004712:	00 c0                	add    %al,%al
ffffffffc0004714:	ff                   	(bad)  
ffffffffc0004715:	ff                   	(bad)  
ffffffffc0004716:	ff                   	(bad)  
ffffffffc0004717:	ff 00                	incl   (%rax)
ffffffffc0004719:	00 00                	add    %al,(%rax)
ffffffffc000471b:	00 00                	add    %al,(%rax)
ffffffffc000471d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004720 <.refptr.pm_init>:
ffffffffc0004720:	d0 95 00 c0 ff ff    	rclb   -0x4000(%rbp)
ffffffffc0004726:	ff                   	(bad)  
ffffffffc0004727:	ff 00                	incl   (%rax)
ffffffffc0004729:	00 00                	add    %al,(%rax)
ffffffffc000472b:	00 00                	add    %al,(%rax)
ffffffffc000472d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004730 <.refptr.paging_init>:
ffffffffc0004730:	a0 95 00 c0 ff ff ff 	movabs 0xffffffffc00095,%al
ffffffffc0004737:	ff 00 
ffffffffc0004739:	00 00                	add    %al,(%rax)
ffffffffc000473b:	00 00                	add    %al,(%rax)
ffffffffc000473d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004740 <.refptr._console_print>:
ffffffffc0004740:	60                   	(bad)  
ffffffffc0004741:	13 00                	adc    (%rax),%eax
ffffffffc0004743:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0004746:	ff                   	(bad)  
ffffffffc0004747:	ff 00                	incl   (%rax)
ffffffffc0004749:	00 00                	add    %al,(%rax)
ffffffffc000474b:	00 00                	add    %al,(%rax)
ffffffffc000474d:	00 00                	add    %al,(%rax)
ffffffffc000474f:	00 41 43             	add    %al,0x43(%rcx)
ffffffffc0004752:	50                   	push   %rax
ffffffffc0004753:	49 20 50 6f          	rex.WB and %dl,0x6f(%r8)
ffffffffc0004757:	69 6e 74 65 72 73 3a 	imul   $0x3a737265,0x74(%rsi),%ebp
ffffffffc000475e:	20 41 50             	and    %al,0x50(%rcx)
ffffffffc0004761:	49                   	rex.WB
ffffffffc0004762:	43 20 3d 20 25 70 2c 	rex.XB and %dil,0x2c702520(%rip)        # ffffffffec706c89 <___KERNEL_UNMAP_END__+0x2c6fd0a9>
ffffffffc0004769:	20 46 41             	and    %al,0x41(%rsi)
ffffffffc000476c:	44 54                	rex.R push %rsp
ffffffffc000476e:	20 3d 20 25 70 2c    	and    %bh,0x2c702520(%rip)        # ffffffffec706c94 <___KERNEL_UNMAP_END__+0x2c6fd0b4>
ffffffffc0004774:	20 48 50             	and    %cl,0x50(%rax)
ffffffffc0004777:	45 54                	rex.RB push %r12
ffffffffc0004779:	20 3d 20 25 70 0a    	and    %bh,0xa702520(%rip)        # ffffffffca706c9f <___KERNEL_UNMAP_END__+0xa6fd0bf>
ffffffffc000477f:	00 6c 41 50          	add    %ch,0x50(%rcx,%rax,2)
ffffffffc0004783:	49                   	rex.WB
ffffffffc0004784:	43 20 3d 20 25 75 2c 	rex.XB and %dil,0x2c752520(%rip)        # ffffffffec756cab <___KERNEL_UNMAP_END__+0x2c74d0cb>
ffffffffc000478b:	20 69 6f             	and    %ch,0x6f(%rcx)
ffffffffc000478e:	41 50                	push   %r8
ffffffffc0004790:	49                   	rex.WB
ffffffffc0004791:	43 20 3d 20 25 75 2c 	rex.XB and %dil,0x2c752520(%rip)        # ffffffffec756cb8 <___KERNEL_UNMAP_END__+0x2c74d0d8>
ffffffffc0004798:	20 4f 76             	and    %cl,0x76(%rdi)
ffffffffc000479b:	65 72 72             	gs jb  ffffffffc0004810 <.refptr._console_print+0xd0>
ffffffffc000479e:	69 64 65 20 3d 20 25 	imul   $0x7525203d,0x20(%rbp,%riz,2),%esp
ffffffffc00047a5:	75 
ffffffffc00047a6:	2c 20                	sub    $0x20,%al
ffffffffc00047a8:	4e                   	rex.WRX
ffffffffc00047a9:	4d                   	rex.WRB
ffffffffc00047aa:	49 20 3d 20 25 78 0a 	rex.WB and %dil,0xa782520(%rip)        # ffffffffca786cd1 <___KERNEL_UNMAP_END__+0xa77d0f1>
ffffffffc00047b1:	00 00                	add    %al,(%rax)
ffffffffc00047b3:	00 00                	add    %al,(%rax)
ffffffffc00047b5:	00 00                	add    %al,(%rax)
ffffffffc00047b7:	00 50 72             	add    %dl,0x72(%rax)
ffffffffc00047ba:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00047bb:	63 65 73             	movslq 0x73(%rbp),%esp
ffffffffc00047be:	73 6f                	jae    ffffffffc000482f <.refptr._console_print+0xef>
ffffffffc00047c0:	72 20                	jb     ffffffffc00047e2 <.refptr._console_print+0xa2>
ffffffffc00047c2:	25 2e 32 68 68       	and    $0x6868322e,%eax
ffffffffc00047c7:	78 3a                	js     ffffffffc0004803 <.refptr._console_print+0xc3>
ffffffffc00047c9:	25 2e 32 68 68       	and    $0x6868322e,%eax
ffffffffc00047ce:	78 20                	js     ffffffffc00047f0 <.refptr._console_print+0xb0>
ffffffffc00047d0:	4e 6f                	rex.WRX outsl %ds:(%rsi),(%dx)
ffffffffc00047d2:	74 20                	je     ffffffffc00047f4 <.refptr._console_print+0xb4>
ffffffffc00047d4:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
ffffffffc00047d6:	61                   	(bad)  
ffffffffc00047d7:	62                   	(bad)  
ffffffffc00047d8:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00047d9:	65 64 20 59 65       	gs and %bl,%fs:0x65(%rcx)
ffffffffc00047de:	74 21                	je     ffffffffc0004801 <.refptr._console_print+0xc1>
ffffffffc00047e0:	20 28                	and    %ch,(%rax)
ffffffffc00047e2:	25 6c 6c 78 29       	and    $0x29786c6c,%eax
ffffffffc00047e7:	0a 00                	or     (%rax),%al
ffffffffc00047e9:	00 00                	add    %al,(%rax)
ffffffffc00047eb:	00 00                	add    %al,(%rax)
ffffffffc00047ed:	00 00                	add    %al,(%rax)
ffffffffc00047ef:	00 46 6f             	add    %al,0x6f(%rsi)
ffffffffc00047f2:	75 6e                	jne    ffffffffc0004862 <.refptr._console_print+0x122>
ffffffffc00047f4:	64 20 50 72          	and    %dl,%fs:0x72(%rax)
ffffffffc00047f8:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00047f9:	63 65 73             	movslq 0x73(%rbp),%esp
ffffffffc00047fc:	73 6f                	jae    ffffffffc000486d <.refptr._console_print+0x12d>
ffffffffc00047fe:	72 3a                	jb     ffffffffc000483a <.refptr._console_print+0xfa>
ffffffffc0004800:	20 25 2e 32 68 68    	and    %ah,0x6868322e(%rip)        # 28687a34 <asm_ap_startup_len+0x28687964>
ffffffffc0004806:	78 3a                	js     ffffffffc0004842 <.refptr._console_print+0x102>
ffffffffc0004808:	25 2e 32 68 68       	and    $0x6868322e,%eax
ffffffffc000480d:	78 0a                	js     ffffffffc0004819 <.refptr._console_print+0xd9>
ffffffffc000480f:	00 49 2f             	add    %cl,0x2f(%rcx)
ffffffffc0004812:	4f 20 41 50          	rex.WRXB and %r8b,0x50(%r9)
ffffffffc0004816:	49                   	rex.WB
ffffffffc0004817:	43 3a 20             	rex.XB cmp (%r8),%spl
ffffffffc000481a:	25 78 3a 25 78       	and    $0x78253a78,%eax
ffffffffc000481f:	0a 00                	or     (%rax),%al
ffffffffc0004821:	4f 76 65             	rex.WRXB jbe ffffffffc0004889 <.refptr._console_print+0x149>
ffffffffc0004824:	72 72                	jb     ffffffffc0004898 <.refptr._console_print+0x158>
ffffffffc0004826:	69 64 65 3a 20 25 75 	imul   $0x3a752520,0x3a(%rbp,%riz,2),%esp
ffffffffc000482d:	3a 
ffffffffc000482e:	25 78 3a 25 68       	and    $0x68253a78,%eax
ffffffffc0004833:	78 0a                	js     ffffffffc000483f <.refptr._console_print+0xff>
ffffffffc0004835:	00 4e 6f             	add    %cl,0x6f(%rsi)
ffffffffc0004838:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0004839:	2d 47 6c 6f 62       	sub    $0x626f6c47,%eax
ffffffffc000483e:	61                   	(bad)  
ffffffffc000483f:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004840:	20 4e 4d             	and    %cl,0x4d(%rsi)
ffffffffc0004843:	49 21 0a             	and    %rcx,(%r10)
ffffffffc0004846:	00 4e 4d             	add    %cl,0x4d(%rsi)
ffffffffc0004849:	49 3a 20             	rex.WB cmp (%r8),%spl
ffffffffc000484c:	25 2e 32 68 68       	and    $0x6868322e,%eax
ffffffffc0004851:	78 3a                	js     ffffffffc000488d <.refptr._console_print+0x14d>
ffffffffc0004853:	25 68 78 3a 25       	and    $0x253a7868,%eax
ffffffffc0004858:	68 68 75 0a 00       	pushq  $0xa7568
ffffffffc000485d:	00 00                	add    %al,(%rax)
ffffffffc000485f:	00 55 6e             	add    %dl,0x6e(%rbp)
ffffffffc0004862:	69 6d 70 6c 65 6d 65 	imul   $0x656d656c,0x70(%rbp),%ebp
ffffffffc0004869:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc000486a:	74 65                	je     ffffffffc00048d1 <.refptr.vm_commit+0x11>
ffffffffc000486c:	64 20 49 6e          	and    %cl,%fs:0x6e(%rcx)
ffffffffc0004870:	74 65                	je     ffffffffc00048d7 <.refptr.vm_commit+0x17>
ffffffffc0004872:	72 72                	jb     ffffffffc00048e6 <.refptr.vm_commit+0x26>
ffffffffc0004874:	75 70                	jne    ffffffffc00048e6 <.refptr.vm_commit+0x26>
ffffffffc0004876:	74 20                	je     ffffffffc0004898 <.refptr._console_print+0x158>
ffffffffc0004878:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
ffffffffc000487a:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc000487b:	74 72                	je     ffffffffc00048ef <.refptr.vm_commit+0x2f>
ffffffffc000487d:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc000487e:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000487f:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004880:	65 72 20             	gs jb  ffffffffc00048a3 <.refptr.vm_release+0x3>
ffffffffc0004883:	53                   	push   %rbx
ffffffffc0004884:	74 72                	je     ffffffffc00048f8 <.refptr.vm_commit+0x38>
ffffffffc0004886:	75 63                	jne    ffffffffc00048eb <.refptr.vm_commit+0x2b>
ffffffffc0004888:	74 75                	je     ffffffffc00048ff <.refptr.vm_commit+0x3f>
ffffffffc000488a:	72 65                	jb     ffffffffc00048f1 <.refptr.vm_commit+0x31>
ffffffffc000488c:	20 54 79 70          	and    %dl,0x70(%rcx,%rdi,2)
ffffffffc0004890:	65 3a 20             	cmp    %gs:(%rax),%ah
ffffffffc0004893:	25 23 68 68 78       	and    $0x78686823,%eax
ffffffffc0004898:	0a 00                	or     (%rax),%al
ffffffffc000489a:	00 00                	add    %al,(%rax)
ffffffffc000489c:	00 00                	add    %al,(%rax)
	...

ffffffffc00048a0 <.refptr.vm_release>:
ffffffffc00048a0:	20 21                	and    %ah,(%rcx)
ffffffffc00048a2:	00 c0                	add    %al,%al
ffffffffc00048a4:	ff                   	(bad)  
ffffffffc00048a5:	ff                   	(bad)  
ffffffffc00048a6:	ff                   	(bad)  
ffffffffc00048a7:	ff 00                	incl   (%rax)
ffffffffc00048a9:	00 00                	add    %al,(%rax)
ffffffffc00048ab:	00 00                	add    %al,(%rax)
ffffffffc00048ad:	00 00                	add    %al,(%rax)
	...

ffffffffc00048b0 <.refptr.hpet_timer_init>:
ffffffffc00048b0:	60                   	(bad)  
ffffffffc00048b1:	8d 00                	lea    (%rax),%eax
ffffffffc00048b3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00048b6:	ff                   	(bad)  
ffffffffc00048b7:	ff 00                	incl   (%rax)
ffffffffc00048b9:	00 00                	add    %al,(%rax)
ffffffffc00048bb:	00 00                	add    %al,(%rax)
ffffffffc00048bd:	00 00                	add    %al,(%rax)
	...

ffffffffc00048c0 <.refptr.vm_commit>:
ffffffffc00048c0:	80 20 00             	andb   $0x0,(%rax)
ffffffffc00048c3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00048c6:	ff                   	(bad)  
ffffffffc00048c7:	ff 00                	incl   (%rax)
ffffffffc00048c9:	00 00                	add    %al,(%rax)
ffffffffc00048cb:	00 00                	add    %al,(%rax)
ffffffffc00048cd:	00 00                	add    %al,(%rax)
ffffffffc00048cf:	00 41 50             	add    %al,0x50(%rcx)
ffffffffc00048d2:	49                   	rex.WB
ffffffffc00048d3:	43 3a 0a             	rex.XB cmp (%r10),%cl
ffffffffc00048d6:	20 20                	and    %ah,(%rax)
ffffffffc00048d8:	72 61                	jb     ffffffffc000493b <.refptr.vm_commit+0x7b>
ffffffffc00048da:	78 20                	js     ffffffffc00048fc <.refptr.vm_commit+0x3c>
ffffffffc00048dc:	20 20                	and    %ah,(%rax)
ffffffffc00048de:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee236e04 <___KERNEL_UNMAP_END__+0x2e22d224>
ffffffffc00048e4:	31 38                	xor    %edi,(%rax)
ffffffffc00048e6:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00048e7:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00048e8:	78 0a                	js     ffffffffc00048f4 <.refptr.vm_commit+0x34>
ffffffffc00048ea:	20 20                	and    %ah,(%rax)
ffffffffc00048ec:	72 62                	jb     ffffffffc0004950 <.refptr.vm_commit+0x90>
ffffffffc00048ee:	78 20                	js     ffffffffc0004910 <.refptr.vm_commit+0x50>
ffffffffc00048f0:	20 20                	and    %ah,(%rax)
ffffffffc00048f2:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee236e18 <___KERNEL_UNMAP_END__+0x2e22d238>
ffffffffc00048f8:	31 38                	xor    %edi,(%rax)
ffffffffc00048fa:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00048fb:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00048fc:	78 0a                	js     ffffffffc0004908 <.refptr.vm_commit+0x48>
ffffffffc00048fe:	20 20                	and    %ah,(%rax)
ffffffffc0004900:	72 63                	jb     ffffffffc0004965 <.refptr.vm_commit+0xa5>
ffffffffc0004902:	78 20                	js     ffffffffc0004924 <.refptr.vm_commit+0x64>
ffffffffc0004904:	20 20                	and    %ah,(%rax)
ffffffffc0004906:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee236e2c <___KERNEL_UNMAP_END__+0x2e22d24c>
ffffffffc000490c:	31 38                	xor    %edi,(%rax)
ffffffffc000490e:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000490f:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004910:	78 0a                	js     ffffffffc000491c <.refptr.vm_commit+0x5c>
ffffffffc0004912:	20 20                	and    %ah,(%rax)
ffffffffc0004914:	72 64                	jb     ffffffffc000497a <.refptr.vm_commit+0xba>
ffffffffc0004916:	78 20                	js     ffffffffc0004938 <.refptr.vm_commit+0x78>
ffffffffc0004918:	20 20                	and    %ah,(%rax)
ffffffffc000491a:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee236e40 <___KERNEL_UNMAP_END__+0x2e22d260>
ffffffffc0004920:	31 38                	xor    %edi,(%rax)
ffffffffc0004922:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004923:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004924:	78 0a                	js     ffffffffc0004930 <.refptr.vm_commit+0x70>
ffffffffc0004926:	20 20                	and    %ah,(%rax)
ffffffffc0004928:	72 73                	jb     ffffffffc000499d <.refptr.vm_commit+0xdd>
ffffffffc000492a:	69 20 20 20 20 3d    	imul   $0x3d202020,(%rax),%esp
ffffffffc0004930:	20 25 23 2e 31 38    	and    %ah,0x38312e23(%rip)        # fffffffff8317759 <___KERNEL_UNMAP_END__+0x3830db79>
ffffffffc0004936:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004937:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004938:	78 0a                	js     ffffffffc0004944 <.refptr.vm_commit+0x84>
ffffffffc000493a:	20 20                	and    %ah,(%rax)
ffffffffc000493c:	72 64                	jb     ffffffffc00049a2 <.refptr.vm_commit+0xe2>
ffffffffc000493e:	69 20 20 20 20 3d    	imul   $0x3d202020,(%rax),%esp
ffffffffc0004944:	20 25 23 2e 31 38    	and    %ah,0x38312e23(%rip)        # fffffffff831776d <___KERNEL_UNMAP_END__+0x3830db8d>
ffffffffc000494a:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000494b:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000494c:	78 0a                	js     ffffffffc0004958 <.refptr.vm_commit+0x98>
ffffffffc000494e:	20 20                	and    %ah,(%rax)
ffffffffc0004950:	72 62                	jb     ffffffffc00049b4 <.refptr.vm_commit+0xf4>
ffffffffc0004952:	70 20                	jo     ffffffffc0004974 <.refptr.vm_commit+0xb4>
ffffffffc0004954:	20 20                	and    %ah,(%rax)
ffffffffc0004956:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee236e7c <___KERNEL_UNMAP_END__+0x2e22d29c>
ffffffffc000495c:	31 38                	xor    %edi,(%rax)
ffffffffc000495e:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000495f:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004960:	78 0a                	js     ffffffffc000496c <.refptr.vm_commit+0xac>
ffffffffc0004962:	20 20                	and    %ah,(%rax)
ffffffffc0004964:	72 38                	jb     ffffffffc000499e <.refptr.vm_commit+0xde>
ffffffffc0004966:	20 20                	and    %ah,(%rax)
ffffffffc0004968:	20 20                	and    %ah,(%rax)
ffffffffc000496a:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee236e90 <___KERNEL_UNMAP_END__+0x2e22d2b0>
ffffffffc0004970:	31 38                	xor    %edi,(%rax)
ffffffffc0004972:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004973:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004974:	78 0a                	js     ffffffffc0004980 <.refptr.vm_commit+0xc0>
ffffffffc0004976:	20 20                	and    %ah,(%rax)
ffffffffc0004978:	72 39                	jb     ffffffffc00049b3 <.refptr.vm_commit+0xf3>
ffffffffc000497a:	20 20                	and    %ah,(%rax)
ffffffffc000497c:	20 20                	and    %ah,(%rax)
ffffffffc000497e:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee236ea4 <___KERNEL_UNMAP_END__+0x2e22d2c4>
ffffffffc0004984:	31 38                	xor    %edi,(%rax)
ffffffffc0004986:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004987:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004988:	78 0a                	js     ffffffffc0004994 <.refptr.vm_commit+0xd4>
ffffffffc000498a:	20 20                	and    %ah,(%rax)
ffffffffc000498c:	72 31                	jb     ffffffffc00049bf <.refptr.vm_commit+0xff>
ffffffffc000498e:	30 20                	xor    %ah,(%rax)
ffffffffc0004990:	20 20                	and    %ah,(%rax)
ffffffffc0004992:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee236eb8 <___KERNEL_UNMAP_END__+0x2e22d2d8>
ffffffffc0004998:	31 38                	xor    %edi,(%rax)
ffffffffc000499a:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000499b:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000499c:	78 0a                	js     ffffffffc00049a8 <.refptr.vm_commit+0xe8>
ffffffffc000499e:	20 20                	and    %ah,(%rax)
ffffffffc00049a0:	72 31                	jb     ffffffffc00049d3 <.refptr.vm_commit+0x113>
ffffffffc00049a2:	31 20                	xor    %esp,(%rax)
ffffffffc00049a4:	20 20                	and    %ah,(%rax)
ffffffffc00049a6:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee236ecc <___KERNEL_UNMAP_END__+0x2e22d2ec>
ffffffffc00049ac:	31 38                	xor    %edi,(%rax)
ffffffffc00049ae:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00049af:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00049b0:	78 0a                	js     ffffffffc00049bc <.refptr.vm_commit+0xfc>
ffffffffc00049b2:	20 20                	and    %ah,(%rax)
ffffffffc00049b4:	72 31                	jb     ffffffffc00049e7 <.refptr.vm_commit+0x127>
ffffffffc00049b6:	32 20                	xor    (%rax),%ah
ffffffffc00049b8:	20 20                	and    %ah,(%rax)
ffffffffc00049ba:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee236ee0 <___KERNEL_UNMAP_END__+0x2e22d300>
ffffffffc00049c0:	31 38                	xor    %edi,(%rax)
ffffffffc00049c2:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00049c3:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00049c4:	78 0a                	js     ffffffffc00049d0 <.refptr.vm_commit+0x110>
ffffffffc00049c6:	20 20                	and    %ah,(%rax)
ffffffffc00049c8:	72 31                	jb     ffffffffc00049fb <.refptr.vm_commit+0x13b>
ffffffffc00049ca:	33 20                	xor    (%rax),%esp
ffffffffc00049cc:	20 20                	and    %ah,(%rax)
ffffffffc00049ce:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee236ef4 <___KERNEL_UNMAP_END__+0x2e22d314>
ffffffffc00049d4:	31 38                	xor    %edi,(%rax)
ffffffffc00049d6:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00049d7:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00049d8:	78 0a                	js     ffffffffc00049e4 <.refptr.vm_commit+0x124>
ffffffffc00049da:	20 20                	and    %ah,(%rax)
ffffffffc00049dc:	72 31                	jb     ffffffffc0004a0f <.refptr.vm_commit+0x14f>
ffffffffc00049de:	34 20                	xor    $0x20,%al
ffffffffc00049e0:	20 20                	and    %ah,(%rax)
ffffffffc00049e2:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee236f08 <___KERNEL_UNMAP_END__+0x2e22d328>
ffffffffc00049e8:	31 38                	xor    %edi,(%rax)
ffffffffc00049ea:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00049eb:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00049ec:	78 0a                	js     ffffffffc00049f8 <.refptr.vm_commit+0x138>
ffffffffc00049ee:	20 20                	and    %ah,(%rax)
ffffffffc00049f0:	72 31                	jb     ffffffffc0004a23 <.refptr.vm_commit+0x163>
ffffffffc00049f2:	35 20 20 20 20       	xor    $0x20202020,%eax
ffffffffc00049f7:	3d 20 25 23 2e       	cmp    $0x2e232520,%eax
ffffffffc00049fc:	31 38                	xor    %edi,(%rax)
ffffffffc00049fe:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00049ff:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004a00:	78 0a                	js     ffffffffc0004a0c <.refptr.vm_commit+0x14c>
ffffffffc0004a02:	20 20                	and    %ah,(%rax)
ffffffffc0004a04:	72 66                	jb     ffffffffc0004a6c <.refptr.asm_apic_lint0_int+0xc>
ffffffffc0004a06:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004a07:	61                   	(bad)  
ffffffffc0004a08:	67 73 20             	addr32 jae ffffffffc0004a2b <.refptr.vm_commit+0x16b>
ffffffffc0004a0b:	3d 20 25 23 2e       	cmp    $0x2e232520,%eax
ffffffffc0004a10:	38 6c 6c 78          	cmp    %ch,0x78(%rsp,%rbp,2)
ffffffffc0004a14:	0a 20                	or     (%rax),%ah
ffffffffc0004a16:	20 74 20 20          	and    %dh,0x20(%rax,%riz,1)
ffffffffc0004a1a:	20 20                	and    %ah,(%rax)
ffffffffc0004a1c:	20 20                	and    %ah,(%rax)
ffffffffc0004a1e:	3d 20 25 23 2e       	cmp    $0x2e232520,%eax
ffffffffc0004a23:	34 6c                	xor    $0x6c,%al
ffffffffc0004a25:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004a26:	78 0a                	js     ffffffffc0004a32 <.refptr.scheduler_yield+0x2>
	...

ffffffffc0004a30 <.refptr.scheduler_yield>:
ffffffffc0004a30:	30 23                	xor    %ah,(%rbx)
ffffffffc0004a32:	00 c0                	add    %al,%al
ffffffffc0004a34:	ff                   	(bad)  
ffffffffc0004a35:	ff                   	(bad)  
ffffffffc0004a36:	ff                   	(bad)  
ffffffffc0004a37:	ff 00                	incl   (%rax)
ffffffffc0004a39:	00 00                	add    %al,(%rax)
ffffffffc0004a3b:	00 00                	add    %al,(%rax)
ffffffffc0004a3d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004a40 <.refptr.asm_apic_err_int>:
ffffffffc0004a40:	18 01                	sbb    %al,(%rcx)
ffffffffc0004a42:	00 c0                	add    %al,%al
ffffffffc0004a44:	ff                   	(bad)  
ffffffffc0004a45:	ff                   	(bad)  
ffffffffc0004a46:	ff                   	(bad)  
ffffffffc0004a47:	ff 00                	incl   (%rax)
ffffffffc0004a49:	00 00                	add    %al,(%rax)
ffffffffc0004a4b:	00 00                	add    %al,(%rax)
ffffffffc0004a4d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004a50 <.refptr.asm_apic_lint1_int>:
ffffffffc0004a50:	11 01                	adc    %eax,(%rcx)
ffffffffc0004a52:	00 c0                	add    %al,%al
ffffffffc0004a54:	ff                   	(bad)  
ffffffffc0004a55:	ff                   	(bad)  
ffffffffc0004a56:	ff                   	(bad)  
ffffffffc0004a57:	ff 00                	incl   (%rax)
ffffffffc0004a59:	00 00                	add    %al,(%rax)
ffffffffc0004a5b:	00 00                	add    %al,(%rax)
ffffffffc0004a5d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004a60 <.refptr.asm_apic_lint0_int>:
ffffffffc0004a60:	0a 01                	or     (%rcx),%al
ffffffffc0004a62:	00 c0                	add    %al,%al
ffffffffc0004a64:	ff                   	(bad)  
ffffffffc0004a65:	ff                   	(bad)  
ffffffffc0004a66:	ff                   	(bad)  
ffffffffc0004a67:	ff 00                	incl   (%rax)
ffffffffc0004a69:	00 00                	add    %al,(%rax)
ffffffffc0004a6b:	00 00                	add    %al,(%rax)
ffffffffc0004a6d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004a70 <.refptr.asm_apic_timer_int>:
ffffffffc0004a70:	03 01                	add    (%rcx),%eax
ffffffffc0004a72:	00 c0                	add    %al,%al
ffffffffc0004a74:	ff                   	(bad)  
ffffffffc0004a75:	ff                   	(bad)  
ffffffffc0004a76:	ff                   	(bad)  
ffffffffc0004a77:	ff 00                	incl   (%rax)
ffffffffc0004a79:	00 00                	add    %al,(%rax)
ffffffffc0004a7b:	00 00                	add    %al,(%rax)
ffffffffc0004a7d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004a80 <.refptr.set_idt_entry>:
ffffffffc0004a80:	20 06                	and    %al,(%rsi)
ffffffffc0004a82:	00 c0                	add    %al,%al
ffffffffc0004a84:	ff                   	(bad)  
ffffffffc0004a85:	ff                   	(bad)  
ffffffffc0004a86:	ff                   	(bad)  
ffffffffc0004a87:	ff 00                	incl   (%rax)
ffffffffc0004a89:	00 00                	add    %al,(%rax)
ffffffffc0004a8b:	00 00                	add    %al,(%rax)
ffffffffc0004a8d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004a90 <.refptr.asm_apic_spurious_int>:
ffffffffc0004a90:	01 01                	add    %eax,(%rcx)
ffffffffc0004a92:	00 c0                	add    %al,%al
ffffffffc0004a94:	ff                   	(bad)  
ffffffffc0004a95:	ff                   	(bad)  
ffffffffc0004a96:	ff                   	(bad)  
ffffffffc0004a97:	ff 00                	incl   (%rax)
ffffffffc0004a99:	00 00                	add    %al,(%rax)
ffffffffc0004a9b:	00 00                	add    %al,(%rax)
ffffffffc0004a9d:	00 00                	add    %al,(%rax)
ffffffffc0004a9f:	00 43 50             	add    %al,0x50(%rbx)
ffffffffc0004aa2:	55                   	push   %rbp
ffffffffc0004aa3:	20 43 6f             	and    %al,0x6f(%rbx)
ffffffffc0004aa6:	75 6e                	jne    ffffffffc0004b16 <.refptr.asm_apic_spurious_int+0x86>
ffffffffc0004aa8:	74 3a                	je     ffffffffc0004ae4 <.refptr.asm_apic_spurious_int+0x54>
ffffffffc0004aaa:	20 25 75 0a 00 73    	and    %ah,0x73000a75(%rip)        # 33005525 <asm_ap_startup_len+0x33005455>
ffffffffc0004ab0:	72 63                	jb     ffffffffc0004b15 <.refptr.asm_apic_spurious_int+0x85>
ffffffffc0004ab2:	2f                   	(bad)  
ffffffffc0004ab3:	6b 65 72 6e          	imul   $0x6e,0x72(%rbp),%esp
ffffffffc0004ab7:	65 6c                	gs insb (%dx),%es:(%rdi)
ffffffffc0004ab9:	2f                   	(bad)  
ffffffffc0004aba:	63 70 75             	movslq 0x75(%rax),%esi
ffffffffc0004abd:	2f                   	(bad)  
ffffffffc0004abe:	63 70 75             	movslq 0x75(%rax),%esi
ffffffffc0004ac1:	2e 63 00             	movslq %cs:(%rax),%eax
ffffffffc0004ac4:	41 73 73             	rex.B jae ffffffffc0004b3a <.refptr.asm_apic_spurious_int+0xaa>
ffffffffc0004ac7:	65 72 74             	gs jb  ffffffffc0004b3e <.refptr.asm_apic_spurious_int+0xae>
ffffffffc0004aca:	69 6f 6e 20 46 61 69 	imul   $0x69614620,0x6e(%rdi),%ebp
ffffffffc0004ad1:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004ad2:	65 64 00 61 73       	gs add %ah,%fs:0x73(%rcx)
ffffffffc0004ad7:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0004ad8:	5f                   	pop    %rdi
ffffffffc0004ad9:	63 75 72             	movslq 0x72(%rbp),%esi
ffffffffc0004adc:	72 65                	jb     ffffffffc0004b43 <.refptr.asm_apic_spurious_int+0xb3>
ffffffffc0004ade:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0004adf:	74 5f                	je     ffffffffc0004b40 <.refptr.asm_apic_spurious_int+0xb0>
ffffffffc0004ae1:	63 70 75             	movslq 0x75(%rax),%esi
ffffffffc0004ae4:	28 29                	sub    %ch,(%rcx)
ffffffffc0004ae6:	3d 3d 5f 63 70       	cmp    $0x70635f3d,%eax
ffffffffc0004aeb:	75 5f                	jne    ffffffffc0004b4c <.refptr.asm_apic_spurious_int+0xbc>
ffffffffc0004aed:	64 74 00             	fs je  ffffffffc0004af0 <.refptr.asm_apic_spurious_int+0x60>
ffffffffc0004af0:	42 53                	rex.X push %rbx
ffffffffc0004af2:	50                   	push   %rax
ffffffffc0004af3:	20 43 50             	and    %al,0x50(%rbx)
ffffffffc0004af6:	55                   	push   %rbp
ffffffffc0004af7:	20 49 44             	and    %cl,0x44(%rcx)
ffffffffc0004afa:	3a 20                	cmp    (%rax),%ah
ffffffffc0004afc:	25 68 68 75 0a       	and    $0xa756868,%eax
ffffffffc0004b01:	41 50                	push   %r8
ffffffffc0004b03:	49                   	rex.WB
ffffffffc0004b04:	43 20 61 64          	rex.XB and %spl,0x64(%r9)
ffffffffc0004b08:	64 72 65             	fs jb  ffffffffc0004b70 <.refptr.asm_apic_spurious_int+0xe0>
ffffffffc0004b0b:	73 73                	jae    ffffffffc0004b80 <.refptr.asm_apic_spurious_int+0xf0>
ffffffffc0004b0d:	3a 20                	cmp    (%rax),%ah
ffffffffc0004b0f:	25 70 2c 20 41       	and    $0x41202c70,%eax
ffffffffc0004b14:	50                   	push   %rax
ffffffffc0004b15:	49                   	rex.WB
ffffffffc0004b16:	43 20 74 69 6d       	and    %sil,0x6d(%r9,%r13,2)
ffffffffc0004b1b:	65 72 20             	gs jb  ffffffffc0004b3e <.refptr.asm_apic_spurious_int+0xae>
ffffffffc0004b1e:	74 2f                	je     ffffffffc0004b4f <.refptr.asm_apic_spurious_int+0xbf>
ffffffffc0004b20:	75 73                	jne    ffffffffc0004b95 <.refptr.asm_apic_spurious_int+0x105>
ffffffffc0004b22:	3a 20                	cmp    (%rax),%ah
ffffffffc0004b24:	25 6c 75 0a 00       	and    $0xa756c,%eax
ffffffffc0004b29:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
ffffffffc0004b2b:	61                   	(bad)  
ffffffffc0004b2c:	62                   	(bad)  
ffffffffc0004b2d:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004b2e:	69 6e 67 20 43 50 55 	imul   $0x55504320,0x67(%rsi),%ebp
ffffffffc0004b35:	23 25 2e 32 68 68    	and    0x6868322e(%rip),%esp        # 28687d69 <asm_ap_startup_len+0x28687c99>
ffffffffc0004b3b:	78 2e                	js     ffffffffc0004b6b <.refptr.asm_apic_spurious_int+0xdb>
ffffffffc0004b3d:	2e 2e 0a 00          	cs or  %cs:(%rax),%al
ffffffffc0004b41:	00 00                	add    %al,(%rax)
ffffffffc0004b43:	00 00                	add    %al,(%rax)
ffffffffc0004b45:	00 00                	add    %al,(%rax)
ffffffffc0004b47:	00 43 50             	add    %al,0x50(%rbx)
ffffffffc0004b4a:	55                   	push   %rbp
ffffffffc0004b4b:	23 25 2e 32 68 68    	and    0x6868322e(%rip),%esp        # 28687d7f <asm_ap_startup_len+0x28687caf>
ffffffffc0004b51:	78 20                	js     ffffffffc0004b73 <.refptr.asm_apic_spurious_int+0xe3>
ffffffffc0004b53:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
ffffffffc0004b55:	69 74 69 61 6c 69 7a 	imul   $0x657a696c,0x61(%rcx,%rbp,2),%esi
ffffffffc0004b5c:	65 
ffffffffc0004b5d:	64 2c 20             	fs sub $0x20,%al
ffffffffc0004b60:	57                   	push   %rdi
ffffffffc0004b61:	61                   	(bad)  
ffffffffc0004b62:	69 74 69 6e 67 20 66 	imul   $0x6f662067,0x6e(%rcx,%rbp,2),%esi
ffffffffc0004b69:	6f 
ffffffffc0004b6a:	72 20                	jb     ffffffffc0004b8c <.refptr.asm_apic_spurious_int+0xfc>
ffffffffc0004b6c:	53                   	push   %rbx
ffffffffc0004b6d:	65 74 75             	gs je  ffffffffc0004be5 <.refptr.asm_apic_spurious_int+0x155>
ffffffffc0004b70:	70 20                	jo     ffffffffc0004b92 <.refptr.asm_apic_spurious_int+0x102>
ffffffffc0004b72:	74 6f                	je     ffffffffc0004be3 <.refptr.asm_apic_spurious_int+0x153>
ffffffffc0004b74:	20 43 6f             	and    %al,0x6f(%rbx)
ffffffffc0004b77:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0004b78:	70 6c                	jo     ffffffffc0004be6 <.refptr.asm_apic_spurious_int+0x156>
ffffffffc0004b7a:	65 74 65             	gs je  ffffffffc0004be2 <.refptr.asm_apic_spurious_int+0x152>
ffffffffc0004b7d:	2e 2e 2e 0a 00       	cs cs or %cs:(%rax),%al
ffffffffc0004b82:	43 50                	rex.XB push %r8
ffffffffc0004b84:	55                   	push   %rbp
ffffffffc0004b85:	23 25 2e 32 68 68    	and    0x6868322e(%rip),%esp        # 28687db9 <asm_ap_startup_len+0x28687ce9>
ffffffffc0004b8b:	78 20                	js     ffffffffc0004bad <.refptr.asm_apic_spurious_int+0x11d>
ffffffffc0004b8d:	53                   	push   %rbx
ffffffffc0004b8e:	65 74 75             	gs je  ffffffffc0004c06 <.refptr.hpet_timer_spinwait+0x6>
ffffffffc0004b91:	70 20                	jo     ffffffffc0004bb3 <.refptr.asm_apic_spurious_int+0x123>
ffffffffc0004b93:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
ffffffffc0004b95:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0004b96:	70 6c                	jo     ffffffffc0004c04 <.refptr.hpet_timer_spinwait+0x4>
ffffffffc0004b98:	65 74 65             	gs je  ffffffffc0004c00 <.refptr.hpet_timer_spinwait>
ffffffffc0004b9b:	21 0a                	and    %ecx,(%rdx)
ffffffffc0004b9d:	00 00                	add    %al,(%rax)
ffffffffc0004b9f:	00 46 61             	add    %al,0x61(%rsi)
ffffffffc0004ba2:	69 6c 65 64 20 74 6f 	imul   $0x206f7420,0x64(%rbp,%riz,2),%ebp
ffffffffc0004ba9:	20 
ffffffffc0004baa:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
ffffffffc0004bac:	69 74 69 61 6c 69 7a 	imul   $0x657a696c,0x61(%rcx,%rbp,2),%esi
ffffffffc0004bb3:	65 
ffffffffc0004bb4:	20 43 50             	and    %al,0x50(%rbx)
ffffffffc0004bb7:	55                   	push   %rbp
ffffffffc0004bb8:	23 25 2e 32 68 68    	and    0x6868322e(%rip),%esp        # 28687dec <asm_ap_startup_len+0x28687d1c>
ffffffffc0004bbe:	78 21                	js     ffffffffc0004be1 <.refptr.asm_apic_spurious_int+0x151>
ffffffffc0004bc0:	0a 00                	or     (%rax),%al
ffffffffc0004bc2:	25 75 2f 25 75       	and    $0x75252f75,%eax
ffffffffc0004bc7:	20 43 50             	and    %al,0x50(%rbx)
ffffffffc0004bca:	55                   	push   %rbp
ffffffffc0004bcb:	73 20                	jae    ffffffffc0004bed <.refptr.asm_apic_spurious_int+0x15d>
ffffffffc0004bcd:	72 75                	jb     ffffffffc0004c44 <.refptr.paging_get_phys_pml4+0x4>
ffffffffc0004bcf:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0004bd0:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0004bd1:	69 6e 67 21 0a 00 00 	imul   $0xa21,0x67(%rsi),%ebp
ffffffffc0004bd8:	63 70 75             	movslq 0x75(%rax),%esi
ffffffffc0004bdb:	5f                   	pop    %rdi
ffffffffc0004bdc:	69 6e 69 74 00 00 00 	imul   $0x74,0x69(%rsi),%ebp
	...

ffffffffc0004bf0 <.refptr.paging_identity_unmap>:
ffffffffc0004bf0:	c0 1d 00 c0 ff ff ff 	rcrb   $0xff,-0x4000(%rip)        # ffffffffc0000bf7 <pci_init+0x217>
ffffffffc0004bf7:	ff 00                	incl   (%rax)
ffffffffc0004bf9:	00 00                	add    %al,(%rax)
ffffffffc0004bfb:	00 00                	add    %al,(%rax)
ffffffffc0004bfd:	00 00                	add    %al,(%rax)
	...

ffffffffc0004c00 <.refptr.hpet_timer_spinwait>:
ffffffffc0004c00:	d0 05 00 c0 ff ff    	rolb   -0x4000(%rip)        # ffffffffc0000c06 <pci_init+0x226>
ffffffffc0004c06:	ff                   	(bad)  
ffffffffc0004c07:	ff 00                	incl   (%rax)
ffffffffc0004c09:	00 00                	add    %al,(%rax)
ffffffffc0004c0b:	00 00                	add    %al,(%rax)
ffffffffc0004c0d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004c10 <.refptr.asm_setup_ap_startup_data>:
ffffffffc0004c10:	f6 7a 00             	idivb  0x0(%rdx)
ffffffffc0004c13:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0004c16:	ff                   	(bad)  
ffffffffc0004c17:	ff 00                	incl   (%rax)
ffffffffc0004c19:	00 00                	add    %al,(%rax)
ffffffffc0004c1b:	00 00                	add    %al,(%rax)
ffffffffc0004c1d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004c20 <.refptr.apic_send_ipi>:
ffffffffc0004c20:	e0 04                	loopne ffffffffc0004c26 <.refptr.apic_send_ipi+0x6>
ffffffffc0004c22:	00 c0                	add    %al,%al
ffffffffc0004c24:	ff                   	(bad)  
ffffffffc0004c25:	ff                   	(bad)  
ffffffffc0004c26:	ff                   	(bad)  
ffffffffc0004c27:	ff 00                	incl   (%rax)
ffffffffc0004c29:	00 00                	add    %al,(%rax)
ffffffffc0004c2b:	00 00                	add    %al,(%rax)
ffffffffc0004c2d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004c30 <.refptr.asm_setup_ap_startup_code>:
ffffffffc0004c30:	89 7a 00             	mov    %edi,0x0(%rdx)
ffffffffc0004c33:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0004c36:	ff                   	(bad)  
ffffffffc0004c37:	ff 00                	incl   (%rax)
ffffffffc0004c39:	00 00                	add    %al,(%rax)
ffffffffc0004c3b:	00 00                	add    %al,(%rax)
ffffffffc0004c3d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004c40 <.refptr.paging_get_phys_pml4>:
ffffffffc0004c40:	b0 1b                	mov    $0x1b,%al
ffffffffc0004c42:	00 c0                	add    %al,%al
ffffffffc0004c44:	ff                   	(bad)  
ffffffffc0004c45:	ff                   	(bad)  
ffffffffc0004c46:	ff                   	(bad)  
ffffffffc0004c47:	ff 00                	incl   (%rax)
ffffffffc0004c49:	00 00                	add    %al,(%rax)
ffffffffc0004c4b:	00 00                	add    %al,(%rax)
ffffffffc0004c4d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004c50 <.refptr.paging_identity_map>:
ffffffffc0004c50:	80 1d 00 c0 ff ff ff 	sbbb   $0xff,-0x4000(%rip)        # ffffffffc0000c57 <pci_init+0x277>
ffffffffc0004c57:	ff 00                	incl   (%rax)
ffffffffc0004c59:	00 00                	add    %al,(%rax)
ffffffffc0004c5b:	00 00                	add    %al,(%rax)
ffffffffc0004c5d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004c60 <.refptr.fatal_error_line>:
ffffffffc0004c60:	40 05 00 c0 ff ff    	rex add $0xffffc000,%eax
ffffffffc0004c66:	ff                   	(bad)  
ffffffffc0004c67:	ff 00                	incl   (%rax)
ffffffffc0004c69:	00 00                	add    %al,(%rax)
ffffffffc0004c6b:	00 00                	add    %al,(%rax)
ffffffffc0004c6d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004c70 <.refptr.asm_current_cpu>:
ffffffffc0004c70:	40 01 00             	rex add %eax,(%rax)
ffffffffc0004c73:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0004c76:	ff                   	(bad)  
ffffffffc0004c77:	ff 00                	incl   (%rax)
ffffffffc0004c79:	00 00                	add    %al,(%rax)
ffffffffc0004c7b:	00 00                	add    %al,(%rax)
ffffffffc0004c7d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004c80 <.refptr.asm_cpu_setup_data>:
ffffffffc0004c80:	ff                   	(bad)  
ffffffffc0004c81:	7a 00                	jp     ffffffffc0004c83 <.refptr.asm_cpu_setup_data+0x3>
ffffffffc0004c83:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0004c86:	ff                   	(bad)  
ffffffffc0004c87:	ff 00                	incl   (%rax)
ffffffffc0004c89:	00 00                	add    %al,(%rax)
ffffffffc0004c8b:	00 00                	add    %al,(%rax)
ffffffffc0004c8d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004c90 <.refptr.acpi_get_data>:
ffffffffc0004c90:	90                   	nop
ffffffffc0004c91:	7e 00                	jle    ffffffffc0004c93 <.refptr.acpi_get_data+0x3>
ffffffffc0004c93:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0004c96:	ff                   	(bad)  
ffffffffc0004c97:	ff 00                	incl   (%rax)
ffffffffc0004c99:	00 00                	add    %al,(%rax)
ffffffffc0004c9b:	00 00                	add    %al,(%rax)
ffffffffc0004c9d:	00 00                	add    %al,(%rax)
ffffffffc0004c9f:	00 43 50             	add    %al,0x50(%rbx)
ffffffffc0004ca2:	55                   	push   %rbp
ffffffffc0004ca3:	20 44 61 74          	and    %al,0x74(%rcx,%riz,2)
ffffffffc0004ca7:	61                   	(bad)  
ffffffffc0004ca8:	3a 0a                	cmp    (%rdx),%cl
ffffffffc0004caa:	20 20                	and    %ah,(%rax)
ffffffffc0004cac:	4d 61                	rex.WRB (bad) 
ffffffffc0004cae:	78 20                	js     ffffffffc0004cd0 <.refptr.acpi_get_data+0x40>
ffffffffc0004cb0:	43 50                	rex.XB push %r8
ffffffffc0004cb2:	55                   	push   %rbp
ffffffffc0004cb3:	49                   	rex.WB
ffffffffc0004cb4:	44 3a 20             	cmp    (%rax),%r12b
ffffffffc0004cb7:	25 75 0a 20 20       	and    $0x20200a75,%eax
ffffffffc0004cbc:	49                   	rex.WB
ffffffffc0004cbd:	44 3a 20             	cmp    (%rax),%r12b
ffffffffc0004cc0:	25 73 0a 20 20       	and    $0x20200a73,%eax
ffffffffc0004cc5:	46                   	rex.RX
ffffffffc0004cc6:	65 61                	gs (bad) 
ffffffffc0004cc8:	74 75                	je     ffffffffc0004d3f <.refptr.acpi_get_data+0xaf>
ffffffffc0004cca:	72 65                	jb     ffffffffc0004d31 <.refptr.acpi_get_data+0xa1>
ffffffffc0004ccc:	73 3a                	jae    ffffffffc0004d08 <.refptr.acpi_get_data+0x78>
ffffffffc0004cce:	00 20                	add    %ah,(%rax)
ffffffffc0004cd0:	46 50                	rex.RX push %rax
ffffffffc0004cd2:	55                   	push   %rbp
ffffffffc0004cd3:	00 20                	add    %ah,(%rax)
ffffffffc0004cd5:	56                   	push   %rsi
ffffffffc0004cd6:	4d                   	rex.WRB
ffffffffc0004cd7:	45 00 20             	add    %r12b,(%r8)
ffffffffc0004cda:	44                   	rex.R
ffffffffc0004cdb:	45 00 20             	add    %r12b,(%r8)
ffffffffc0004cde:	50                   	push   %rax
ffffffffc0004cdf:	53                   	push   %rbx
ffffffffc0004ce0:	45 00 20             	add    %r12b,(%r8)
ffffffffc0004ce3:	54                   	push   %rsp
ffffffffc0004ce4:	53                   	push   %rbx
ffffffffc0004ce5:	43 00 20             	rex.XB add %spl,(%r8)
ffffffffc0004ce8:	4d 53                	rex.WRB push %r11
ffffffffc0004cea:	52                   	push   %rdx
ffffffffc0004ceb:	00 20                	add    %ah,(%rax)
ffffffffc0004ced:	50                   	push   %rax
ffffffffc0004cee:	41                   	rex.B
ffffffffc0004cef:	45 00 20             	add    %r12b,(%r8)
ffffffffc0004cf2:	4d                   	rex.WRB
ffffffffc0004cf3:	43                   	rex.XB
ffffffffc0004cf4:	45 00 20             	add    %r12b,(%r8)
ffffffffc0004cf7:	43 58                	rex.XB pop %r8
ffffffffc0004cf9:	38 00                	cmp    %al,(%rax)
ffffffffc0004cfb:	20 41 50             	and    %al,0x50(%rcx)
ffffffffc0004cfe:	49                   	rex.WB
ffffffffc0004cff:	43 00 20             	rex.XB add %spl,(%r8)
ffffffffc0004d02:	53                   	push   %rbx
ffffffffc0004d03:	45 50                	rex.RB push %r8
ffffffffc0004d05:	00 20                	add    %ah,(%rax)
ffffffffc0004d07:	4d 54                	rex.WRB push %r12
ffffffffc0004d09:	52                   	push   %rdx
ffffffffc0004d0a:	52                   	push   %rdx
ffffffffc0004d0b:	00 20                	add    %ah,(%rax)
ffffffffc0004d0d:	50                   	push   %rax
ffffffffc0004d0e:	47                   	rex.RXB
ffffffffc0004d0f:	45 00 20             	add    %r12b,(%r8)
ffffffffc0004d12:	4d                   	rex.WRB
ffffffffc0004d13:	43                   	rex.XB
ffffffffc0004d14:	41 00 20             	add    %spl,(%r8)
ffffffffc0004d17:	43                   	rex.XB
ffffffffc0004d18:	4d                   	rex.WRB
ffffffffc0004d19:	4f 56                	rex.WRXB push %r14
ffffffffc0004d1b:	00 20                	add    %ah,(%rax)
ffffffffc0004d1d:	50                   	push   %rax
ffffffffc0004d1e:	41 54                	push   %r12
ffffffffc0004d20:	00 20                	add    %ah,(%rax)
ffffffffc0004d22:	50                   	push   %rax
ffffffffc0004d23:	53                   	push   %rbx
ffffffffc0004d24:	45 33 36             	xor    (%r14),%r14d
ffffffffc0004d27:	00 20                	add    %ah,(%rax)
ffffffffc0004d29:	50                   	push   %rax
ffffffffc0004d2a:	53                   	push   %rbx
ffffffffc0004d2b:	4e 00 20             	rex.WRX add %r12b,(%rax)
ffffffffc0004d2e:	43                   	rex.XB
ffffffffc0004d2f:	4c                   	rex.WR
ffffffffc0004d30:	46 00 20             	rex.RX add %r12b,(%rax)
ffffffffc0004d33:	44 54                	rex.R push %rsp
ffffffffc0004d35:	45 53                	rex.RB push %r11
ffffffffc0004d37:	00 20                	add    %ah,(%rax)
ffffffffc0004d39:	41                   	rex.B
ffffffffc0004d3a:	43 50                	rex.XB push %r8
ffffffffc0004d3c:	49 00 20             	rex.WB add %spl,(%r8)
ffffffffc0004d3f:	4d                   	rex.WRB
ffffffffc0004d40:	4d 58                	rex.WRB pop %r8
ffffffffc0004d42:	00 20                	add    %ah,(%rax)
ffffffffc0004d44:	46 58                	rex.RX pop %rax
ffffffffc0004d46:	53                   	push   %rbx
ffffffffc0004d47:	52                   	push   %rdx
ffffffffc0004d48:	00 20                	add    %ah,(%rax)
ffffffffc0004d4a:	53                   	push   %rbx
ffffffffc0004d4b:	53                   	push   %rbx
ffffffffc0004d4c:	45 00 20             	add    %r12b,(%r8)
ffffffffc0004d4f:	53                   	push   %rbx
ffffffffc0004d50:	53                   	push   %rbx
ffffffffc0004d51:	45 32 00             	xor    (%r8),%r8b
ffffffffc0004d54:	20 53 53             	and    %dl,0x53(%rbx)
ffffffffc0004d57:	00 20                	add    %ah,(%rax)
ffffffffc0004d59:	48 54                	rex.W push %rsp
ffffffffc0004d5b:	54                   	push   %rsp
ffffffffc0004d5c:	00 20                	add    %ah,(%rax)
ffffffffc0004d5e:	54                   	push   %rsp
ffffffffc0004d5f:	4d 31 00             	xor    %r8,(%r8)
ffffffffc0004d62:	20 49 41             	and    %cl,0x41(%rcx)
ffffffffc0004d65:	36 34 00             	ss xor $0x0,%al
ffffffffc0004d68:	20 50 42             	and    %dl,0x42(%rax)
ffffffffc0004d6b:	45 00 20             	add    %r12b,(%r8)
ffffffffc0004d6e:	53                   	push   %rbx
ffffffffc0004d6f:	53                   	push   %rbx
ffffffffc0004d70:	45 33 00             	xor    (%r8),%r8d
ffffffffc0004d73:	20 50 43             	and    %dl,0x43(%rax)
ffffffffc0004d76:	4c                   	rex.WR
ffffffffc0004d77:	4d 55                	rex.WRB push %r13
ffffffffc0004d79:	4c 00 20             	rex.WR add %r12b,(%rax)
ffffffffc0004d7c:	44 54                	rex.R push %rsp
ffffffffc0004d7e:	45 53                	rex.RB push %r11
ffffffffc0004d80:	36 34 00             	ss xor $0x0,%al
ffffffffc0004d83:	20 4d 4f             	and    %cl,0x4f(%rbp)
ffffffffc0004d86:	4e                   	rex.WRX
ffffffffc0004d87:	49 54                	rex.WB push %r12
ffffffffc0004d89:	4f 52                	rex.WRXB push %r10
ffffffffc0004d8b:	00 20                	add    %ah,(%rax)
ffffffffc0004d8d:	44 53                	rex.R push %rbx
ffffffffc0004d8f:	5f                   	pop    %rdi
ffffffffc0004d90:	43 50                	rex.XB push %r8
ffffffffc0004d92:	4c 00 20             	rex.WR add %r12b,(%rax)
ffffffffc0004d95:	56                   	push   %rsi
ffffffffc0004d96:	4d 58                	rex.WRB pop %r8
ffffffffc0004d98:	00 20                	add    %ah,(%rax)
ffffffffc0004d9a:	53                   	push   %rbx
ffffffffc0004d9b:	4d 58                	rex.WRB pop %r8
ffffffffc0004d9d:	00 20                	add    %ah,(%rax)
ffffffffc0004d9f:	45 53                	rex.RB push %r11
ffffffffc0004da1:	54                   	push   %rsp
ffffffffc0004da2:	00 20                	add    %ah,(%rax)
ffffffffc0004da4:	54                   	push   %rsp
ffffffffc0004da5:	4d 32 00             	rex.WRB xor (%r8),%r8b
ffffffffc0004da8:	20 53 53             	and    %dl,0x53(%rbx)
ffffffffc0004dab:	53                   	push   %rbx
ffffffffc0004dac:	45 33 00             	xor    (%r8),%r8d
ffffffffc0004daf:	20 43 49             	and    %al,0x49(%rbx)
ffffffffc0004db2:	44 00 20             	add    %r12b,(%rax)
ffffffffc0004db5:	46                   	rex.RX
ffffffffc0004db6:	4d                   	rex.WRB
ffffffffc0004db7:	41 00 20             	add    %spl,(%r8)
ffffffffc0004dba:	43 58                	rex.XB pop %r8
ffffffffc0004dbc:	31 36                	xor    %esi,(%rsi)
ffffffffc0004dbe:	00 20                	add    %ah,(%rax)
ffffffffc0004dc0:	45 54                	rex.RB push %r12
ffffffffc0004dc2:	50                   	push   %rax
ffffffffc0004dc3:	52                   	push   %rdx
ffffffffc0004dc4:	44 00 20             	add    %r12b,(%rax)
ffffffffc0004dc7:	50                   	push   %rax
ffffffffc0004dc8:	44                   	rex.R
ffffffffc0004dc9:	43                   	rex.XB
ffffffffc0004dca:	4d 00 20             	rex.WRB add %r12b,(%r8)
ffffffffc0004dcd:	50                   	push   %rax
ffffffffc0004dce:	43                   	rex.XB
ffffffffc0004dcf:	49                   	rex.WB
ffffffffc0004dd0:	44                   	rex.R
ffffffffc0004dd1:	45 00 20             	add    %r12b,(%r8)
ffffffffc0004dd4:	44                   	rex.R
ffffffffc0004dd5:	43                   	rex.XB
ffffffffc0004dd6:	41 00 20             	add    %spl,(%r8)
ffffffffc0004dd9:	53                   	push   %rbx
ffffffffc0004dda:	53                   	push   %rbx
ffffffffc0004ddb:	45 34 5f             	rex.RB xor $0x5f,%al
ffffffffc0004dde:	31 00                	xor    %eax,(%rax)
ffffffffc0004de0:	20 53 53             	and    %dl,0x53(%rbx)
ffffffffc0004de3:	45 34 5f             	rex.RB xor $0x5f,%al
ffffffffc0004de6:	32 00                	xor    (%rax),%al
ffffffffc0004de8:	20 78 32             	and    %bh,0x32(%rax)
ffffffffc0004deb:	41 50                	push   %r8
ffffffffc0004ded:	49                   	rex.WB
ffffffffc0004dee:	43 00 20             	rex.XB add %spl,(%r8)
ffffffffc0004df1:	4d                   	rex.WRB
ffffffffc0004df2:	4f 56                	rex.WRXB push %r14
ffffffffc0004df4:	42                   	rex.X
ffffffffc0004df5:	45 00 20             	add    %r12b,(%r8)
ffffffffc0004df8:	50                   	push   %rax
ffffffffc0004df9:	4f 50                	rex.WRXB push %r8
ffffffffc0004dfb:	43                   	rex.XB
ffffffffc0004dfc:	4e 54                	rex.WRX push %rsp
ffffffffc0004dfe:	00 20                	add    %ah,(%rax)
ffffffffc0004e00:	41                   	rex.B
ffffffffc0004e01:	45 53                	rex.RB push %r11
ffffffffc0004e03:	00 20                	add    %ah,(%rax)
ffffffffc0004e05:	58                   	pop    %rax
ffffffffc0004e06:	53                   	push   %rbx
ffffffffc0004e07:	41 56                	push   %r14
ffffffffc0004e09:	45 00 20             	add    %r12b,(%r8)
ffffffffc0004e0c:	4f 53                	rex.WRXB push %r11
ffffffffc0004e0e:	58                   	pop    %rax
ffffffffc0004e0f:	53                   	push   %rbx
ffffffffc0004e10:	41 56                	push   %r14
ffffffffc0004e12:	45 00 20             	add    %r12b,(%r8)
ffffffffc0004e15:	41 56                	push   %r14
ffffffffc0004e17:	58                   	pop    %rax
ffffffffc0004e18:	00 0a                	add    %cl,(%rdx)
ffffffffc0004e1a:	20 20                	and    %ah,(%rax)
ffffffffc0004e1c:	4e 61                	rex.WRX (bad) 
ffffffffc0004e1e:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0004e1f:	65 3a 20             	cmp    %gs:(%rax),%ah
ffffffffc0004e22:	25 73 0a 00 00       	and    $0xa73,%eax
ffffffffc0004e27:	00 55 6e             	add    %dl,0x6e(%rbp)
ffffffffc0004e2a:	6b 6e 6f 77          	imul   $0x77,0x6f(%rsi),%ebp
ffffffffc0004e2e:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0004e2f:	20                   	.byte 0x20

ffffffffc0004e30 <.refptr.asm_cpuid>:
ffffffffc0004e30:	50                   	push   %rax
ffffffffc0004e31:	01 00                	add    %eax,(%rax)
ffffffffc0004e33:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0004e36:	ff                   	(bad)  
ffffffffc0004e37:	ff 00                	incl   (%rax)
ffffffffc0004e39:	00 00                	add    %al,(%rax)
ffffffffc0004e3b:	00 00                	add    %al,(%rax)
ffffffffc0004e3d:	00 00                	add    %al,(%rax)
ffffffffc0004e3f:	00 25 73 3a 20 25    	add    %ah,0x25203a73(%rip)        # ffffffffe52088b8 <___KERNEL_UNMAP_END__+0x251fecd8>
ffffffffc0004e45:	75 20                	jne    ffffffffc0004e67 <.refptr.asm_halt_cpu+0x7>
ffffffffc0004e47:	28 25 73 29 3a 20    	sub    %ah,0x203a2973(%rip)        # ffffffffe03a77c0 <___KERNEL_UNMAP_END__+0x2039dbe0>
ffffffffc0004e4d:	25 73 3a 20 25       	and    $0x25203a73,%eax
ffffffffc0004e52:	73 0a                	jae    ffffffffc0004e5e <.refptr.asm_cpuid+0x2e>
	...

ffffffffc0004e60 <.refptr.asm_halt_cpu>:
ffffffffc0004e60:	70 01                	jo     ffffffffc0004e63 <.refptr.asm_halt_cpu+0x3>
ffffffffc0004e62:	00 c0                	add    %al,%al
ffffffffc0004e64:	ff                   	(bad)  
ffffffffc0004e65:	ff                   	(bad)  
ffffffffc0004e66:	ff                   	(bad)  
ffffffffc0004e67:	ff 00                	incl   (%rax)
ffffffffc0004e69:	00 00                	add    %al,(%rax)
ffffffffc0004e6b:	00 00                	add    %al,(%rax)
ffffffffc0004e6d:	00 00                	add    %al,(%rax)
ffffffffc0004e6f:	00 48 50             	add    %cl,0x50(%rax)
ffffffffc0004e72:	45 54                	rex.RB push %r12
ffffffffc0004e74:	20 42 61             	and    %al,0x61(%rdx)
ffffffffc0004e77:	73 65                	jae    ffffffffc0004ede <.refptr.asm_setup_idt+0x2e>
ffffffffc0004e79:	20 50 6f             	and    %dl,0x6f(%rax)
ffffffffc0004e7c:	69 6e 74 65 72 3a 20 	imul   $0x203a7265,0x74(%rsi),%ebp
ffffffffc0004e83:	25 70 0a 00 48       	and    $0x48000a70,%eax
ffffffffc0004e88:	50                   	push   %rax
ffffffffc0004e89:	45 54                	rex.RB push %r12
ffffffffc0004e8b:	20 50 65             	and    %dl,0x65(%rax)
ffffffffc0004e8e:	72 69                	jb     ffffffffc0004ef9 <.refptr.asm_setup_idt+0x49>
ffffffffc0004e90:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0004e91:	64 3a 20             	cmp    %fs:(%rax),%ah
ffffffffc0004e94:	25 6c 6c 75 0a       	and    $0xa756c6c,%eax
ffffffffc0004e99:	00 00                	add    %al,(%rax)
ffffffffc0004e9b:	00 00                	add    %al,(%rax)
ffffffffc0004e9d:	00 00                	add    %al,(%rax)
	...

ffffffffc0004ea0 <.refptr.regiser_irq_handler>:
ffffffffc0004ea0:	b0 07                	mov    $0x7,%al
ffffffffc0004ea2:	00 c0                	add    %al,%al
ffffffffc0004ea4:	ff                   	(bad)  
ffffffffc0004ea5:	ff                   	(bad)  
ffffffffc0004ea6:	ff                   	(bad)  
ffffffffc0004ea7:	ff 00                	incl   (%rax)
ffffffffc0004ea9:	00 00                	add    %al,(%rax)
ffffffffc0004eab:	00 00                	add    %al,(%rax)
ffffffffc0004ead:	00 00                	add    %al,(%rax)
	...

ffffffffc0004eb0 <.refptr.asm_setup_idt>:
ffffffffc0004eb0:	5f                   	pop    %rdi
ffffffffc0004eb1:	7b 00                	jnp    ffffffffc0004eb3 <.refptr.asm_setup_idt+0x3>
ffffffffc0004eb3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0004eb6:	ff                   	(bad)  
ffffffffc0004eb7:	ff 00                	incl   (%rax)
ffffffffc0004eb9:	00 00                	add    %al,(%rax)
ffffffffc0004ebb:	00 00                	add    %al,(%rax)
ffffffffc0004ebd:	00 00                	add    %al,(%rax)
ffffffffc0004ebf:	00 49 52             	add    %cl,0x52(%rcx)
ffffffffc0004ec2:	51                   	push   %rcx
ffffffffc0004ec3:	3a 0a                	cmp    (%rdx),%cl
ffffffffc0004ec5:	20 20                	and    %ah,(%rax)
ffffffffc0004ec7:	72 61                	jb     ffffffffc0004f2a <.refptr.asm_setup_idt+0x7a>
ffffffffc0004ec9:	78 20                	js     ffffffffc0004eeb <.refptr.asm_setup_idt+0x3b>
ffffffffc0004ecb:	20 20                	and    %ah,(%rax)
ffffffffc0004ecd:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee2373f3 <___KERNEL_UNMAP_END__+0x2e22d813>
ffffffffc0004ed3:	31 38                	xor    %edi,(%rax)
ffffffffc0004ed5:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004ed6:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004ed7:	78 0a                	js     ffffffffc0004ee3 <.refptr.asm_setup_idt+0x33>
ffffffffc0004ed9:	20 20                	and    %ah,(%rax)
ffffffffc0004edb:	72 62                	jb     ffffffffc0004f3f <.refptr.asm_setup_idt+0x8f>
ffffffffc0004edd:	78 20                	js     ffffffffc0004eff <.refptr.asm_setup_idt+0x4f>
ffffffffc0004edf:	20 20                	and    %ah,(%rax)
ffffffffc0004ee1:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee237407 <___KERNEL_UNMAP_END__+0x2e22d827>
ffffffffc0004ee7:	31 38                	xor    %edi,(%rax)
ffffffffc0004ee9:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004eea:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004eeb:	78 0a                	js     ffffffffc0004ef7 <.refptr.asm_setup_idt+0x47>
ffffffffc0004eed:	20 20                	and    %ah,(%rax)
ffffffffc0004eef:	72 63                	jb     ffffffffc0004f54 <.refptr.asm_setup_idt+0xa4>
ffffffffc0004ef1:	78 20                	js     ffffffffc0004f13 <.refptr.asm_setup_idt+0x63>
ffffffffc0004ef3:	20 20                	and    %ah,(%rax)
ffffffffc0004ef5:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee23741b <___KERNEL_UNMAP_END__+0x2e22d83b>
ffffffffc0004efb:	31 38                	xor    %edi,(%rax)
ffffffffc0004efd:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004efe:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004eff:	78 0a                	js     ffffffffc0004f0b <.refptr.asm_setup_idt+0x5b>
ffffffffc0004f01:	20 20                	and    %ah,(%rax)
ffffffffc0004f03:	72 64                	jb     ffffffffc0004f69 <.refptr.asm_setup_idt+0xb9>
ffffffffc0004f05:	78 20                	js     ffffffffc0004f27 <.refptr.asm_setup_idt+0x77>
ffffffffc0004f07:	20 20                	and    %ah,(%rax)
ffffffffc0004f09:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee23742f <___KERNEL_UNMAP_END__+0x2e22d84f>
ffffffffc0004f0f:	31 38                	xor    %edi,(%rax)
ffffffffc0004f11:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f12:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f13:	78 0a                	js     ffffffffc0004f1f <.refptr.asm_setup_idt+0x6f>
ffffffffc0004f15:	20 20                	and    %ah,(%rax)
ffffffffc0004f17:	72 73                	jb     ffffffffc0004f8c <.refptr.asm_setup_idt+0xdc>
ffffffffc0004f19:	69 20 20 20 20 3d    	imul   $0x3d202020,(%rax),%esp
ffffffffc0004f1f:	20 25 23 2e 31 38    	and    %ah,0x38312e23(%rip)        # fffffffff8317d48 <___KERNEL_UNMAP_END__+0x3830e168>
ffffffffc0004f25:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f26:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f27:	78 0a                	js     ffffffffc0004f33 <.refptr.asm_setup_idt+0x83>
ffffffffc0004f29:	20 20                	and    %ah,(%rax)
ffffffffc0004f2b:	72 64                	jb     ffffffffc0004f91 <.refptr.asm_setup_idt+0xe1>
ffffffffc0004f2d:	69 20 20 20 20 3d    	imul   $0x3d202020,(%rax),%esp
ffffffffc0004f33:	20 25 23 2e 31 38    	and    %ah,0x38312e23(%rip)        # fffffffff8317d5c <___KERNEL_UNMAP_END__+0x3830e17c>
ffffffffc0004f39:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f3a:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f3b:	78 0a                	js     ffffffffc0004f47 <.refptr.asm_setup_idt+0x97>
ffffffffc0004f3d:	20 20                	and    %ah,(%rax)
ffffffffc0004f3f:	72 62                	jb     ffffffffc0004fa3 <.refptr.asm_setup_idt+0xf3>
ffffffffc0004f41:	70 20                	jo     ffffffffc0004f63 <.refptr.asm_setup_idt+0xb3>
ffffffffc0004f43:	20 20                	and    %ah,(%rax)
ffffffffc0004f45:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee23746b <___KERNEL_UNMAP_END__+0x2e22d88b>
ffffffffc0004f4b:	31 38                	xor    %edi,(%rax)
ffffffffc0004f4d:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f4e:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f4f:	78 0a                	js     ffffffffc0004f5b <.refptr.asm_setup_idt+0xab>
ffffffffc0004f51:	20 20                	and    %ah,(%rax)
ffffffffc0004f53:	72 38                	jb     ffffffffc0004f8d <.refptr.asm_setup_idt+0xdd>
ffffffffc0004f55:	20 20                	and    %ah,(%rax)
ffffffffc0004f57:	20 20                	and    %ah,(%rax)
ffffffffc0004f59:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee23747f <___KERNEL_UNMAP_END__+0x2e22d89f>
ffffffffc0004f5f:	31 38                	xor    %edi,(%rax)
ffffffffc0004f61:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f62:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f63:	78 0a                	js     ffffffffc0004f6f <.refptr.asm_setup_idt+0xbf>
ffffffffc0004f65:	20 20                	and    %ah,(%rax)
ffffffffc0004f67:	72 39                	jb     ffffffffc0004fa2 <.refptr.asm_setup_idt+0xf2>
ffffffffc0004f69:	20 20                	and    %ah,(%rax)
ffffffffc0004f6b:	20 20                	and    %ah,(%rax)
ffffffffc0004f6d:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee237493 <___KERNEL_UNMAP_END__+0x2e22d8b3>
ffffffffc0004f73:	31 38                	xor    %edi,(%rax)
ffffffffc0004f75:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f76:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f77:	78 0a                	js     ffffffffc0004f83 <.refptr.asm_setup_idt+0xd3>
ffffffffc0004f79:	20 20                	and    %ah,(%rax)
ffffffffc0004f7b:	72 31                	jb     ffffffffc0004fae <.refptr.asm_setup_idt+0xfe>
ffffffffc0004f7d:	30 20                	xor    %ah,(%rax)
ffffffffc0004f7f:	20 20                	and    %ah,(%rax)
ffffffffc0004f81:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee2374a7 <___KERNEL_UNMAP_END__+0x2e22d8c7>
ffffffffc0004f87:	31 38                	xor    %edi,(%rax)
ffffffffc0004f89:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f8a:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f8b:	78 0a                	js     ffffffffc0004f97 <.refptr.asm_setup_idt+0xe7>
ffffffffc0004f8d:	20 20                	and    %ah,(%rax)
ffffffffc0004f8f:	72 31                	jb     ffffffffc0004fc2 <.refptr.asm_setup_idt+0x112>
ffffffffc0004f91:	31 20                	xor    %esp,(%rax)
ffffffffc0004f93:	20 20                	and    %ah,(%rax)
ffffffffc0004f95:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee2374bb <___KERNEL_UNMAP_END__+0x2e22d8db>
ffffffffc0004f9b:	31 38                	xor    %edi,(%rax)
ffffffffc0004f9d:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f9e:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004f9f:	78 0a                	js     ffffffffc0004fab <.refptr.asm_setup_idt+0xfb>
ffffffffc0004fa1:	20 20                	and    %ah,(%rax)
ffffffffc0004fa3:	72 31                	jb     ffffffffc0004fd6 <.refptr.asm_setup_idt+0x126>
ffffffffc0004fa5:	32 20                	xor    (%rax),%ah
ffffffffc0004fa7:	20 20                	and    %ah,(%rax)
ffffffffc0004fa9:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee2374cf <___KERNEL_UNMAP_END__+0x2e22d8ef>
ffffffffc0004faf:	31 38                	xor    %edi,(%rax)
ffffffffc0004fb1:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004fb2:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004fb3:	78 0a                	js     ffffffffc0004fbf <.refptr.asm_setup_idt+0x10f>
ffffffffc0004fb5:	20 20                	and    %ah,(%rax)
ffffffffc0004fb7:	72 31                	jb     ffffffffc0004fea <.refptr.asm_setup_idt+0x13a>
ffffffffc0004fb9:	33 20                	xor    (%rax),%esp
ffffffffc0004fbb:	20 20                	and    %ah,(%rax)
ffffffffc0004fbd:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee2374e3 <___KERNEL_UNMAP_END__+0x2e22d903>
ffffffffc0004fc3:	31 38                	xor    %edi,(%rax)
ffffffffc0004fc5:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004fc6:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004fc7:	78 0a                	js     ffffffffc0004fd3 <.refptr.asm_setup_idt+0x123>
ffffffffc0004fc9:	20 20                	and    %ah,(%rax)
ffffffffc0004fcb:	72 31                	jb     ffffffffc0004ffe <.refptr.asm_setup_idt+0x14e>
ffffffffc0004fcd:	34 20                	xor    $0x20,%al
ffffffffc0004fcf:	20 20                	and    %ah,(%rax)
ffffffffc0004fd1:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee2374f7 <___KERNEL_UNMAP_END__+0x2e22d917>
ffffffffc0004fd7:	31 38                	xor    %edi,(%rax)
ffffffffc0004fd9:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004fda:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004fdb:	78 0a                	js     ffffffffc0004fe7 <.refptr.asm_setup_idt+0x137>
ffffffffc0004fdd:	20 20                	and    %ah,(%rax)
ffffffffc0004fdf:	72 31                	jb     ffffffffc0005012 <.refptr.asm_setup_idt+0x162>
ffffffffc0004fe1:	35 20 20 20 20       	xor    $0x20202020,%eax
ffffffffc0004fe6:	3d 20 25 23 2e       	cmp    $0x2e232520,%eax
ffffffffc0004feb:	31 38                	xor    %edi,(%rax)
ffffffffc0004fed:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004fee:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0004fef:	78 0a                	js     ffffffffc0004ffb <.refptr.asm_setup_idt+0x14b>
ffffffffc0004ff1:	20 20                	and    %ah,(%rax)
ffffffffc0004ff3:	74 20                	je     ffffffffc0005015 <.refptr.asm_setup_idt+0x165>
ffffffffc0004ff5:	20 20                	and    %ah,(%rax)
ffffffffc0004ff7:	20 20                	and    %ah,(%rax)
ffffffffc0004ff9:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee23751f <___KERNEL_UNMAP_END__+0x2e22d93f>
ffffffffc0004fff:	34 6c                	xor    $0x6c,%al
ffffffffc0005001:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005002:	78 0a                	js     ffffffffc000500e <.refptr.asm_setup_idt+0x15e>
ffffffffc0005004:	20 20                	and    %ah,(%rax)
ffffffffc0005006:	65 63 20             	movslq %gs:(%rax),%esp
ffffffffc0005009:	20 20                	and    %ah,(%rax)
ffffffffc000500b:	20 20                	and    %ah,(%rax)
ffffffffc000500d:	3d 20 25 23 2e       	cmp    $0x2e232520,%eax
ffffffffc0005012:	34 6c                	xor    $0x6c,%al
ffffffffc0005014:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005015:	78 0a                	js     ffffffffc0005021 <.refptr.asm_setup_idt+0x171>
ffffffffc0005017:	20 20                	and    %ah,(%rax)
ffffffffc0005019:	72 69                	jb     ffffffffc0005084 <.refptr.asm_irq15+0x4>
ffffffffc000501b:	70 20                	jo     ffffffffc000503d <.refptr.asm_setup_idt+0x18d>
ffffffffc000501d:	20 20                	and    %ah,(%rax)
ffffffffc000501f:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee237545 <___KERNEL_UNMAP_END__+0x2e22d965>
ffffffffc0005025:	31 38                	xor    %edi,(%rax)
ffffffffc0005027:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005028:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005029:	78 0a                	js     ffffffffc0005035 <.refptr.asm_setup_idt+0x185>
ffffffffc000502b:	20 20                	and    %ah,(%rax)
ffffffffc000502d:	63 73 20             	movslq 0x20(%rbx),%esi
ffffffffc0005030:	20 20                	and    %ah,(%rax)
ffffffffc0005032:	20 20                	and    %ah,(%rax)
ffffffffc0005034:	3d 20 25 23 2e       	cmp    $0x2e232520,%eax
ffffffffc0005039:	36 6c                	ss insb (%dx),%es:(%rdi)
ffffffffc000503b:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000503c:	78 0a                	js     ffffffffc0005048 <.refptr.asm_setup_idt+0x198>
ffffffffc000503e:	20 20                	and    %ah,(%rax)
ffffffffc0005040:	72 66                	jb     ffffffffc00050a8 <.refptr.asm_irq13+0x8>
ffffffffc0005042:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005043:	61                   	(bad)  
ffffffffc0005044:	67 73 20             	addr32 jae ffffffffc0005067 <.refptr.asm_setup_idt+0x1b7>
ffffffffc0005047:	3d 20 25 23 2e       	cmp    $0x2e232520,%eax
ffffffffc000504c:	38 6c 6c 78          	cmp    %ch,0x78(%rsp,%rbp,2)
ffffffffc0005050:	0a 20                	or     (%rax),%ah
ffffffffc0005052:	20 72 73             	and    %dh,0x73(%rdx)
ffffffffc0005055:	70 20                	jo     ffffffffc0005077 <.refptr.asm_setup_idt+0x1c7>
ffffffffc0005057:	20 20                	and    %ah,(%rax)
ffffffffc0005059:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee23757f <___KERNEL_UNMAP_END__+0x2e22d99f>
ffffffffc000505f:	31 38                	xor    %edi,(%rax)
ffffffffc0005061:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005062:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005063:	78 0a                	js     ffffffffc000506f <.refptr.asm_setup_idt+0x1bf>
ffffffffc0005065:	20 20                	and    %ah,(%rax)
ffffffffc0005067:	73 73                	jae    ffffffffc00050dc <.refptr.asm_irq10+0xc>
ffffffffc0005069:	20 20                	and    %ah,(%rax)
ffffffffc000506b:	20 20                	and    %ah,(%rax)
ffffffffc000506d:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee237593 <___KERNEL_UNMAP_END__+0x2e22d9b3>
ffffffffc0005073:	36 6c                	ss insb (%dx),%es:(%rdi)
ffffffffc0005075:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005076:	78 0a                	js     ffffffffc0005082 <.refptr.asm_irq15+0x2>
	...

ffffffffc0005080 <.refptr.asm_irq15>:
ffffffffc0005080:	22 02                	and    (%rdx),%al
ffffffffc0005082:	00 c0                	add    %al,%al
ffffffffc0005084:	ff                   	(bad)  
ffffffffc0005085:	ff                   	(bad)  
ffffffffc0005086:	ff                   	(bad)  
ffffffffc0005087:	ff 00                	incl   (%rax)
ffffffffc0005089:	00 00                	add    %al,(%rax)
ffffffffc000508b:	00 00                	add    %al,(%rax)
ffffffffc000508d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005090 <.refptr.asm_irq14>:
ffffffffc0005090:	19 02                	sbb    %eax,(%rdx)
ffffffffc0005092:	00 c0                	add    %al,%al
ffffffffc0005094:	ff                   	(bad)  
ffffffffc0005095:	ff                   	(bad)  
ffffffffc0005096:	ff                   	(bad)  
ffffffffc0005097:	ff 00                	incl   (%rax)
ffffffffc0005099:	00 00                	add    %al,(%rax)
ffffffffc000509b:	00 00                	add    %al,(%rax)
ffffffffc000509d:	00 00                	add    %al,(%rax)
	...

ffffffffc00050a0 <.refptr.asm_irq13>:
ffffffffc00050a0:	10 02                	adc    %al,(%rdx)
ffffffffc00050a2:	00 c0                	add    %al,%al
ffffffffc00050a4:	ff                   	(bad)  
ffffffffc00050a5:	ff                   	(bad)  
ffffffffc00050a6:	ff                   	(bad)  
ffffffffc00050a7:	ff 00                	incl   (%rax)
ffffffffc00050a9:	00 00                	add    %al,(%rax)
ffffffffc00050ab:	00 00                	add    %al,(%rax)
ffffffffc00050ad:	00 00                	add    %al,(%rax)
	...

ffffffffc00050b0 <.refptr.asm_irq12>:
ffffffffc00050b0:	07                   	(bad)  
ffffffffc00050b1:	02 00                	add    (%rax),%al
ffffffffc00050b3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00050b6:	ff                   	(bad)  
ffffffffc00050b7:	ff 00                	incl   (%rax)
ffffffffc00050b9:	00 00                	add    %al,(%rax)
ffffffffc00050bb:	00 00                	add    %al,(%rax)
ffffffffc00050bd:	00 00                	add    %al,(%rax)
	...

ffffffffc00050c0 <.refptr.asm_irq11>:
ffffffffc00050c0:	fe 01                	incb   (%rcx)
ffffffffc00050c2:	00 c0                	add    %al,%al
ffffffffc00050c4:	ff                   	(bad)  
ffffffffc00050c5:	ff                   	(bad)  
ffffffffc00050c6:	ff                   	(bad)  
ffffffffc00050c7:	ff 00                	incl   (%rax)
ffffffffc00050c9:	00 00                	add    %al,(%rax)
ffffffffc00050cb:	00 00                	add    %al,(%rax)
ffffffffc00050cd:	00 00                	add    %al,(%rax)
	...

ffffffffc00050d0 <.refptr.asm_irq10>:
ffffffffc00050d0:	f8                   	clc    
ffffffffc00050d1:	01 00                	add    %eax,(%rax)
ffffffffc00050d3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00050d6:	ff                   	(bad)  
ffffffffc00050d7:	ff 00                	incl   (%rax)
ffffffffc00050d9:	00 00                	add    %al,(%rax)
ffffffffc00050db:	00 00                	add    %al,(%rax)
ffffffffc00050dd:	00 00                	add    %al,(%rax)
	...

ffffffffc00050e0 <.refptr.asm_irq9>:
ffffffffc00050e0:	f2 01 00             	repnz add %eax,(%rax)
ffffffffc00050e3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00050e6:	ff                   	(bad)  
ffffffffc00050e7:	ff 00                	incl   (%rax)
ffffffffc00050e9:	00 00                	add    %al,(%rax)
ffffffffc00050eb:	00 00                	add    %al,(%rax)
ffffffffc00050ed:	00 00                	add    %al,(%rax)
	...

ffffffffc00050f0 <.refptr.asm_irq8>:
ffffffffc00050f0:	ec                   	in     (%dx),%al
ffffffffc00050f1:	01 00                	add    %eax,(%rax)
ffffffffc00050f3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00050f6:	ff                   	(bad)  
ffffffffc00050f7:	ff 00                	incl   (%rax)
ffffffffc00050f9:	00 00                	add    %al,(%rax)
ffffffffc00050fb:	00 00                	add    %al,(%rax)
ffffffffc00050fd:	00 00                	add    %al,(%rax)
	...

ffffffffc0005100 <.refptr.asm_irq7>:
ffffffffc0005100:	e6 01                	out    %al,$0x1
ffffffffc0005102:	00 c0                	add    %al,%al
ffffffffc0005104:	ff                   	(bad)  
ffffffffc0005105:	ff                   	(bad)  
ffffffffc0005106:	ff                   	(bad)  
ffffffffc0005107:	ff 00                	incl   (%rax)
ffffffffc0005109:	00 00                	add    %al,(%rax)
ffffffffc000510b:	00 00                	add    %al,(%rax)
ffffffffc000510d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005110 <.refptr.asm_irq6>:
ffffffffc0005110:	e0 01                	loopne ffffffffc0005113 <.refptr.asm_irq6+0x3>
ffffffffc0005112:	00 c0                	add    %al,%al
ffffffffc0005114:	ff                   	(bad)  
ffffffffc0005115:	ff                   	(bad)  
ffffffffc0005116:	ff                   	(bad)  
ffffffffc0005117:	ff 00                	incl   (%rax)
ffffffffc0005119:	00 00                	add    %al,(%rax)
ffffffffc000511b:	00 00                	add    %al,(%rax)
ffffffffc000511d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005120 <.refptr.asm_irq5>:
ffffffffc0005120:	da 01                	fiaddl (%rcx)
ffffffffc0005122:	00 c0                	add    %al,%al
ffffffffc0005124:	ff                   	(bad)  
ffffffffc0005125:	ff                   	(bad)  
ffffffffc0005126:	ff                   	(bad)  
ffffffffc0005127:	ff 00                	incl   (%rax)
ffffffffc0005129:	00 00                	add    %al,(%rax)
ffffffffc000512b:	00 00                	add    %al,(%rax)
ffffffffc000512d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005130 <.refptr.asm_irq4>:
ffffffffc0005130:	d4                   	(bad)  
ffffffffc0005131:	01 00                	add    %eax,(%rax)
ffffffffc0005133:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005136:	ff                   	(bad)  
ffffffffc0005137:	ff 00                	incl   (%rax)
ffffffffc0005139:	00 00                	add    %al,(%rax)
ffffffffc000513b:	00 00                	add    %al,(%rax)
ffffffffc000513d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005140 <.refptr.asm_irq3>:
ffffffffc0005140:	ce                   	(bad)  
ffffffffc0005141:	01 00                	add    %eax,(%rax)
ffffffffc0005143:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005146:	ff                   	(bad)  
ffffffffc0005147:	ff 00                	incl   (%rax)
ffffffffc0005149:	00 00                	add    %al,(%rax)
ffffffffc000514b:	00 00                	add    %al,(%rax)
ffffffffc000514d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005150 <.refptr.asm_irq2>:
ffffffffc0005150:	c8 01 00 c0          	enterq $0x1,$0xc0
ffffffffc0005154:	ff                   	(bad)  
ffffffffc0005155:	ff                   	(bad)  
ffffffffc0005156:	ff                   	(bad)  
ffffffffc0005157:	ff 00                	incl   (%rax)
ffffffffc0005159:	00 00                	add    %al,(%rax)
ffffffffc000515b:	00 00                	add    %al,(%rax)
ffffffffc000515d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005160 <.refptr.asm_irq1>:
ffffffffc0005160:	c2 01 00             	retq   $0x1
ffffffffc0005163:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005166:	ff                   	(bad)  
ffffffffc0005167:	ff 00                	incl   (%rax)
ffffffffc0005169:	00 00                	add    %al,(%rax)
ffffffffc000516b:	00 00                	add    %al,(%rax)
ffffffffc000516d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005170 <.refptr.asm_irq0>:
ffffffffc0005170:	bc 01 00 c0 ff       	mov    $0xffc00001,%esp
ffffffffc0005175:	ff                   	(bad)  
ffffffffc0005176:	ff                   	(bad)  
ffffffffc0005177:	ff 00                	incl   (%rax)
ffffffffc0005179:	00 00                	add    %al,(%rax)
ffffffffc000517b:	00 00                	add    %al,(%rax)
ffffffffc000517d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005180 <.refptr.asm_port_out>:
ffffffffc0005180:	b9 03 00 c0 ff       	mov    $0xffc00003,%ecx
ffffffffc0005185:	ff                   	(bad)  
ffffffffc0005186:	ff                   	(bad)  
ffffffffc0005187:	ff 00                	incl   (%rax)
ffffffffc0005189:	00 00                	add    %al,(%rax)
ffffffffc000518b:	00 00                	add    %al,(%rax)
ffffffffc000518d:	00 00                	add    %al,(%rax)
ffffffffc000518f:	00 45 72             	add    %al,0x72(%rbp)
ffffffffc0005192:	72 6f                	jb     ffffffffc0005203 <.refptr.asm_port_out+0x83>
ffffffffc0005194:	72 3a                	jb     ffffffffc00051d0 <.refptr.asm_port_out+0x50>
ffffffffc0005196:	0a 20                	or     (%rax),%ah
ffffffffc0005198:	20 72 61             	and    %dh,0x61(%rdx)
ffffffffc000519b:	78 20                	js     ffffffffc00051bd <.refptr.asm_port_out+0x3d>
ffffffffc000519d:	20 20                	and    %ah,(%rax)
ffffffffc000519f:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee2376c5 <___KERNEL_UNMAP_END__+0x2e22dae5>
ffffffffc00051a5:	31 38                	xor    %edi,(%rax)
ffffffffc00051a7:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00051a8:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00051a9:	78 0a                	js     ffffffffc00051b5 <.refptr.asm_port_out+0x35>
ffffffffc00051ab:	20 20                	and    %ah,(%rax)
ffffffffc00051ad:	72 62                	jb     ffffffffc0005211 <.refptr.asm_port_out+0x91>
ffffffffc00051af:	78 20                	js     ffffffffc00051d1 <.refptr.asm_port_out+0x51>
ffffffffc00051b1:	20 20                	and    %ah,(%rax)
ffffffffc00051b3:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee2376d9 <___KERNEL_UNMAP_END__+0x2e22daf9>
ffffffffc00051b9:	31 38                	xor    %edi,(%rax)
ffffffffc00051bb:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00051bc:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00051bd:	78 0a                	js     ffffffffc00051c9 <.refptr.asm_port_out+0x49>
ffffffffc00051bf:	20 20                	and    %ah,(%rax)
ffffffffc00051c1:	72 63                	jb     ffffffffc0005226 <.refptr.asm_port_out+0xa6>
ffffffffc00051c3:	78 20                	js     ffffffffc00051e5 <.refptr.asm_port_out+0x65>
ffffffffc00051c5:	20 20                	and    %ah,(%rax)
ffffffffc00051c7:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee2376ed <___KERNEL_UNMAP_END__+0x2e22db0d>
ffffffffc00051cd:	31 38                	xor    %edi,(%rax)
ffffffffc00051cf:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00051d0:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00051d1:	78 0a                	js     ffffffffc00051dd <.refptr.asm_port_out+0x5d>
ffffffffc00051d3:	20 20                	and    %ah,(%rax)
ffffffffc00051d5:	72 64                	jb     ffffffffc000523b <.refptr.asm_port_out+0xbb>
ffffffffc00051d7:	78 20                	js     ffffffffc00051f9 <.refptr.asm_port_out+0x79>
ffffffffc00051d9:	20 20                	and    %ah,(%rax)
ffffffffc00051db:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee237701 <___KERNEL_UNMAP_END__+0x2e22db21>
ffffffffc00051e1:	31 38                	xor    %edi,(%rax)
ffffffffc00051e3:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00051e4:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00051e5:	78 0a                	js     ffffffffc00051f1 <.refptr.asm_port_out+0x71>
ffffffffc00051e7:	20 20                	and    %ah,(%rax)
ffffffffc00051e9:	72 73                	jb     ffffffffc000525e <.refptr.asm_port_out+0xde>
ffffffffc00051eb:	69 20 20 20 20 3d    	imul   $0x3d202020,(%rax),%esp
ffffffffc00051f1:	20 25 23 2e 31 38    	and    %ah,0x38312e23(%rip)        # fffffffff831801a <___KERNEL_UNMAP_END__+0x3830e43a>
ffffffffc00051f7:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00051f8:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00051f9:	78 0a                	js     ffffffffc0005205 <.refptr.asm_port_out+0x85>
ffffffffc00051fb:	20 20                	and    %ah,(%rax)
ffffffffc00051fd:	72 64                	jb     ffffffffc0005263 <.refptr.asm_port_out+0xe3>
ffffffffc00051ff:	69 20 20 20 20 3d    	imul   $0x3d202020,(%rax),%esp
ffffffffc0005205:	20 25 23 2e 31 38    	and    %ah,0x38312e23(%rip)        # fffffffff831802e <___KERNEL_UNMAP_END__+0x3830e44e>
ffffffffc000520b:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000520c:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000520d:	78 0a                	js     ffffffffc0005219 <.refptr.asm_port_out+0x99>
ffffffffc000520f:	20 20                	and    %ah,(%rax)
ffffffffc0005211:	72 62                	jb     ffffffffc0005275 <.refptr.asm_port_out+0xf5>
ffffffffc0005213:	70 20                	jo     ffffffffc0005235 <.refptr.asm_port_out+0xb5>
ffffffffc0005215:	20 20                	and    %ah,(%rax)
ffffffffc0005217:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee23773d <___KERNEL_UNMAP_END__+0x2e22db5d>
ffffffffc000521d:	31 38                	xor    %edi,(%rax)
ffffffffc000521f:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005220:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005221:	78 0a                	js     ffffffffc000522d <.refptr.asm_port_out+0xad>
ffffffffc0005223:	20 20                	and    %ah,(%rax)
ffffffffc0005225:	72 38                	jb     ffffffffc000525f <.refptr.asm_port_out+0xdf>
ffffffffc0005227:	20 20                	and    %ah,(%rax)
ffffffffc0005229:	20 20                	and    %ah,(%rax)
ffffffffc000522b:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee237751 <___KERNEL_UNMAP_END__+0x2e22db71>
ffffffffc0005231:	31 38                	xor    %edi,(%rax)
ffffffffc0005233:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005234:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005235:	78 0a                	js     ffffffffc0005241 <.refptr.asm_port_out+0xc1>
ffffffffc0005237:	20 20                	and    %ah,(%rax)
ffffffffc0005239:	72 39                	jb     ffffffffc0005274 <.refptr.asm_port_out+0xf4>
ffffffffc000523b:	20 20                	and    %ah,(%rax)
ffffffffc000523d:	20 20                	and    %ah,(%rax)
ffffffffc000523f:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee237765 <___KERNEL_UNMAP_END__+0x2e22db85>
ffffffffc0005245:	31 38                	xor    %edi,(%rax)
ffffffffc0005247:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005248:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005249:	78 0a                	js     ffffffffc0005255 <.refptr.asm_port_out+0xd5>
ffffffffc000524b:	20 20                	and    %ah,(%rax)
ffffffffc000524d:	72 31                	jb     ffffffffc0005280 <.refptr.asm_port_out+0x100>
ffffffffc000524f:	30 20                	xor    %ah,(%rax)
ffffffffc0005251:	20 20                	and    %ah,(%rax)
ffffffffc0005253:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee237779 <___KERNEL_UNMAP_END__+0x2e22db99>
ffffffffc0005259:	31 38                	xor    %edi,(%rax)
ffffffffc000525b:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000525c:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000525d:	78 0a                	js     ffffffffc0005269 <.refptr.asm_port_out+0xe9>
ffffffffc000525f:	20 20                	and    %ah,(%rax)
ffffffffc0005261:	72 31                	jb     ffffffffc0005294 <.refptr.asm_port_out+0x114>
ffffffffc0005263:	31 20                	xor    %esp,(%rax)
ffffffffc0005265:	20 20                	and    %ah,(%rax)
ffffffffc0005267:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee23778d <___KERNEL_UNMAP_END__+0x2e22dbad>
ffffffffc000526d:	31 38                	xor    %edi,(%rax)
ffffffffc000526f:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005270:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005271:	78 0a                	js     ffffffffc000527d <.refptr.asm_port_out+0xfd>
ffffffffc0005273:	20 20                	and    %ah,(%rax)
ffffffffc0005275:	72 31                	jb     ffffffffc00052a8 <.refptr.asm_port_out+0x128>
ffffffffc0005277:	32 20                	xor    (%rax),%ah
ffffffffc0005279:	20 20                	and    %ah,(%rax)
ffffffffc000527b:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee2377a1 <___KERNEL_UNMAP_END__+0x2e22dbc1>
ffffffffc0005281:	31 38                	xor    %edi,(%rax)
ffffffffc0005283:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005284:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005285:	78 0a                	js     ffffffffc0005291 <.refptr.asm_port_out+0x111>
ffffffffc0005287:	20 20                	and    %ah,(%rax)
ffffffffc0005289:	72 31                	jb     ffffffffc00052bc <.refptr.asm_port_out+0x13c>
ffffffffc000528b:	33 20                	xor    (%rax),%esp
ffffffffc000528d:	20 20                	and    %ah,(%rax)
ffffffffc000528f:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee2377b5 <___KERNEL_UNMAP_END__+0x2e22dbd5>
ffffffffc0005295:	31 38                	xor    %edi,(%rax)
ffffffffc0005297:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005298:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005299:	78 0a                	js     ffffffffc00052a5 <.refptr.asm_port_out+0x125>
ffffffffc000529b:	20 20                	and    %ah,(%rax)
ffffffffc000529d:	72 31                	jb     ffffffffc00052d0 <.refptr.asm_port_out+0x150>
ffffffffc000529f:	34 20                	xor    $0x20,%al
ffffffffc00052a1:	20 20                	and    %ah,(%rax)
ffffffffc00052a3:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee2377c9 <___KERNEL_UNMAP_END__+0x2e22dbe9>
ffffffffc00052a9:	31 38                	xor    %edi,(%rax)
ffffffffc00052ab:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00052ac:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00052ad:	78 0a                	js     ffffffffc00052b9 <.refptr.asm_port_out+0x139>
ffffffffc00052af:	20 20                	and    %ah,(%rax)
ffffffffc00052b1:	72 31                	jb     ffffffffc00052e4 <.refptr.asm_port_out+0x164>
ffffffffc00052b3:	35 20 20 20 20       	xor    $0x20202020,%eax
ffffffffc00052b8:	3d 20 25 23 2e       	cmp    $0x2e232520,%eax
ffffffffc00052bd:	31 38                	xor    %edi,(%rax)
ffffffffc00052bf:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00052c0:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00052c1:	78 0a                	js     ffffffffc00052cd <.refptr.asm_port_out+0x14d>
ffffffffc00052c3:	20 20                	and    %ah,(%rax)
ffffffffc00052c5:	74 20                	je     ffffffffc00052e7 <.refptr.asm_port_out+0x167>
ffffffffc00052c7:	20 20                	and    %ah,(%rax)
ffffffffc00052c9:	20 20                	and    %ah,(%rax)
ffffffffc00052cb:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee2377f1 <___KERNEL_UNMAP_END__+0x2e22dc11>
ffffffffc00052d1:	34 6c                	xor    $0x6c,%al
ffffffffc00052d3:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00052d4:	78 20                	js     ffffffffc00052f6 <.refptr.asm_port_out+0x176>
ffffffffc00052d6:	28 25 73 29 0a 20    	sub    %ah,0x200a2973(%rip)        # ffffffffe00a7c4f <___KERNEL_UNMAP_END__+0x2009e06f>
ffffffffc00052dc:	20 65 63             	and    %ah,0x63(%rbp)
ffffffffc00052df:	20 20                	and    %ah,(%rax)
ffffffffc00052e1:	20 20                	and    %ah,(%rax)
ffffffffc00052e3:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee237809 <___KERNEL_UNMAP_END__+0x2e22dc29>
ffffffffc00052e9:	34 6c                	xor    $0x6c,%al
ffffffffc00052eb:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00052ec:	78 0a                	js     ffffffffc00052f8 <.refptr.asm_port_out+0x178>
ffffffffc00052ee:	20 20                	and    %ah,(%rax)
ffffffffc00052f0:	72 69                	jb     ffffffffc000535b <.refptr.asm_port_out+0x1db>
ffffffffc00052f2:	70 20                	jo     ffffffffc0005314 <.refptr.asm_port_out+0x194>
ffffffffc00052f4:	20 20                	and    %ah,(%rax)
ffffffffc00052f6:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee23781c <___KERNEL_UNMAP_END__+0x2e22dc3c>
ffffffffc00052fc:	31 38                	xor    %edi,(%rax)
ffffffffc00052fe:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00052ff:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005300:	78 0a                	js     ffffffffc000530c <.refptr.asm_port_out+0x18c>
ffffffffc0005302:	20 20                	and    %ah,(%rax)
ffffffffc0005304:	63 73 20             	movslq 0x20(%rbx),%esi
ffffffffc0005307:	20 20                	and    %ah,(%rax)
ffffffffc0005309:	20 20                	and    %ah,(%rax)
ffffffffc000530b:	3d 20 25 23 2e       	cmp    $0x2e232520,%eax
ffffffffc0005310:	36 6c                	ss insb (%dx),%es:(%rdi)
ffffffffc0005312:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005313:	78 0a                	js     ffffffffc000531f <.refptr.asm_port_out+0x19f>
ffffffffc0005315:	20 20                	and    %ah,(%rax)
ffffffffc0005317:	72 66                	jb     ffffffffc000537f <.refptr.asm_port_out+0x1ff>
ffffffffc0005319:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000531a:	61                   	(bad)  
ffffffffc000531b:	67 73 20             	addr32 jae ffffffffc000533e <.refptr.asm_port_out+0x1be>
ffffffffc000531e:	3d 20 25 23 2e       	cmp    $0x2e232520,%eax
ffffffffc0005323:	38 6c 6c 78          	cmp    %ch,0x78(%rsp,%rbp,2)
ffffffffc0005327:	0a 20                	or     (%rax),%ah
ffffffffc0005329:	20 72 73             	and    %dh,0x73(%rdx)
ffffffffc000532c:	70 20                	jo     ffffffffc000534e <.refptr.asm_port_out+0x1ce>
ffffffffc000532e:	20 20                	and    %ah,(%rax)
ffffffffc0005330:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee237856 <___KERNEL_UNMAP_END__+0x2e22dc76>
ffffffffc0005336:	31 38                	xor    %edi,(%rax)
ffffffffc0005338:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005339:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000533a:	78 0a                	js     ffffffffc0005346 <.refptr.asm_port_out+0x1c6>
ffffffffc000533c:	20 20                	and    %ah,(%rax)
ffffffffc000533e:	73 73                	jae    ffffffffc00053b3 <.refptr.asm_port_out+0x233>
ffffffffc0005340:	20 20                	and    %ah,(%rax)
ffffffffc0005342:	20 20                	and    %ah,(%rax)
ffffffffc0005344:	20 3d 20 25 23 2e    	and    %bh,0x2e232520(%rip)        # ffffffffee23786a <___KERNEL_UNMAP_END__+0x2e22dc8a>
ffffffffc000534a:	36 6c                	ss insb (%dx),%es:(%rdi)
ffffffffc000534c:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000534d:	78 0a                	js     ffffffffc0005359 <.refptr.asm_port_out+0x1d9>
ffffffffc000534f:	20 20                	and    %ah,(%rax)
ffffffffc0005351:	63 72 30             	movslq 0x30(%rdx),%esi
ffffffffc0005354:	20 20                	and    %ah,(%rax)
ffffffffc0005356:	20 20                	and    %ah,(%rax)
ffffffffc0005358:	3d 20 25 23 2e       	cmp    $0x2e232520,%eax
ffffffffc000535d:	31 38                	xor    %edi,(%rax)
ffffffffc000535f:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005360:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005361:	78 0a                	js     ffffffffc000536d <.refptr.asm_port_out+0x1ed>
ffffffffc0005363:	20 20                	and    %ah,(%rax)
ffffffffc0005365:	63 72 32             	movslq 0x32(%rdx),%esi
ffffffffc0005368:	20 20                	and    %ah,(%rax)
ffffffffc000536a:	20 20                	and    %ah,(%rax)
ffffffffc000536c:	3d 20 25 23 2e       	cmp    $0x2e232520,%eax
ffffffffc0005371:	31 38                	xor    %edi,(%rax)
ffffffffc0005373:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005374:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005375:	78 0a                	js     ffffffffc0005381 <.refptr.asm_port_out+0x201>
ffffffffc0005377:	20 20                	and    %ah,(%rax)
ffffffffc0005379:	63 72 33             	movslq 0x33(%rdx),%esi
ffffffffc000537c:	20 20                	and    %ah,(%rax)
ffffffffc000537e:	20 20                	and    %ah,(%rax)
ffffffffc0005380:	3d 20 25 23 2e       	cmp    $0x2e232520,%eax
ffffffffc0005385:	31 38                	xor    %edi,(%rax)
ffffffffc0005387:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005388:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005389:	78 0a                	js     ffffffffc0005395 <.refptr.asm_port_out+0x215>
ffffffffc000538b:	20 20                	and    %ah,(%rax)
ffffffffc000538d:	63 72 34             	movslq 0x34(%rdx),%esi
ffffffffc0005390:	20 20                	and    %ah,(%rax)
ffffffffc0005392:	20 20                	and    %ah,(%rax)
ffffffffc0005394:	3d 20 25 23 2e       	cmp    $0x2e232520,%eax
ffffffffc0005399:	31 38                	xor    %edi,(%rax)
ffffffffc000539b:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000539c:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000539d:	78 0a                	js     ffffffffc00053a9 <.refptr.asm_port_out+0x229>
ffffffffc000539f:	20 20                	and    %ah,(%rax)
ffffffffc00053a1:	63 72 38             	movslq 0x38(%rdx),%esi
ffffffffc00053a4:	20 20                	and    %ah,(%rax)
ffffffffc00053a6:	20 20                	and    %ah,(%rax)
ffffffffc00053a8:	3d 20 25 23 2e       	cmp    $0x2e232520,%eax
ffffffffc00053ad:	31 38                	xor    %edi,(%rax)
ffffffffc00053af:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00053b0:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00053b1:	78 0a                	js     ffffffffc00053bd <.refptr.asm_port_out+0x23d>
ffffffffc00053b3:	00 44 69 76          	add    %al,0x76(%rcx,%rbp,2)
ffffffffc00053b7:	69 64 65 2d 62 79 2d 	imul   $0x7a2d7962,0x2d(%rbp,%riz,2),%esp
ffffffffc00053be:	7a 
ffffffffc00053bf:	65 72 6f             	gs jb  ffffffffc0005431 <.refptr.asm_port_out+0x2b1>
ffffffffc00053c2:	20 45 72             	and    %al,0x72(%rbp)
ffffffffc00053c5:	72 6f                	jb     ffffffffc0005436 <.refptr.asm_port_out+0x2b6>
ffffffffc00053c7:	72 00                	jb     ffffffffc00053c9 <.refptr.asm_port_out+0x249>
ffffffffc00053c9:	44                   	rex.R
ffffffffc00053ca:	65 62                	gs (bad) 
ffffffffc00053cc:	75 67                	jne    ffffffffc0005435 <.refptr.asm_port_out+0x2b5>
ffffffffc00053ce:	00 4e 6f             	add    %cl,0x6f(%rsi)
ffffffffc00053d1:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00053d2:	2d 6d 61 73 6b       	sub    $0x6b73616d,%eax
ffffffffc00053d7:	61                   	(bad)  
ffffffffc00053d8:	62                   	(bad)  
ffffffffc00053d9:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00053da:	65 20 49 6e          	and    %cl,%gs:0x6e(%rcx)
ffffffffc00053de:	74 65                	je     ffffffffc0005445 <.refptr.asm_port_out+0x2c5>
ffffffffc00053e0:	72 72                	jb     ffffffffc0005454 <.refptr.asm_port_out+0x2d4>
ffffffffc00053e2:	75 70                	jne    ffffffffc0005454 <.refptr.asm_port_out+0x2d4>
ffffffffc00053e4:	74 00                	je     ffffffffc00053e6 <.refptr.asm_port_out+0x266>
ffffffffc00053e6:	42 72 65             	rex.X jb ffffffffc000544e <.refptr.asm_port_out+0x2ce>
ffffffffc00053e9:	61                   	(bad)  
ffffffffc00053ea:	6b 70 6f 69          	imul   $0x69,0x6f(%rax),%esi
ffffffffc00053ee:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00053ef:	74 00                	je     ffffffffc00053f1 <.refptr.asm_port_out+0x271>
ffffffffc00053f1:	4f 76 65             	rex.WRXB jbe ffffffffc0005459 <.refptr.asm_port_out+0x2d9>
ffffffffc00053f4:	72 66                	jb     ffffffffc000545c <.refptr.asm_port_out+0x2dc>
ffffffffc00053f6:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00053f7:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00053f8:	77 00                	ja     ffffffffc00053fa <.refptr.asm_port_out+0x27a>
ffffffffc00053fa:	42 6f                	rex.X outsl %ds:(%rsi),(%dx)
ffffffffc00053fc:	75 6e                	jne    ffffffffc000546c <.refptr.asm_port_out+0x2ec>
ffffffffc00053fe:	64 20 52 61          	and    %dl,%fs:0x61(%rdx)
ffffffffc0005402:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005403:	67 65 20 45 78       	and    %al,%gs:0x78(%ebp)
ffffffffc0005408:	63 65 65             	movslq 0x65(%rbp),%esp
ffffffffc000540b:	64 65 64 00 49 6e    	fs gs add %cl,%fs:0x6e(%rcx)
ffffffffc0005411:	76 61                	jbe    ffffffffc0005474 <.refptr.asm_port_out+0x2f4>
ffffffffc0005413:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005414:	69 64 20 4f 70 63 6f 	imul   $0x646f6370,0x4f(%rax,%riz,1),%esp
ffffffffc000541b:	64 
ffffffffc000541c:	65 00 44 65 76       	add    %al,%gs:0x76(%rbp,%riz,2)
ffffffffc0005421:	69 63 65 20 4e 6f 74 	imul   $0x746f4e20,0x65(%rbx),%esp
ffffffffc0005428:	20 41 76             	and    %al,0x76(%rcx)
ffffffffc000542b:	61                   	(bad)  
ffffffffc000542c:	69 6c 61 62 6c 65 00 	imul   $0x4400656c,0x62(%rcx,%riz,2),%ebp
ffffffffc0005433:	44 
ffffffffc0005434:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005435:	75 62                	jne    ffffffffc0005499 <.refptr.asm_port_out+0x319>
ffffffffc0005437:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005438:	65 20 46 61          	and    %al,%gs:0x61(%rsi)
ffffffffc000543c:	75 6c                	jne    ffffffffc00054aa <.refptr.asm_port_out+0x32a>
ffffffffc000543e:	74 00                	je     ffffffffc0005440 <.refptr.asm_port_out+0x2c0>
ffffffffc0005440:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
ffffffffc0005442:	70 72                	jo     ffffffffc00054b6 <.refptr.asm_port_out+0x336>
ffffffffc0005444:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005445:	63 65 73             	movslq 0x73(%rbp),%esp
ffffffffc0005448:	73 6f                	jae    ffffffffc00054b9 <.refptr.asm_port_out+0x339>
ffffffffc000544a:	72 20                	jb     ffffffffc000546c <.refptr.asm_port_out+0x2ec>
ffffffffc000544c:	53                   	push   %rbx
ffffffffc000544d:	65 67 6d             	gs insl (%dx),%es:(%edi)
ffffffffc0005450:	65 6e                	outsb  %gs:(%rsi),(%dx)
ffffffffc0005452:	74 20                	je     ffffffffc0005474 <.refptr.asm_port_out+0x2f4>
ffffffffc0005454:	4f 76 65             	rex.WRXB jbe ffffffffc00054bc <.refptr.asm_port_out+0x33c>
ffffffffc0005457:	72 72                	jb     ffffffffc00054cb <.refptr.asm_port_out+0x34b>
ffffffffc0005459:	75 6e                	jne    ffffffffc00054c9 <.refptr.asm_port_out+0x349>
ffffffffc000545b:	00 49 6e             	add    %cl,0x6e(%rcx)
ffffffffc000545e:	76 61                	jbe    ffffffffc00054c1 <.refptr.asm_port_out+0x341>
ffffffffc0005460:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005461:	69 64 20 54 53 53 00 	imul   $0x53005353,0x54(%rax,%riz,1),%esp
ffffffffc0005468:	53 
ffffffffc0005469:	65 67 6d             	gs insl (%dx),%es:(%edi)
ffffffffc000546c:	65 6e                	outsb  %gs:(%rsi),(%dx)
ffffffffc000546e:	74 20                	je     ffffffffc0005490 <.refptr.asm_port_out+0x310>
ffffffffc0005470:	4e 6f                	rex.WRX outsl %ds:(%rsi),(%dx)
ffffffffc0005472:	74 20                	je     ffffffffc0005494 <.refptr.asm_port_out+0x314>
ffffffffc0005474:	50                   	push   %rax
ffffffffc0005475:	72 65                	jb     ffffffffc00054dc <.refptr.asm_port_out+0x35c>
ffffffffc0005477:	73 65                	jae    ffffffffc00054de <.refptr.asm_port_out+0x35e>
ffffffffc0005479:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc000547a:	74 00                	je     ffffffffc000547c <.refptr.asm_port_out+0x2fc>
ffffffffc000547c:	53                   	push   %rbx
ffffffffc000547d:	74 61                	je     ffffffffc00054e0 <.refptr.asm_port_out+0x360>
ffffffffc000547f:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
ffffffffc0005482:	53                   	push   %rbx
ffffffffc0005483:	65 67 6d             	gs insl (%dx),%es:(%edi)
ffffffffc0005486:	65 6e                	outsb  %gs:(%rsi),(%dx)
ffffffffc0005488:	74 20                	je     ffffffffc00054aa <.refptr.asm_port_out+0x32a>
ffffffffc000548a:	46 61                	rex.RX (bad) 
ffffffffc000548c:	75 6c                	jne    ffffffffc00054fa <.refptr.asm_port_out+0x37a>
ffffffffc000548e:	74 00                	je     ffffffffc0005490 <.refptr.asm_port_out+0x310>
ffffffffc0005490:	47                   	rex.RXB
ffffffffc0005491:	65 6e                	outsb  %gs:(%rsi),(%dx)
ffffffffc0005493:	65 72 61             	gs jb  ffffffffc00054f7 <.refptr.asm_port_out+0x377>
ffffffffc0005496:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005497:	20 50 72             	and    %dl,0x72(%rax)
ffffffffc000549a:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc000549b:	74 65                	je     ffffffffc0005502 <.refptr.asm_port_out+0x382>
ffffffffc000549d:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
ffffffffc00054a1:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00054a2:	20 46 61             	and    %al,0x61(%rsi)
ffffffffc00054a5:	75 6c                	jne    ffffffffc0005513 <.refptr.asm_port_out+0x393>
ffffffffc00054a7:	74 00                	je     ffffffffc00054a9 <.refptr.asm_port_out+0x329>
ffffffffc00054a9:	50                   	push   %rax
ffffffffc00054aa:	61                   	(bad)  
ffffffffc00054ab:	67 65 20 46 61       	and    %al,%gs:0x61(%esi)
ffffffffc00054b0:	75 6c                	jne    ffffffffc000551e <.refptr.asm_port_out+0x39e>
ffffffffc00054b2:	74 00                	je     ffffffffc00054b4 <.refptr.asm_port_out+0x334>
ffffffffc00054b4:	52                   	push   %rdx
ffffffffc00054b5:	65 73 65             	gs jae ffffffffc000551d <.refptr.asm_port_out+0x39d>
ffffffffc00054b8:	72 76                	jb     ffffffffc0005530 <.refptr.asm_port_out+0x3b0>
ffffffffc00054ba:	65 64 00 78 38       	gs add %bh,%fs:0x38(%rax)
ffffffffc00054bf:	37                   	(bad)  
ffffffffc00054c0:	20 46 6c             	and    %al,0x6c(%rsi)
ffffffffc00054c3:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00054c4:	61                   	(bad)  
ffffffffc00054c5:	74 69                	je     ffffffffc0005530 <.refptr.asm_port_out+0x3b0>
ffffffffc00054c7:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00054c8:	67 2d 50 6f 69 6e    	addr32 sub $0x6e696f50,%eax
ffffffffc00054ce:	74 20                	je     ffffffffc00054f0 <.refptr.asm_port_out+0x370>
ffffffffc00054d0:	45 78 63             	rex.RB js ffffffffc0005536 <.refptr.asm_port_out+0x3b6>
ffffffffc00054d3:	65 70 74             	gs jo  ffffffffc000554a <.refptr.asm_port_out+0x3ca>
ffffffffc00054d6:	69 6f 6e 00 41 6c 69 	imul   $0x696c4100,0x6e(%rdi),%ebp
ffffffffc00054dd:	67 6e                	outsb  %ds:(%esi),(%dx)
ffffffffc00054df:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc00054e0:	65 6e                	outsb  %gs:(%rsi),(%dx)
ffffffffc00054e2:	74 20                	je     ffffffffc0005504 <.refptr.asm_port_out+0x384>
ffffffffc00054e4:	43 68 65 63 6b 00    	rex.XB pushq $0x6b6365
ffffffffc00054ea:	4d 61                	rex.WRB (bad) 
ffffffffc00054ec:	63 68 69             	movslq 0x69(%rax),%ebp
ffffffffc00054ef:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00054f0:	65 20 43 68          	and    %al,%gs:0x68(%rbx)
ffffffffc00054f4:	65 63 6b 00          	movslq %gs:0x0(%rbx),%ebp
ffffffffc00054f8:	53                   	push   %rbx
ffffffffc00054f9:	49                   	rex.WB
ffffffffc00054fa:	4d                   	rex.WRB
ffffffffc00054fb:	44 20 46 6c          	and    %r8b,0x6c(%rsi)
ffffffffc00054ff:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005500:	61                   	(bad)  
ffffffffc0005501:	74 69                	je     ffffffffc000556c <.refptr.asm_isr30+0xc>
ffffffffc0005503:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005504:	67 2d 50 6f 69 6e    	addr32 sub $0x6e696f50,%eax
ffffffffc000550a:	74 20                	je     ffffffffc000552c <.refptr.asm_port_out+0x3ac>
ffffffffc000550c:	45 78 63             	rex.RB js ffffffffc0005572 <.refptr.asm_isr29+0x2>
ffffffffc000550f:	65 70 74             	gs jo  ffffffffc0005586 <.refptr.asm_isr28+0x6>
ffffffffc0005512:	69 6f 6e 00 56 69 72 	imul   $0x72695600,0x6e(%rdi),%ebp
ffffffffc0005519:	74 75                	je     ffffffffc0005590 <.refptr.asm_isr27>
ffffffffc000551b:	61                   	(bad)  
ffffffffc000551c:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000551d:	69 7a 61 74 69 6f 6e 	imul   $0x6e6f6974,0x61(%rdx),%edi
ffffffffc0005524:	20 45 78             	and    %al,0x78(%rbp)
ffffffffc0005527:	63 65 70             	movslq 0x70(%rbp),%esp
ffffffffc000552a:	74 69                	je     ffffffffc0005595 <.refptr.asm_isr27+0x5>
ffffffffc000552c:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc000552d:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc000552e:	00 53 65             	add    %dl,0x65(%rbx)
ffffffffc0005531:	63 75 72             	movslq 0x72(%rbp),%esi
ffffffffc0005534:	69 74 79 20 45 78 63 	imul   $0x65637845,0x20(%rcx,%rdi,2),%esi
ffffffffc000553b:	65 
ffffffffc000553c:	70 74                	jo     ffffffffc00055b2 <.refptr.asm_isr25+0x2>
ffffffffc000553e:	69 6f 6e 00 00 00 00 	imul   $0x0,0x6e(%rdi),%ebp
	...

ffffffffc0005550 <.refptr.asm_isr31>:
ffffffffc0005550:	53                   	push   %rbx
ffffffffc0005551:	03 00                	add    (%rax),%eax
ffffffffc0005553:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005556:	ff                   	(bad)  
ffffffffc0005557:	ff 00                	incl   (%rax)
ffffffffc0005559:	00 00                	add    %al,(%rax)
ffffffffc000555b:	00 00                	add    %al,(%rax)
ffffffffc000555d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005560 <.refptr.asm_isr30>:
ffffffffc0005560:	4a 03 00             	rex.WX add (%rax),%rax
ffffffffc0005563:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005566:	ff                   	(bad)  
ffffffffc0005567:	ff 00                	incl   (%rax)
ffffffffc0005569:	00 00                	add    %al,(%rax)
ffffffffc000556b:	00 00                	add    %al,(%rax)
ffffffffc000556d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005570 <.refptr.asm_isr29>:
ffffffffc0005570:	41 03 00             	add    (%r8),%eax
ffffffffc0005573:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005576:	ff                   	(bad)  
ffffffffc0005577:	ff 00                	incl   (%rax)
ffffffffc0005579:	00 00                	add    %al,(%rax)
ffffffffc000557b:	00 00                	add    %al,(%rax)
ffffffffc000557d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005580 <.refptr.asm_isr28>:
ffffffffc0005580:	38 03                	cmp    %al,(%rbx)
ffffffffc0005582:	00 c0                	add    %al,%al
ffffffffc0005584:	ff                   	(bad)  
ffffffffc0005585:	ff                   	(bad)  
ffffffffc0005586:	ff                   	(bad)  
ffffffffc0005587:	ff 00                	incl   (%rax)
ffffffffc0005589:	00 00                	add    %al,(%rax)
ffffffffc000558b:	00 00                	add    %al,(%rax)
ffffffffc000558d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005590 <.refptr.asm_isr27>:
ffffffffc0005590:	2f                   	(bad)  
ffffffffc0005591:	03 00                	add    (%rax),%eax
ffffffffc0005593:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005596:	ff                   	(bad)  
ffffffffc0005597:	ff 00                	incl   (%rax)
ffffffffc0005599:	00 00                	add    %al,(%rax)
ffffffffc000559b:	00 00                	add    %al,(%rax)
ffffffffc000559d:	00 00                	add    %al,(%rax)
	...

ffffffffc00055a0 <.refptr.asm_isr26>:
ffffffffc00055a0:	26 03 00             	add    %es:(%rax),%eax
ffffffffc00055a3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00055a6:	ff                   	(bad)  
ffffffffc00055a7:	ff 00                	incl   (%rax)
ffffffffc00055a9:	00 00                	add    %al,(%rax)
ffffffffc00055ab:	00 00                	add    %al,(%rax)
ffffffffc00055ad:	00 00                	add    %al,(%rax)
	...

ffffffffc00055b0 <.refptr.asm_isr25>:
ffffffffc00055b0:	1d 03 00 c0 ff       	sbb    $0xffc00003,%eax
ffffffffc00055b5:	ff                   	(bad)  
ffffffffc00055b6:	ff                   	(bad)  
ffffffffc00055b7:	ff 00                	incl   (%rax)
ffffffffc00055b9:	00 00                	add    %al,(%rax)
ffffffffc00055bb:	00 00                	add    %al,(%rax)
ffffffffc00055bd:	00 00                	add    %al,(%rax)
	...

ffffffffc00055c0 <.refptr.asm_isr24>:
ffffffffc00055c0:	14 03                	adc    $0x3,%al
ffffffffc00055c2:	00 c0                	add    %al,%al
ffffffffc00055c4:	ff                   	(bad)  
ffffffffc00055c5:	ff                   	(bad)  
ffffffffc00055c6:	ff                   	(bad)  
ffffffffc00055c7:	ff 00                	incl   (%rax)
ffffffffc00055c9:	00 00                	add    %al,(%rax)
ffffffffc00055cb:	00 00                	add    %al,(%rax)
ffffffffc00055cd:	00 00                	add    %al,(%rax)
	...

ffffffffc00055d0 <.refptr.asm_isr23>:
ffffffffc00055d0:	0b 03                	or     (%rbx),%eax
ffffffffc00055d2:	00 c0                	add    %al,%al
ffffffffc00055d4:	ff                   	(bad)  
ffffffffc00055d5:	ff                   	(bad)  
ffffffffc00055d6:	ff                   	(bad)  
ffffffffc00055d7:	ff 00                	incl   (%rax)
ffffffffc00055d9:	00 00                	add    %al,(%rax)
ffffffffc00055db:	00 00                	add    %al,(%rax)
ffffffffc00055dd:	00 00                	add    %al,(%rax)
	...

ffffffffc00055e0 <.refptr.asm_isr22>:
ffffffffc00055e0:	02 03                	add    (%rbx),%al
ffffffffc00055e2:	00 c0                	add    %al,%al
ffffffffc00055e4:	ff                   	(bad)  
ffffffffc00055e5:	ff                   	(bad)  
ffffffffc00055e6:	ff                   	(bad)  
ffffffffc00055e7:	ff 00                	incl   (%rax)
ffffffffc00055e9:	00 00                	add    %al,(%rax)
ffffffffc00055eb:	00 00                	add    %al,(%rax)
ffffffffc00055ed:	00 00                	add    %al,(%rax)
	...

ffffffffc00055f0 <.refptr.asm_isr21>:
ffffffffc00055f0:	f9                   	stc    
ffffffffc00055f1:	02 00                	add    (%rax),%al
ffffffffc00055f3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00055f6:	ff                   	(bad)  
ffffffffc00055f7:	ff 00                	incl   (%rax)
ffffffffc00055f9:	00 00                	add    %al,(%rax)
ffffffffc00055fb:	00 00                	add    %al,(%rax)
ffffffffc00055fd:	00 00                	add    %al,(%rax)
	...

ffffffffc0005600 <.refptr.asm_isr20>:
ffffffffc0005600:	f0 02 00             	lock add (%rax),%al
ffffffffc0005603:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005606:	ff                   	(bad)  
ffffffffc0005607:	ff 00                	incl   (%rax)
ffffffffc0005609:	00 00                	add    %al,(%rax)
ffffffffc000560b:	00 00                	add    %al,(%rax)
ffffffffc000560d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005610 <.refptr.asm_isr19>:
ffffffffc0005610:	e7 02                	out    %eax,$0x2
ffffffffc0005612:	00 c0                	add    %al,%al
ffffffffc0005614:	ff                   	(bad)  
ffffffffc0005615:	ff                   	(bad)  
ffffffffc0005616:	ff                   	(bad)  
ffffffffc0005617:	ff 00                	incl   (%rax)
ffffffffc0005619:	00 00                	add    %al,(%rax)
ffffffffc000561b:	00 00                	add    %al,(%rax)
ffffffffc000561d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005620 <.refptr.asm_isr18>:
ffffffffc0005620:	de 02                	fiadds (%rdx)
ffffffffc0005622:	00 c0                	add    %al,%al
ffffffffc0005624:	ff                   	(bad)  
ffffffffc0005625:	ff                   	(bad)  
ffffffffc0005626:	ff                   	(bad)  
ffffffffc0005627:	ff 00                	incl   (%rax)
ffffffffc0005629:	00 00                	add    %al,(%rax)
ffffffffc000562b:	00 00                	add    %al,(%rax)
ffffffffc000562d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005630 <.refptr.asm_isr17>:
ffffffffc0005630:	d5                   	(bad)  
ffffffffc0005631:	02 00                	add    (%rax),%al
ffffffffc0005633:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005636:	ff                   	(bad)  
ffffffffc0005637:	ff 00                	incl   (%rax)
ffffffffc0005639:	00 00                	add    %al,(%rax)
ffffffffc000563b:	00 00                	add    %al,(%rax)
ffffffffc000563d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005640 <.refptr.asm_isr16>:
ffffffffc0005640:	cc                   	int3   
ffffffffc0005641:	02 00                	add    (%rax),%al
ffffffffc0005643:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005646:	ff                   	(bad)  
ffffffffc0005647:	ff 00                	incl   (%rax)
ffffffffc0005649:	00 00                	add    %al,(%rax)
ffffffffc000564b:	00 00                	add    %al,(%rax)
ffffffffc000564d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005650 <.refptr.asm_isr15>:
ffffffffc0005650:	c3                   	retq   
ffffffffc0005651:	02 00                	add    (%rax),%al
ffffffffc0005653:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005656:	ff                   	(bad)  
ffffffffc0005657:	ff 00                	incl   (%rax)
ffffffffc0005659:	00 00                	add    %al,(%rax)
ffffffffc000565b:	00 00                	add    %al,(%rax)
ffffffffc000565d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005660 <.refptr.asm_isr14>:
ffffffffc0005660:	bc 02 00 c0 ff       	mov    $0xffc00002,%esp
ffffffffc0005665:	ff                   	(bad)  
ffffffffc0005666:	ff                   	(bad)  
ffffffffc0005667:	ff 00                	incl   (%rax)
ffffffffc0005669:	00 00                	add    %al,(%rax)
ffffffffc000566b:	00 00                	add    %al,(%rax)
ffffffffc000566d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005670 <.refptr.asm_isr13>:
ffffffffc0005670:	b5 02                	mov    $0x2,%ch
ffffffffc0005672:	00 c0                	add    %al,%al
ffffffffc0005674:	ff                   	(bad)  
ffffffffc0005675:	ff                   	(bad)  
ffffffffc0005676:	ff                   	(bad)  
ffffffffc0005677:	ff 00                	incl   (%rax)
ffffffffc0005679:	00 00                	add    %al,(%rax)
ffffffffc000567b:	00 00                	add    %al,(%rax)
ffffffffc000567d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005680 <.refptr.asm_isr12>:
ffffffffc0005680:	ae                   	scas   %es:(%rdi),%al
ffffffffc0005681:	02 00                	add    (%rax),%al
ffffffffc0005683:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005686:	ff                   	(bad)  
ffffffffc0005687:	ff 00                	incl   (%rax)
ffffffffc0005689:	00 00                	add    %al,(%rax)
ffffffffc000568b:	00 00                	add    %al,(%rax)
ffffffffc000568d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005690 <.refptr.asm_isr11>:
ffffffffc0005690:	aa                   	stos   %al,%es:(%rdi)
ffffffffc0005691:	02 00                	add    (%rax),%al
ffffffffc0005693:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005696:	ff                   	(bad)  
ffffffffc0005697:	ff 00                	incl   (%rax)
ffffffffc0005699:	00 00                	add    %al,(%rax)
ffffffffc000569b:	00 00                	add    %al,(%rax)
ffffffffc000569d:	00 00                	add    %al,(%rax)
	...

ffffffffc00056a0 <.refptr.asm_isr10>:
ffffffffc00056a0:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
ffffffffc00056a1:	02 00                	add    (%rax),%al
ffffffffc00056a3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00056a6:	ff                   	(bad)  
ffffffffc00056a7:	ff 00                	incl   (%rax)
ffffffffc00056a9:	00 00                	add    %al,(%rax)
ffffffffc00056ab:	00 00                	add    %al,(%rax)
ffffffffc00056ad:	00 00                	add    %al,(%rax)
	...

ffffffffc00056b0 <.refptr.asm_isr9>:
ffffffffc00056b0:	a0 02 00 c0 ff ff ff 	movabs 0xffffffffc00002,%al
ffffffffc00056b7:	ff 00 
ffffffffc00056b9:	00 00                	add    %al,(%rax)
ffffffffc00056bb:	00 00                	add    %al,(%rax)
ffffffffc00056bd:	00 00                	add    %al,(%rax)
	...

ffffffffc00056c0 <.refptr.asm_isr8>:
ffffffffc00056c0:	9c                   	pushfq 
ffffffffc00056c1:	02 00                	add    (%rax),%al
ffffffffc00056c3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00056c6:	ff                   	(bad)  
ffffffffc00056c7:	ff 00                	incl   (%rax)
ffffffffc00056c9:	00 00                	add    %al,(%rax)
ffffffffc00056cb:	00 00                	add    %al,(%rax)
ffffffffc00056cd:	00 00                	add    %al,(%rax)
	...

ffffffffc00056d0 <.refptr.asm_isr7>:
ffffffffc00056d0:	96                   	xchg   %eax,%esi
ffffffffc00056d1:	02 00                	add    (%rax),%al
ffffffffc00056d3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00056d6:	ff                   	(bad)  
ffffffffc00056d7:	ff 00                	incl   (%rax)
ffffffffc00056d9:	00 00                	add    %al,(%rax)
ffffffffc00056db:	00 00                	add    %al,(%rax)
ffffffffc00056dd:	00 00                	add    %al,(%rax)
	...

ffffffffc00056e0 <.refptr.asm_isr6>:
ffffffffc00056e0:	90                   	nop
ffffffffc00056e1:	02 00                	add    (%rax),%al
ffffffffc00056e3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc00056e6:	ff                   	(bad)  
ffffffffc00056e7:	ff 00                	incl   (%rax)
ffffffffc00056e9:	00 00                	add    %al,(%rax)
ffffffffc00056eb:	00 00                	add    %al,(%rax)
ffffffffc00056ed:	00 00                	add    %al,(%rax)
	...

ffffffffc00056f0 <.refptr.asm_isr5>:
ffffffffc00056f0:	8a 02                	mov    (%rdx),%al
ffffffffc00056f2:	00 c0                	add    %al,%al
ffffffffc00056f4:	ff                   	(bad)  
ffffffffc00056f5:	ff                   	(bad)  
ffffffffc00056f6:	ff                   	(bad)  
ffffffffc00056f7:	ff 00                	incl   (%rax)
ffffffffc00056f9:	00 00                	add    %al,(%rax)
ffffffffc00056fb:	00 00                	add    %al,(%rax)
ffffffffc00056fd:	00 00                	add    %al,(%rax)
	...

ffffffffc0005700 <.refptr.asm_isr4>:
ffffffffc0005700:	84 02                	test   %al,(%rdx)
ffffffffc0005702:	00 c0                	add    %al,%al
ffffffffc0005704:	ff                   	(bad)  
ffffffffc0005705:	ff                   	(bad)  
ffffffffc0005706:	ff                   	(bad)  
ffffffffc0005707:	ff 00                	incl   (%rax)
ffffffffc0005709:	00 00                	add    %al,(%rax)
ffffffffc000570b:	00 00                	add    %al,(%rax)
ffffffffc000570d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005710 <.refptr.asm_isr3>:
ffffffffc0005710:	7e 02                	jle    ffffffffc0005714 <.refptr.asm_isr3+0x4>
ffffffffc0005712:	00 c0                	add    %al,%al
ffffffffc0005714:	ff                   	(bad)  
ffffffffc0005715:	ff                   	(bad)  
ffffffffc0005716:	ff                   	(bad)  
ffffffffc0005717:	ff 00                	incl   (%rax)
ffffffffc0005719:	00 00                	add    %al,(%rax)
ffffffffc000571b:	00 00                	add    %al,(%rax)
ffffffffc000571d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005720 <.refptr.asm_isr2>:
ffffffffc0005720:	78 02                	js     ffffffffc0005724 <.refptr.asm_isr2+0x4>
ffffffffc0005722:	00 c0                	add    %al,%al
ffffffffc0005724:	ff                   	(bad)  
ffffffffc0005725:	ff                   	(bad)  
ffffffffc0005726:	ff                   	(bad)  
ffffffffc0005727:	ff 00                	incl   (%rax)
ffffffffc0005729:	00 00                	add    %al,(%rax)
ffffffffc000572b:	00 00                	add    %al,(%rax)
ffffffffc000572d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005730 <.refptr.asm_isr1>:
ffffffffc0005730:	72 02                	jb     ffffffffc0005734 <.refptr.asm_isr1+0x4>
ffffffffc0005732:	00 c0                	add    %al,%al
ffffffffc0005734:	ff                   	(bad)  
ffffffffc0005735:	ff                   	(bad)  
ffffffffc0005736:	ff                   	(bad)  
ffffffffc0005737:	ff 00                	incl   (%rax)
ffffffffc0005739:	00 00                	add    %al,(%rax)
ffffffffc000573b:	00 00                	add    %al,(%rax)
ffffffffc000573d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005740 <.refptr.asm_isr0>:
ffffffffc0005740:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005741:	02 00                	add    (%rax),%al
ffffffffc0005743:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005746:	ff                   	(bad)  
ffffffffc0005747:	ff 00                	incl   (%rax)
ffffffffc0005749:	00 00                	add    %al,(%rax)
ffffffffc000574b:	00 00                	add    %al,(%rax)
ffffffffc000574d:	00 00                	add    %al,(%rax)
ffffffffc000574f:	00 44 4d 41          	add    %al,0x41(%rbp,%rcx,2)
ffffffffc0005753:	20 43 6f             	and    %al,0x6f(%rbx)
ffffffffc0005756:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005757:	74 72                	je     ffffffffc00057cb <.refptr.asm_isr0+0x8b>
ffffffffc0005759:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc000575a:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000575b:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000575c:	65 72 00             	gs jb  ffffffffc000575f <.refptr.asm_isr0+0x1f>
ffffffffc000575f:	42 61                	rex.X (bad) 
ffffffffc0005761:	73 65                	jae    ffffffffc00057c8 <.refptr.asm_isr0+0x88>
ffffffffc0005763:	20 53 79             	and    %dl,0x79(%rbx)
ffffffffc0005766:	73 74                	jae    ffffffffc00057dc <.refptr.asm_isr0+0x9c>
ffffffffc0005768:	65 6d                	gs insl (%dx),%es:(%rdi)
ffffffffc000576a:	20 50 65             	and    %dl,0x65(%rax)
ffffffffc000576d:	72 69                	jb     ffffffffc00057d8 <.refptr.asm_isr0+0x98>
ffffffffc000576f:	70 68                	jo     ffffffffc00057d9 <.refptr.asm_isr0+0x99>
ffffffffc0005771:	65 72 61             	gs jb  ffffffffc00057d5 <.refptr.asm_isr0+0x95>
ffffffffc0005774:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005775:	00 54 69 6d          	add    %dl,0x6d(%rcx,%rbp,2)
ffffffffc0005779:	65 72 00             	gs jb  ffffffffc000577c <.refptr.asm_isr0+0x3c>
ffffffffc000577c:	48 6f                	rex.W outsl %ds:(%rsi),(%dx)
ffffffffc000577e:	73 74                	jae    ffffffffc00057f4 <.refptr.asm_isr0+0xb4>
ffffffffc0005780:	20 42 72             	and    %al,0x72(%rdx)
ffffffffc0005783:	69 64 67 65 00 42 72 	imul   $0x69724200,0x65(%rdi,%riz,2),%esp
ffffffffc000578a:	69 
ffffffffc000578b:	64 67 65 20 43 6f    	fs and %al,%gs:0x6f(%ebx)
ffffffffc0005791:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005792:	74 72                	je     ffffffffc0005806 <.refptr.asm_isr0+0xc6>
ffffffffc0005794:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005795:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005796:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005797:	65 72 00             	gs jb  ffffffffc000579a <.refptr.asm_isr0+0x5a>
ffffffffc000579a:	46 6c                	rex.RX insb (%dx),%es:(%rdi)
ffffffffc000579c:	61                   	(bad)  
ffffffffc000579d:	73 68                	jae    ffffffffc0005807 <.refptr.asm_isr0+0xc7>
ffffffffc000579f:	20 43 6f             	and    %al,0x6f(%rbx)
ffffffffc00057a2:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00057a3:	74 72                	je     ffffffffc0005817 <.refptr.asm_isr0+0xd7>
ffffffffc00057a5:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00057a6:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00057a7:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00057a8:	65 72 00             	gs jb  ffffffffc00057ab <.refptr.asm_isr0+0x6b>
ffffffffc00057ab:	4d                   	rex.WRB
ffffffffc00057ac:	65 6d                	gs insl (%dx),%es:(%rdi)
ffffffffc00057ae:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00057af:	72 79                	jb     ffffffffc000582a <.refptr.asm_isr0+0xea>
ffffffffc00057b1:	20 43 6f             	and    %al,0x6f(%rbx)
ffffffffc00057b4:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00057b5:	74 72                	je     ffffffffc0005829 <.refptr.asm_isr0+0xe9>
ffffffffc00057b7:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00057b8:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00057b9:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00057ba:	65 72 00             	gs jb  ffffffffc00057bd <.refptr.asm_isr0+0x7d>
ffffffffc00057bd:	58                   	pop    %rax
ffffffffc00057be:	47                   	rex.RXB
ffffffffc00057bf:	41 20 43 6f          	and    %al,0x6f(%r11)
ffffffffc00057c3:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00057c4:	74 72                	je     ffffffffc0005838 <.refptr.asm_isr0+0xf8>
ffffffffc00057c6:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00057c7:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00057c8:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00057c9:	65 72 00             	gs jb  ffffffffc00057cc <.refptr.asm_isr0+0x8c>
ffffffffc00057cc:	44 69 73 70 6c 61 79 	imul   $0x2079616c,0x70(%rbx),%r14d
ffffffffc00057d3:	20 
ffffffffc00057d4:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
ffffffffc00057d6:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00057d7:	74 72                	je     ffffffffc000584b <.refptr.asm_isr0+0x10b>
ffffffffc00057d9:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00057da:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00057db:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00057dc:	65 72 00             	gs jb  ffffffffc00057df <.refptr.asm_isr0+0x9f>
ffffffffc00057df:	2d 00 41 75 64       	sub    $0x64754100,%eax
ffffffffc00057e4:	69 6f 20 44 65 76 69 	imul   $0x69766544,0x20(%rdi),%ebp
ffffffffc00057eb:	63 65 00             	movslq 0x0(%rbp),%esp
ffffffffc00057ee:	4d 75 6c             	rex.WRB jne ffffffffc000585d <.refptr.asm_isr0+0x11d>
ffffffffc00057f1:	74 69                	je     ffffffffc000585c <.refptr.asm_isr0+0x11c>
ffffffffc00057f3:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc00057f4:	65 64 69 61 20 43 6f 	gs imul $0x746e6f43,%fs:0x20(%rcx),%esp
ffffffffc00057fb:	6e 74 
ffffffffc00057fd:	72 6f                	jb     ffffffffc000586e <.refptr.asm_isr0+0x12e>
ffffffffc00057ff:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005800:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005801:	65 72 00             	gs jb  ffffffffc0005804 <.refptr.asm_isr0+0xc4>
ffffffffc0005804:	53                   	push   %rbx
ffffffffc0005805:	43 53                	rex.XB push %r11
ffffffffc0005807:	49 20 42 75          	rex.WB and %al,0x75(%r10)
ffffffffc000580b:	73 20                	jae    ffffffffc000582d <.refptr.asm_isr0+0xed>
ffffffffc000580d:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
ffffffffc000580f:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005810:	74 72                	je     ffffffffc0005884 <.refptr.asm_isr0+0x144>
ffffffffc0005812:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005813:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005814:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005815:	65 72 00             	gs jb  ffffffffc0005818 <.refptr.asm_isr0+0xd8>
ffffffffc0005818:	4d 61                	rex.WRB (bad) 
ffffffffc000581a:	73 73                	jae    ffffffffc000588f <.refptr.asm_isr0+0x14f>
ffffffffc000581c:	20 53 74             	and    %dl,0x74(%rbx)
ffffffffc000581f:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005820:	72 61                	jb     ffffffffc0005883 <.refptr.asm_isr0+0x143>
ffffffffc0005822:	67 65 20 43 6f       	and    %al,%gs:0x6f(%ebx)
ffffffffc0005827:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005828:	74 72                	je     ffffffffc000589c <.refptr.asm_isr0+0x15c>
ffffffffc000582a:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc000582b:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000582c:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000582d:	65 72 00             	gs jb  ffffffffc0005830 <.refptr.asm_isr0+0xf0>
ffffffffc0005830:	56                   	push   %rsi
ffffffffc0005831:	47                   	rex.RXB
ffffffffc0005832:	41 2d 43 6f 6d 70    	rex.B sub $0x706d6f43,%eax
ffffffffc0005838:	61                   	(bad)  
ffffffffc0005839:	74 69                	je     ffffffffc00058a4 <.refptr.asm_isr0+0x164>
ffffffffc000583b:	62                   	(bad)  
ffffffffc000583c:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000583d:	65 20 64 65 76       	and    %ah,%gs:0x76(%rbp,%riz,2)
ffffffffc0005842:	69 63 65 73 00 55 6e 	imul   $0x6e550073,0x65(%rbx),%esp
ffffffffc0005849:	63 6c 61 73          	movslq 0x73(%rcx,%riz,2),%ebp
ffffffffc000584d:	73 69                	jae    ffffffffc00058b8 <.refptr.asm_isr0+0x178>
ffffffffc000584f:	66 69 65 64 00 50    	imul   $0x5000,0x64(%rbp),%sp
ffffffffc0005855:	49                   	rex.WB
ffffffffc0005856:	43 00 53 65          	rex.XB add %dl,0x65(%r11)
ffffffffc000585a:	72 69                	jb     ffffffffc00058c5 <.refptr.asm_isr0+0x185>
ffffffffc000585c:	61                   	(bad)  
ffffffffc000585d:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000585e:	20 43 6f             	and    %al,0x6f(%rbx)
ffffffffc0005861:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005862:	74 72                	je     ffffffffc00058d6 <.refptr.asm_isr0+0x196>
ffffffffc0005864:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005865:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005866:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005867:	65 72 00             	gs jb  ffffffffc000586a <.refptr.asm_isr0+0x12a>
ffffffffc000586a:	00 00                	add    %al,(%rax)
ffffffffc000586c:	00 00                	add    %al,(%rax)
ffffffffc000586e:	00 00                	add    %al,(%rax)
ffffffffc0005870:	53                   	push   %rbx
ffffffffc0005871:	69 6d 70 6c 65 20 43 	imul   $0x4320656c,0x70(%rbp),%ebp
ffffffffc0005878:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005879:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc000587a:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc000587b:	75 6e                	jne    ffffffffc00058eb <.refptr.asm_isr0+0x1ab>
ffffffffc000587d:	69 63 61 74 69 6f 6e 	imul   $0x6e6f6974,0x61(%rbx),%esp
ffffffffc0005884:	20 43 6f             	and    %al,0x6f(%rbx)
ffffffffc0005887:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005888:	74 72                	je     ffffffffc00058fc <.refptr.asm_isr0+0x1bc>
ffffffffc000588a:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc000588b:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000588c:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000588d:	65 72 00             	gs jb  ffffffffc0005890 <.refptr.asm_isr0+0x150>
ffffffffc0005890:	4e 6f                	rex.WRX outsl %ds:(%rsi),(%dx)
ffffffffc0005892:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005893:	2d 56 47 41 2d       	sub    $0x2d414756,%eax
ffffffffc0005898:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
ffffffffc000589a:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc000589b:	70 61                	jo     ffffffffc00058fe <.refptr.asm_isr0+0x1be>
ffffffffc000589d:	74 69                	je     ffffffffc0005908 <.refptr.asm_isr0+0x1c8>
ffffffffc000589f:	62                   	(bad)  
ffffffffc00058a0:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00058a1:	65 20 64 65 76       	and    %ah,%gs:0x76(%rbp,%riz,2)
ffffffffc00058a6:	69 63 65 73 00 00 00 	imul   $0x73,0x65(%rbx),%esp
ffffffffc00058ad:	00 00                	add    %al,(%rax)
ffffffffc00058af:	00 4e 6f             	add    %cl,0x6f(%rsi)
ffffffffc00058b2:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00058b3:	2d 56 6f 6c 61       	sub    $0x616c6f56,%eax
ffffffffc00058b8:	74 69                	je     ffffffffc0005923 <.refptr.asm_isr0+0x1e3>
ffffffffc00058ba:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00058bb:	65 20 4d 65          	and    %cl,%gs:0x65(%rbp)
ffffffffc00058bf:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc00058c0:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00058c1:	72 79                	jb     ffffffffc000593c <.refptr.asm_isr0+0x1fc>
ffffffffc00058c3:	20 43 6f             	and    %al,0x6f(%rbx)
ffffffffc00058c6:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00058c7:	74 72                	je     ffffffffc000593b <.refptr.asm_isr0+0x1fb>
ffffffffc00058c9:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00058ca:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00058cb:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00058cc:	65 72 00             	gs jb  ffffffffc00058cf <.refptr.asm_isr0+0x18f>
ffffffffc00058cf:	53                   	push   %rbx
ffffffffc00058d0:	65 72 69             	gs jb  ffffffffc000593c <.refptr.asm_isr0+0x1fc>
ffffffffc00058d3:	61                   	(bad)  
ffffffffc00058d4:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00058d5:	20 41 74             	and    %al,0x74(%rcx)
ffffffffc00058d8:	74 61                	je     ffffffffc000593b <.refptr.asm_isr0+0x1fb>
ffffffffc00058da:	63 68 65             	movslq 0x65(%rax),%ebp
ffffffffc00058dd:	64 20 53 43          	and    %dl,%fs:0x43(%rbx)
ffffffffc00058e1:	53                   	push   %rbx
ffffffffc00058e2:	49 00 53 65          	rex.WB add %dl,0x65(%r11)
ffffffffc00058e6:	72 69                	jb     ffffffffc0005951 <.refptr.asm_isr0+0x211>
ffffffffc00058e8:	61                   	(bad)  
ffffffffc00058e9:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00058ea:	20 41 54             	and    %al,0x54(%rcx)
ffffffffc00058ed:	41 00 41 54          	add    %al,0x54(%r9)
ffffffffc00058f1:	41 20 43 6f          	and    %al,0x6f(%r11)
ffffffffc00058f5:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00058f6:	74 72                	je     ffffffffc000596a <.refptr.asm_isr0+0x22a>
ffffffffc00058f8:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00058f9:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00058fa:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00058fb:	65 72 00             	gs jb  ffffffffc00058fe <.refptr.asm_isr0+0x1be>
ffffffffc00058fe:	52                   	push   %rdx
ffffffffc00058ff:	41                   	rex.B
ffffffffc0005900:	49                   	rex.WB
ffffffffc0005901:	44 20 43 6f          	and    %r8b,0x6f(%rbx)
ffffffffc0005905:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005906:	74 72                	je     ffffffffc000597a <.refptr.asm_isr0+0x23a>
ffffffffc0005908:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005909:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000590a:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000590b:	65 72 00             	gs jb  ffffffffc000590e <.refptr.asm_isr0+0x1ce>
ffffffffc000590e:	49 50                	rex.WB push %r8
ffffffffc0005910:	49 20 42 75          	rex.WB and %al,0x75(%r10)
ffffffffc0005914:	73 20                	jae    ffffffffc0005936 <.refptr.asm_isr0+0x1f6>
ffffffffc0005916:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
ffffffffc0005918:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005919:	74 72                	je     ffffffffc000598d <.refptr.asm_isr0+0x24d>
ffffffffc000591b:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc000591c:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000591d:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000591e:	65 72 00             	gs jb  ffffffffc0005921 <.refptr.asm_isr0+0x1e1>
ffffffffc0005921:	46 6c                	rex.RX insb (%dx),%es:(%rdi)
ffffffffc0005923:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005924:	70 70                	jo     ffffffffc0005996 <.refptr.asm_isr0+0x256>
ffffffffc0005926:	79 20                	jns    ffffffffc0005948 <.refptr.asm_isr0+0x208>
ffffffffc0005928:	44 69 73 6b 20 43 6f 	imul   $0x6e6f4320,0x6b(%rbx),%r14d
ffffffffc000592f:	6e 
ffffffffc0005930:	74 72                	je     ffffffffc00059a4 <.refptr.asm_isr0+0x264>
ffffffffc0005932:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005933:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005934:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005935:	65 72 00             	gs jb  ffffffffc0005938 <.refptr.asm_isr0+0x1f8>
ffffffffc0005938:	49                   	rex.WB
ffffffffc0005939:	44                   	rex.R
ffffffffc000593a:	45 20 43 6f          	and    %r8b,0x6f(%r11)
ffffffffc000593e:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc000593f:	74 72                	je     ffffffffc00059b3 <.refptr.asm_isr0+0x273>
ffffffffc0005941:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005942:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005943:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005944:	65 72 00             	gs jb  ffffffffc0005947 <.refptr.asm_isr0+0x207>
ffffffffc0005947:	46 61                	rex.RX (bad) 
ffffffffc0005949:	62 72                	(bad)  
ffffffffc000594b:	69 63 20 43 6f 6e 74 	imul   $0x746e6f43,0x20(%rbx),%esp
ffffffffc0005952:	72 6f                	jb     ffffffffc00059c3 <.refptr.asm_isr0+0x283>
ffffffffc0005954:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005955:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005956:	65 72 00             	gs jb  ffffffffc0005959 <.refptr.asm_isr0+0x219>
ffffffffc0005959:	4e                   	rex.WRX
ffffffffc000595a:	65 74 77             	gs je  ffffffffc00059d4 <.refptr.asm_isr0+0x294>
ffffffffc000595d:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc000595e:	72 6b                	jb     ffffffffc00059cb <.refptr.asm_isr0+0x28b>
ffffffffc0005960:	20 43 6f             	and    %al,0x6f(%rbx)
ffffffffc0005963:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005964:	74 72                	je     ffffffffc00059d8 <.refptr.asm_isr0+0x298>
ffffffffc0005966:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005967:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005968:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005969:	65 72 00             	gs jb  ffffffffc000596c <.refptr.asm_isr0+0x22c>
ffffffffc000596c:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
ffffffffc000596e:	66 69 6e 69 62 61    	imul   $0x6162,0x69(%rsi),%bp
ffffffffc0005974:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005975:	64 20 43 6f          	and    %al,%fs:0x6f(%rbx)
ffffffffc0005979:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc000597a:	74 72                	je     ffffffffc00059ee <.refptr.asm_isr0+0x2ae>
ffffffffc000597c:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc000597d:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000597e:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000597f:	65 72 00             	gs jb  ffffffffc0005982 <.refptr.asm_isr0+0x242>
ffffffffc0005982:	50                   	push   %rax
ffffffffc0005983:	49                   	rex.WB
ffffffffc0005984:	43                   	rex.XB
ffffffffc0005985:	4d                   	rex.WRB
ffffffffc0005986:	47 20 32             	rex.RXB and %r14b,(%r10)
ffffffffc0005989:	2e 31 34 20          	xor    %esi,%cs:(%rax,%riz,1)
ffffffffc000598d:	4d 75 6c             	rex.WRB jne ffffffffc00059fc <.refptr.asm_isr0+0x2bc>
ffffffffc0005990:	74 69                	je     ffffffffc00059fb <.refptr.asm_isr0+0x2bb>
ffffffffc0005992:	20 43 6f             	and    %al,0x6f(%rbx)
ffffffffc0005995:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0005996:	70 75                	jo     ffffffffc0005a0d <.refptr.asm_isr0+0x2cd>
ffffffffc0005998:	74 69                	je     ffffffffc0005a03 <.refptr.asm_isr0+0x2c3>
ffffffffc000599a:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc000599b:	67 00 57 6f          	add    %dl,0x6f(%edi)
ffffffffc000599f:	72 6c                	jb     ffffffffc0005a0d <.refptr.asm_isr0+0x2cd>
ffffffffc00059a1:	64 46 69 70 20 43 6f 	rex.RX imul $0x746e6f43,%fs:0x20(%rax),%r14d
ffffffffc00059a8:	6e 74 
ffffffffc00059aa:	72 6f                	jb     ffffffffc0005a1b <.refptr.asm_isr0+0x2db>
ffffffffc00059ac:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00059ad:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00059ae:	65 72 00             	gs jb  ffffffffc00059b1 <.refptr.asm_isr0+0x271>
ffffffffc00059b1:	49 53                	rex.WB push %r11
ffffffffc00059b3:	44                   	rex.R
ffffffffc00059b4:	4e 20 43 6f          	rex.WRX and %r8b,0x6f(%rbx)
ffffffffc00059b8:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00059b9:	74 72                	je     ffffffffc0005a2d <.refptr.asm_isr0+0x2ed>
ffffffffc00059bb:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00059bc:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00059bd:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00059be:	65 72 00             	gs jb  ffffffffc00059c1 <.refptr.asm_isr0+0x281>
ffffffffc00059c1:	41 54                	push   %r12
ffffffffc00059c3:	4d 20 43 6f          	rex.WRB and %r8b,0x6f(%r11)
ffffffffc00059c7:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00059c8:	74 72                	je     ffffffffc0005a3c <.refptr.asm_isr0+0x2fc>
ffffffffc00059ca:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00059cb:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00059cc:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00059cd:	65 72 00             	gs jb  ffffffffc00059d0 <.refptr.asm_isr0+0x290>
ffffffffc00059d0:	46                   	rex.RX
ffffffffc00059d1:	44                   	rex.R
ffffffffc00059d2:	44                   	rex.R
ffffffffc00059d3:	49 20 43 6f          	rex.WB and %al,0x6f(%r11)
ffffffffc00059d7:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00059d8:	74 72                	je     ffffffffc0005a4c <.refptr.asm_isr0+0x30c>
ffffffffc00059da:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00059db:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00059dc:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00059dd:	65 72 00             	gs jb  ffffffffc00059e0 <.refptr.asm_isr0+0x2a0>
ffffffffc00059e0:	54                   	push   %rsp
ffffffffc00059e1:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00059e2:	6b 65 6e 20          	imul   $0x20,0x6e(%rbp),%esp
ffffffffc00059e6:	52                   	push   %rdx
ffffffffc00059e7:	69 6e 67 20 43 6f 6e 	imul   $0x6e6f4320,0x67(%rsi),%ebp
ffffffffc00059ee:	74 72                	je     ffffffffc0005a62 <.refptr.asm_isr0+0x322>
ffffffffc00059f0:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00059f1:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00059f2:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00059f3:	65 72 00             	gs jb  ffffffffc00059f6 <.refptr.asm_isr0+0x2b6>
ffffffffc00059f6:	45 74 68             	rex.RB je ffffffffc0005a61 <.refptr.asm_isr0+0x321>
ffffffffc00059f9:	65 72 6e             	gs jb  ffffffffc0005a6a <.refptr.asm_isr0+0x32a>
ffffffffc00059fc:	65 74 20             	gs je  ffffffffc0005a1f <.refptr.asm_isr0+0x2df>
ffffffffc00059ff:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
ffffffffc0005a01:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005a02:	74 72                	je     ffffffffc0005a76 <.refptr.asm_isr0+0x336>
ffffffffc0005a04:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005a05:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005a06:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005a07:	65 72 00             	gs jb  ffffffffc0005a0a <.refptr.asm_isr0+0x2ca>
ffffffffc0005a0a:	33 44 20 43          	xor    0x43(%rax,%riz,1),%eax
ffffffffc0005a0e:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005a0f:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005a10:	74 72                	je     ffffffffc0005a84 <.refptr.asm_isr0+0x344>
ffffffffc0005a12:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005a13:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005a14:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005a15:	65 72 00             	gs jb  ffffffffc0005a18 <.refptr.asm_isr0+0x2d8>
ffffffffc0005a18:	4d 75 6c             	rex.WRB jne ffffffffc0005a87 <.refptr.asm_isr0+0x347>
ffffffffc0005a1b:	74 69                	je     ffffffffc0005a86 <.refptr.asm_isr0+0x346>
ffffffffc0005a1d:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0005a1e:	65 64 69 61 20 56 69 	gs imul $0x65646956,%fs:0x20(%rcx),%esp
ffffffffc0005a25:	64 65 
ffffffffc0005a27:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005a28:	20 43 6f             	and    %al,0x6f(%rbx)
ffffffffc0005a2b:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005a2c:	74 72                	je     ffffffffc0005aa0 <.refptr.asm_isr0+0x360>
ffffffffc0005a2e:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005a2f:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005a30:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005a31:	65 72 00             	gs jb  ffffffffc0005a34 <.refptr.asm_isr0+0x2f4>
ffffffffc0005a34:	56                   	push   %rsi
ffffffffc0005a35:	47                   	rex.RXB
ffffffffc0005a36:	41 20 43 6f          	and    %al,0x6f(%r11)
ffffffffc0005a3a:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0005a3b:	70 61                	jo     ffffffffc0005a9e <.refptr.asm_isr0+0x35e>
ffffffffc0005a3d:	74 69                	je     ffffffffc0005aa8 <.refptr.asm_isr0+0x368>
ffffffffc0005a3f:	62                   	(bad)  
ffffffffc0005a40:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005a41:	65 20 43 6f          	and    %al,%gs:0x6f(%rbx)
ffffffffc0005a45:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005a46:	74 72                	je     ffffffffc0005aba <.refptr.asm_isr0+0x37a>
ffffffffc0005a48:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005a49:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005a4a:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005a4b:	65 72 00             	gs jb  ffffffffc0005a4e <.refptr.asm_isr0+0x30e>
ffffffffc0005a4e:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
ffffffffc0005a50:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0005a51:	70 75                	jo     ffffffffc0005ac8 <.refptr.asm_isr0+0x388>
ffffffffc0005a53:	74 65                	je     ffffffffc0005aba <.refptr.asm_isr0+0x37a>
ffffffffc0005a55:	72 20                	jb     ffffffffc0005a77 <.refptr.asm_isr0+0x337>
ffffffffc0005a57:	54                   	push   %rsp
ffffffffc0005a58:	65 6c                	gs insb (%dx),%es:(%rdi)
ffffffffc0005a5a:	65 70 68             	gs jo  ffffffffc0005ac5 <.refptr.asm_isr0+0x385>
ffffffffc0005a5d:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005a5e:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005a5f:	79 20                	jns    ffffffffc0005a81 <.refptr.asm_isr0+0x341>
ffffffffc0005a61:	44                   	rex.R
ffffffffc0005a62:	65 76 69             	gs jbe ffffffffc0005ace <.refptr.asm_isr0+0x38e>
ffffffffc0005a65:	63 65 00             	movslq 0x0(%rbp),%esp
ffffffffc0005a68:	4d 75 6c             	rex.WRB jne ffffffffc0005ad7 <.refptr.asm_isr0+0x397>
ffffffffc0005a6b:	74 69                	je     ffffffffc0005ad6 <.refptr.asm_isr0+0x396>
ffffffffc0005a6d:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0005a6e:	65 64 69 61 20 41 75 	gs imul $0x69647541,%fs:0x20(%rcx),%esp
ffffffffc0005a75:	64 69 
ffffffffc0005a77:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005a78:	20 43 6f             	and    %al,0x6f(%rbx)
ffffffffc0005a7b:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005a7c:	74 72                	je     ffffffffc0005af0 <.refptr.asm_isr0+0x3b0>
ffffffffc0005a7e:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005a7f:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005a80:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005a81:	65 72 00             	gs jb  ffffffffc0005a84 <.refptr.asm_isr0+0x344>
ffffffffc0005a84:	52                   	push   %rdx
ffffffffc0005a85:	41                   	rex.B
ffffffffc0005a86:	4d 20 43 6f          	rex.WRB and %r8b,0x6f(%r11)
ffffffffc0005a8a:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005a8b:	74 72                	je     ffffffffc0005aff <.refptr.asm_isr0+0x3bf>
ffffffffc0005a8d:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005a8e:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005a8f:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005a90:	65 72 00             	gs jb  ffffffffc0005a93 <.refptr.asm_isr0+0x353>
ffffffffc0005a93:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
ffffffffc0005a95:	66 69 6e 69 42 61    	imul   $0x6142,0x69(%rsi),%bp
ffffffffc0005a9b:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005a9c:	64 2d 74 6f 2d 50    	fs sub $0x502d6f74,%eax
ffffffffc0005aa2:	43                   	rex.XB
ffffffffc0005aa3:	49 20 48 6f          	rex.WB and %cl,0x6f(%r8)
ffffffffc0005aa7:	73 74                	jae    ffffffffc0005b1d <.refptr.asm_isr0+0x3dd>
ffffffffc0005aa9:	20 42 72             	and    %al,0x72(%rdx)
ffffffffc0005aac:	69 64 67 65 00 52 41 	imul   $0x43415200,0x65(%rdi,%riz,2),%esp
ffffffffc0005ab3:	43 
ffffffffc0005ab4:	45 77 61             	rex.RB ja ffffffffc0005b18 <.refptr.asm_isr0+0x3d8>
ffffffffc0005ab7:	79 20                	jns    ffffffffc0005ad9 <.refptr.asm_isr0+0x399>
ffffffffc0005ab9:	42 72 69             	rex.X jb ffffffffc0005b25 <.refptr.asm_isr0+0x3e5>
ffffffffc0005abc:	64 67 65 00 43 61    	fs add %al,%gs:0x61(%ebx)
ffffffffc0005ac2:	72 64                	jb     ffffffffc0005b28 <.refptr.asm_isr0+0x3e8>
ffffffffc0005ac4:	42 75 73             	rex.X jne ffffffffc0005b3a <.refptr.asm_isr0+0x3fa>
ffffffffc0005ac7:	20 42 72             	and    %al,0x72(%rdx)
ffffffffc0005aca:	69 64 67 65 00 4e 75 	imul   $0x42754e00,0x65(%rdi,%riz,2),%esp
ffffffffc0005ad1:	42 
ffffffffc0005ad2:	75 73                	jne    ffffffffc0005b47 <.refptr.asm_isr0+0x407>
ffffffffc0005ad4:	20 42 72             	and    %al,0x72(%rdx)
ffffffffc0005ad7:	69 64 67 65 00 50 43 	imul   $0x4d435000,0x65(%rdi,%riz,2),%esp
ffffffffc0005ade:	4d 
ffffffffc0005adf:	43                   	rex.XB
ffffffffc0005ae0:	49                   	rex.WB
ffffffffc0005ae1:	41 20 42 72          	and    %al,0x72(%r10)
ffffffffc0005ae5:	69 64 67 65 00 50 43 	imul   $0x49435000,0x65(%rdi,%riz,2),%esp
ffffffffc0005aec:	49 
ffffffffc0005aed:	2d 74 6f 2d 50       	sub    $0x502d6f74,%eax
ffffffffc0005af2:	43                   	rex.XB
ffffffffc0005af3:	49 20 42 72          	rex.WB and %al,0x72(%r10)
ffffffffc0005af7:	69 64 67 65 00 4d 43 	imul   $0x41434d00,0x65(%rdi,%riz,2),%esp
ffffffffc0005afe:	41 
ffffffffc0005aff:	20 42 72             	and    %al,0x72(%rdx)
ffffffffc0005b02:	69 64 67 65 00 45 49 	imul   $0x53494500,0x65(%rdi,%riz,2),%esp
ffffffffc0005b09:	53 
ffffffffc0005b0a:	41 20 42 72          	and    %al,0x72(%r10)
ffffffffc0005b0e:	69 64 67 65 00 49 53 	imul   $0x41534900,0x65(%rdi,%riz,2),%esp
ffffffffc0005b15:	41 
ffffffffc0005b16:	20 42 72             	and    %al,0x72(%rdx)
ffffffffc0005b19:	69 64 67 65 00 53 6d 	imul   $0x616d5300,0x65(%rdi,%riz,2),%esp
ffffffffc0005b20:	61 
ffffffffc0005b21:	72 74                	jb     ffffffffc0005b97 <.refptr.asm_isr0+0x457>
ffffffffc0005b23:	20 43 61             	and    %al,0x61(%rbx)
ffffffffc0005b26:	72 64                	jb     ffffffffc0005b8c <.refptr.asm_isr0+0x44c>
	...
ffffffffc0005b30:	49                   	rex.WB
ffffffffc0005b31:	45                   	rex.RB
ffffffffc0005b32:	45                   	rex.RB
ffffffffc0005b33:	45 20 34 38          	and    %r14b,(%r8,%rdi,1)
ffffffffc0005b37:	38 2e                	cmp    %ch,(%rsi)
ffffffffc0005b39:	31 2f                	xor    %ebp,(%rdi)
ffffffffc0005b3b:	32 20                	xor    (%rax),%ah
ffffffffc0005b3d:	28 47 50             	sub    %al,0x50(%rdi)
ffffffffc0005b40:	49                   	rex.WB
ffffffffc0005b41:	42 29 20             	rex.X sub %esp,(%rax)
ffffffffc0005b44:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
ffffffffc0005b46:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005b47:	74 72                	je     ffffffffc0005bbb <.refptr.asm_isr0+0x47b>
ffffffffc0005b49:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005b4a:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005b4b:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005b4c:	65 72 00             	gs jb  ffffffffc0005b4f <.refptr.asm_isr0+0x40f>
ffffffffc0005b4f:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
ffffffffc0005b51:	64 65 6d             	fs gs insl (%dx),%es:(%rdi)
ffffffffc0005b54:	00 4d 75             	add    %cl,0x75(%rbp)
ffffffffc0005b57:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005b58:	74 69                	je     ffffffffc0005bc3 <.refptr.asm_isr0+0x483>
ffffffffc0005b5a:	70 6f                	jo     ffffffffc0005bcb <.refptr.asm_isr0+0x48b>
ffffffffc0005b5c:	72 74                	jb     ffffffffc0005bd2 <.refptr.asm_isr0+0x492>
ffffffffc0005b5e:	20 53 65             	and    %dl,0x65(%rbx)
ffffffffc0005b61:	72 69                	jb     ffffffffc0005bcc <.refptr.asm_isr0+0x48c>
ffffffffc0005b63:	61                   	(bad)  
ffffffffc0005b64:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005b65:	20 43 6f             	and    %al,0x6f(%rbx)
ffffffffc0005b68:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005b69:	74 72                	je     ffffffffc0005bdd <.refptr.asm_isr0+0x49d>
ffffffffc0005b6b:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005b6c:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005b6d:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005b6e:	65 72 00             	gs jb  ffffffffc0005b71 <.refptr.asm_isr0+0x431>
ffffffffc0005b71:	50                   	push   %rax
ffffffffc0005b72:	61                   	(bad)  
ffffffffc0005b73:	72 61                	jb     ffffffffc0005bd6 <.refptr.asm_isr0+0x496>
ffffffffc0005b75:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005b76:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005b77:	65 6c                	gs insb (%dx),%es:(%rdi)
ffffffffc0005b79:	20 43 6f             	and    %al,0x6f(%rbx)
ffffffffc0005b7c:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005b7d:	74 72                	je     ffffffffc0005bf1 <.refptr.asm_isr0+0x4b1>
ffffffffc0005b7f:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005b80:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005b81:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005b82:	65 72 00             	gs jb  ffffffffc0005b85 <.refptr.asm_isr0+0x445>
ffffffffc0005b85:	49                   	rex.WB
ffffffffc0005b86:	4f                   	rex.WRXB
ffffffffc0005b87:	4d                   	rex.WRB
ffffffffc0005b88:	4d 55                	rex.WRB push %r13
ffffffffc0005b8a:	00 53 44             	add    %dl,0x44(%rbx)
ffffffffc0005b8d:	20 48 6f             	and    %cl,0x6f(%rax)
ffffffffc0005b90:	73 74                	jae    ffffffffc0005c06 <.refptr.asm_isr0+0x4c6>
ffffffffc0005b92:	20 63 6f             	and    %ah,0x6f(%rbx)
ffffffffc0005b95:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005b96:	74 72                	je     ffffffffc0005c0a <.refptr.asm_isr0+0x4ca>
ffffffffc0005b98:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005b99:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005b9a:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005b9b:	65 72 00             	gs jb  ffffffffc0005b9e <.refptr.asm_isr0+0x45e>
ffffffffc0005b9e:	50                   	push   %rax
ffffffffc0005b9f:	43                   	rex.XB
ffffffffc0005ba0:	49 20 48 6f          	rex.WB and %cl,0x6f(%r8)
ffffffffc0005ba4:	74 2d                	je     ffffffffc0005bd3 <.refptr.asm_isr0+0x493>
ffffffffc0005ba6:	50                   	push   %rax
ffffffffc0005ba7:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005ba8:	75 67                	jne    ffffffffc0005c11 <.refptr.asm_isr0+0x4d1>
ffffffffc0005baa:	20 43 6f             	and    %al,0x6f(%rbx)
ffffffffc0005bad:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005bae:	74 72                	je     ffffffffc0005c22 <.refptr.asm_isr0+0x4e2>
ffffffffc0005bb0:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005bb1:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005bb2:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005bb3:	65 72 00             	gs jb  ffffffffc0005bb6 <.refptr.asm_isr0+0x476>
ffffffffc0005bb6:	52                   	push   %rdx
ffffffffc0005bb7:	54                   	push   %rsp
ffffffffc0005bb8:	43 20 43 6f          	rex.XB and %al,0x6f(%r11)
ffffffffc0005bbc:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005bbd:	74 72                	je     ffffffffc0005c31 <.refptr.asm_isr0+0x4f1>
ffffffffc0005bbf:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005bc0:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005bc1:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005bc2:	65 72 00             	gs jb  ffffffffc0005bc5 <.refptr.asm_isr0+0x485>
ffffffffc0005bc5:	00 00                	add    %al,(%rax)
ffffffffc0005bc7:	00 50 43             	add    %dl,0x43(%rax)
ffffffffc0005bca:	49 20 44 65 76       	rex.WB and %al,0x76(%r13,%riz,2)
ffffffffc0005bcf:	69 63 65 3a 0a 20 20 	imul   $0x20200a3a,0x65(%rbx),%esp
ffffffffc0005bd6:	62                   	(bad)  
ffffffffc0005bd7:	75 73                	jne    ffffffffc0005c4c <.refptr.asm_isr0+0x50c>
ffffffffc0005bd9:	3a 20                	cmp    (%rax),%ah
ffffffffc0005bdb:	20 20                	and    %ah,(%rax)
ffffffffc0005bdd:	20 20                	and    %ah,(%rax)
ffffffffc0005bdf:	20 20                	and    %ah,(%rax)
ffffffffc0005be1:	25 68 68 75 0a       	and    $0xa756868,%eax
ffffffffc0005be6:	20 20                	and    %ah,(%rax)
ffffffffc0005be8:	64 65 76 69          	fs gs jbe ffffffffc0005c55 <.refptr.asm_isr0+0x515>
ffffffffc0005bec:	63 65 3a             	movslq 0x3a(%rbp),%esp
ffffffffc0005bef:	20 20                	and    %ah,(%rax)
ffffffffc0005bf1:	20 20                	and    %ah,(%rax)
ffffffffc0005bf3:	25 68 68 75 0a       	and    $0xa756868,%eax
ffffffffc0005bf8:	20 20                	and    %ah,(%rax)
ffffffffc0005bfa:	66 75 6e             	data16 jne ffffffffc0005c6b <.refptr.asm_isr0+0x52b>
ffffffffc0005bfd:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
ffffffffc0005c01:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005c02:	3a 20                	cmp    (%rax),%ah
ffffffffc0005c04:	20 25 68 68 75 0a    	and    %ah,0xa756868(%rip)        # ffffffffca75c472 <___KERNEL_UNMAP_END__+0xa752892>
ffffffffc0005c0a:	20 20                	and    %ah,(%rax)
ffffffffc0005c0c:	63 6c 61 73          	movslq 0x73(%rcx,%riz,2),%ebp
ffffffffc0005c10:	73 3a                	jae    ffffffffc0005c4c <.refptr.asm_isr0+0x50c>
ffffffffc0005c12:	20 20                	and    %ah,(%rax)
ffffffffc0005c14:	20 20                	and    %ah,(%rax)
ffffffffc0005c16:	20 25 68 68 75 20    	and    %ah,0x20756868(%rip)        # ffffffffe075c484 <___KERNEL_UNMAP_END__+0x207528a4>
ffffffffc0005c1c:	28 25 73 29 0a 20    	sub    %ah,0x200a2973(%rip)        # ffffffffe00a8595 <___KERNEL_UNMAP_END__+0x2009e9b5>
ffffffffc0005c22:	20 73 75             	and    %dh,0x75(%rbx)
ffffffffc0005c25:	62 63 6c 61 73       	(bad)
ffffffffc0005c2a:	73 3a                	jae    ffffffffc0005c66 <.refptr.asm_isr0+0x526>
ffffffffc0005c2c:	20 20                	and    %ah,(%rax)
ffffffffc0005c2e:	25 68 68 75 20       	and    $0x20756868,%eax
ffffffffc0005c33:	28 25 73 29 0a 20    	sub    %ah,0x200a2973(%rip)        # ffffffffe00a85ac <___KERNEL_UNMAP_END__+0x2009e9cc>
ffffffffc0005c39:	20 69 6e             	and    %ch,0x6e(%rcx)
ffffffffc0005c3c:	74 65                	je     ffffffffc0005ca3 <.refptr.asm_isr0+0x563>
ffffffffc0005c3e:	72 66                	jb     ffffffffc0005ca6 <.refptr.asm_isr0+0x566>
ffffffffc0005c40:	61                   	(bad)  
ffffffffc0005c41:	63 65 3a             	movslq 0x3a(%rbp),%esp
ffffffffc0005c44:	20 25 68 68 75 20    	and    %ah,0x20756868(%rip)        # ffffffffe075c4b2 <___KERNEL_UNMAP_END__+0x207528d2>
ffffffffc0005c4a:	28 25 73 29 0a 00    	sub    %ah,0xa2973(%rip)        # ffffffffc00a85c3 <___KERNEL_UNMAP_END__+0x9e9e3>
ffffffffc0005c50:	50                   	push   %rax
ffffffffc0005c51:	b0 ff                	mov    $0xff,%al
ffffffffc0005c53:	ff                   	(bad)  
ffffffffc0005c54:	ff                   	(bad)  
ffffffffc0005c55:	ff                   	(bad)  
ffffffffc0005c56:	ff                   	(bad)  
ffffffffc0005c57:	ff c8                	dec    %eax
ffffffffc0005c59:	af                   	scas   %es:(%rdi),%eax
ffffffffc0005c5a:	ff                   	(bad)  
ffffffffc0005c5b:	ff                   	(bad)  
ffffffffc0005c5c:	ff                   	(bad)  
ffffffffc0005c5d:	ff                   	(bad)  
ffffffffc0005c5e:	ff                   	(bad)  
ffffffffc0005c5f:	ff 88 b0 ff ff ff    	decl   -0x50(%rax)
ffffffffc0005c65:	ff                   	(bad)  
ffffffffc0005c66:	ff                   	(bad)  
ffffffffc0005c67:	ff 08                	decl   (%rax)
ffffffffc0005c69:	b0 ff                	mov    $0xff,%al
ffffffffc0005c6b:	ff                   	(bad)  
ffffffffc0005c6c:	ff                   	(bad)  
ffffffffc0005c6d:	ff                   	(bad)  
ffffffffc0005c6e:	ff                   	(bad)  
ffffffffc0005c6f:	ff 88 af ff ff ff    	decl   -0x51(%rax)
ffffffffc0005c75:	ff                   	(bad)  
ffffffffc0005c76:	ff                   	(bad)  
ffffffffc0005c77:	ff                   	(bad)  
ffffffffc0005c78:	d8 ae ff ff ff ff    	fsubrs -0x1(%rsi)
ffffffffc0005c7e:	ff                   	(bad)  
ffffffffc0005c7f:	ff                   	(bad)  
ffffffffc0005c80:	b8 ae ff ff ff       	mov    $0xffffffae,%eax
ffffffffc0005c85:	ff                   	(bad)  
ffffffffc0005c86:	ff                   	(bad)  
ffffffffc0005c87:	ff 98 ae ff ff ff    	lcall  *-0x52(%rax)
ffffffffc0005c8d:	ff                   	(bad)  
ffffffffc0005c8e:	ff                   	(bad)  
ffffffffc0005c8f:	ff                   	(bad)  
ffffffffc0005c90:	e8 af ff ff ff       	callq  ffffffffc0005c44 <.refptr.asm_isr0+0x504>
ffffffffc0005c95:	ff                   	(bad)  
ffffffffc0005c96:	ff                   	(bad)  
ffffffffc0005c97:	ff 71 b0             	pushq  -0x50(%rcx)
ffffffffc0005c9a:	ff                   	(bad)  
ffffffffc0005c9b:	ff                   	(bad)  
ffffffffc0005c9c:	ff                   	(bad)  
ffffffffc0005c9d:	ff                   	(bad)  
ffffffffc0005c9e:	ff                   	(bad)  
ffffffffc0005c9f:	ff aa b0 ff ff ff    	ljmp   *-0x50(%rdx)
ffffffffc0005ca5:	ff                   	(bad)  
ffffffffc0005ca6:	ff                   	(bad)  
ffffffffc0005ca7:	ff 97 b0 ff ff ff    	callq  *-0x50(%rdi)
ffffffffc0005cad:	ff                   	(bad)  
ffffffffc0005cae:	ff                   	(bad)  
ffffffffc0005caf:	ff d0                	callq  *%rax
ffffffffc0005cb1:	b0 ff                	mov    $0xff,%al
ffffffffc0005cb3:	ff                   	(bad)  
ffffffffc0005cb4:	ff                   	(bad)  
ffffffffc0005cb5:	ff                   	(bad)  
ffffffffc0005cb6:	ff                   	(bad)  
ffffffffc0005cb7:	ff                   	(bad)  
ffffffffc0005cb8:	bd b0 ff ff ff       	mov    $0xffffffb0,%ebp
ffffffffc0005cbd:	ff                   	(bad)  
ffffffffc0005cbe:	ff                   	(bad)  
ffffffffc0005cbf:	ff 84 b0 ff ff ff ff 	incl   -0x1(%rax,%rsi,4)
ffffffffc0005cc6:	ff                   	(bad)  
ffffffffc0005cc7:	ff 8e b2 ff ff ff    	decl   -0x4e(%rsi)
ffffffffc0005ccd:	ff                   	(bad)  
ffffffffc0005cce:	ff                   	(bad)  
ffffffffc0005ccf:	ff 00                	incl   (%rax)
ffffffffc0005cd1:	b3 ff                	mov    $0xff,%bl
ffffffffc0005cd3:	ff                   	(bad)  
ffffffffc0005cd4:	ff                   	(bad)  
ffffffffc0005cd5:	ff                   	(bad)  
ffffffffc0005cd6:	ff                   	(bad)  
ffffffffc0005cd7:	ff                   	(bad)  
ffffffffc0005cd8:	ed                   	in     (%dx),%eax
ffffffffc0005cd9:	b2 ff                	mov    $0xff,%dl
ffffffffc0005cdb:	ff                   	(bad)  
ffffffffc0005cdc:	ff                   	(bad)  
ffffffffc0005cdd:	ff                   	(bad)  
ffffffffc0005cde:	ff                   	(bad)  
ffffffffc0005cdf:	ff c7                	inc    %edi
ffffffffc0005ce1:	b2 ff                	mov    $0xff,%dl
ffffffffc0005ce3:	ff                   	(bad)  
ffffffffc0005ce4:	ff                   	(bad)  
ffffffffc0005ce5:	ff                   	(bad)  
ffffffffc0005ce6:	ff                   	(bad)  
ffffffffc0005ce7:	ff 2e                	ljmp   *(%rsi)
ffffffffc0005ce9:	b0 ff                	mov    $0xff,%al
ffffffffc0005ceb:	ff                   	(bad)  
ffffffffc0005cec:	ff                   	(bad)  
ffffffffc0005ced:	ff                   	(bad)  
ffffffffc0005cee:	ff                   	(bad)  
ffffffffc0005cef:	ff b4 b2 ff ff ff ff 	pushq  -0x1(%rdx,%rsi,4)
ffffffffc0005cf6:	ff                   	(bad)  
ffffffffc0005cf7:	ff a1 b2 ff ff ff    	jmpq   *-0x4e(%rcx)
ffffffffc0005cfd:	ff                   	(bad)  
ffffffffc0005cfe:	ff                   	(bad)  
ffffffffc0005cff:	ff 26                	jmpq   *(%rsi)
ffffffffc0005d01:	b3 ff                	mov    $0xff,%bl
ffffffffc0005d03:	ff                   	(bad)  
ffffffffc0005d04:	ff                   	(bad)  
ffffffffc0005d05:	ff                   	(bad)  
ffffffffc0005d06:	ff                   	(bad)  
ffffffffc0005d07:	ff 13                	callq  *(%rbx)
ffffffffc0005d09:	b3 ff                	mov    $0xff,%bl
ffffffffc0005d0b:	ff                   	(bad)  
ffffffffc0005d0c:	ff                   	(bad)  
ffffffffc0005d0d:	ff                   	(bad)  
ffffffffc0005d0e:	ff                   	(bad)  
ffffffffc0005d0f:	ff 2e                	ljmp   *(%rsi)
ffffffffc0005d11:	b0 ff                	mov    $0xff,%al
ffffffffc0005d13:	ff                   	(bad)  
ffffffffc0005d14:	ff                   	(bad)  
ffffffffc0005d15:	ff                   	(bad)  
ffffffffc0005d16:	ff                   	(bad)  
ffffffffc0005d17:	ff                   	(bad)  
ffffffffc0005d18:	da b2 ff ff ff ff    	fidivl -0x1(%rdx)
ffffffffc0005d1e:	ff                   	(bad)  
ffffffffc0005d1f:	ff e0                	jmpq   *%rax
ffffffffc0005d21:	b0 ff                	mov    $0xff,%al
ffffffffc0005d23:	ff                   	(bad)  
ffffffffc0005d24:	ff                   	(bad)  
ffffffffc0005d25:	ff                   	(bad)  
ffffffffc0005d26:	ff                   	(bad)  
ffffffffc0005d27:	ff 65 b1             	jmpq   *-0x4f(%rbp)
ffffffffc0005d2a:	ff                   	(bad)  
ffffffffc0005d2b:	ff                   	(bad)  
ffffffffc0005d2c:	ff                   	(bad)  
ffffffffc0005d2d:	ff                   	(bad)  
ffffffffc0005d2e:	ff                   	(bad)  
ffffffffc0005d2f:	ff 52 b1             	callq  *-0x4f(%rdx)
ffffffffc0005d32:	ff                   	(bad)  
ffffffffc0005d33:	ff                   	(bad)  
ffffffffc0005d34:	ff                   	(bad)  
ffffffffc0005d35:	ff                   	(bad)  
ffffffffc0005d36:	ff                   	(bad)  
ffffffffc0005d37:	ff b1 b1 ff ff ff    	pushq  -0x4f(%rcx)
ffffffffc0005d3d:	ff                   	(bad)  
ffffffffc0005d3e:	ff                   	(bad)  
ffffffffc0005d3f:	ff 9e b1 ff ff ff    	lcall  *-0x4f(%rsi)
ffffffffc0005d45:	ff                   	(bad)  
ffffffffc0005d46:	ff                   	(bad)  
ffffffffc0005d47:	ff 8b b1 ff ff ff    	decl   -0x4f(%rbx)
ffffffffc0005d4d:	ff                   	(bad)  
ffffffffc0005d4e:	ff                   	(bad)  
ffffffffc0005d4f:	ff                   	(bad)  
ffffffffc0005d50:	78 b1                	js     ffffffffc0005d03 <.refptr.asm_isr0+0x5c3>
ffffffffc0005d52:	ff                   	(bad)  
ffffffffc0005d53:	ff                   	(bad)  
ffffffffc0005d54:	ff                   	(bad)  
ffffffffc0005d55:	ff                   	(bad)  
ffffffffc0005d56:	ff                   	(bad)  
ffffffffc0005d57:	ff c4                	inc    %esp
ffffffffc0005d59:	b1 ff                	mov    $0xff,%cl
ffffffffc0005d5b:	ff                   	(bad)  
ffffffffc0005d5c:	ff                   	(bad)  
ffffffffc0005d5d:	ff                   	(bad)  
ffffffffc0005d5e:	ff                   	(bad)  
ffffffffc0005d5f:	ff                   	(bad)  
ffffffffc0005d60:	3f                   	(bad)  
ffffffffc0005d61:	b1 ff                	mov    $0xff,%cl
ffffffffc0005d63:	ff                   	(bad)  
ffffffffc0005d64:	ff                   	(bad)  
ffffffffc0005d65:	ff                   	(bad)  
ffffffffc0005d66:	ff                   	(bad)  
ffffffffc0005d67:	ff 13                	callq  *(%rbx)
ffffffffc0005d69:	b0 ff                	mov    $0xff,%al
ffffffffc0005d6b:	ff                   	(bad)  
ffffffffc0005d6c:	ff                   	(bad)  
ffffffffc0005d6d:	ff                   	(bad)  
ffffffffc0005d6e:	ff                   	(bad)  
ffffffffc0005d6f:	ff 4c b0 ff          	decl   -0x1(%rax,%rsi,4)
ffffffffc0005d73:	ff                   	(bad)  
ffffffffc0005d74:	ff                   	(bad)  
ffffffffc0005d75:	ff                   	(bad)  
ffffffffc0005d76:	ff                   	(bad)  
ffffffffc0005d77:	ff                   	(bad)  
ffffffffc0005d78:	39 b0 ff ff ff ff    	cmp    %esi,-0x1(%rax)
ffffffffc0005d7e:	ff                   	(bad)  
ffffffffc0005d7f:	ff 85 b0 ff ff ff    	incl   -0x50(%rbp)
ffffffffc0005d85:	ff                   	(bad)  
ffffffffc0005d86:	ff                   	(bad)  
ffffffffc0005d87:	ff 72 b0             	pushq  -0x50(%rdx)
ffffffffc0005d8a:	ff                   	(bad)  
ffffffffc0005d8b:	ff                   	(bad)  
ffffffffc0005d8c:	ff                   	(bad)  
ffffffffc0005d8d:	ff                   	(bad)  
ffffffffc0005d8e:	ff                   	(bad)  
ffffffffc0005d8f:	ff 5f b0             	lcall  *-0x50(%rdi)
ffffffffc0005d92:	ff                   	(bad)  
ffffffffc0005d93:	ff                   	(bad)  
ffffffffc0005d94:	ff                   	(bad)  
ffffffffc0005d95:	ff                   	(bad)  
ffffffffc0005d96:	ff                   	(bad)  
ffffffffc0005d97:	ff 26                	jmpq   *(%rsi)
ffffffffc0005d99:	b0 ff                	mov    $0xff,%al
ffffffffc0005d9b:	ff                   	(bad)  
ffffffffc0005d9c:	ff                   	(bad)  
ffffffffc0005d9d:	ff                   	(bad)  
ffffffffc0005d9e:	ff                   	(bad)  
ffffffffc0005d9f:	ff 73 b0             	pushq  -0x50(%rbx)
ffffffffc0005da2:	ff                   	(bad)  
ffffffffc0005da3:	ff                   	(bad)  
ffffffffc0005da4:	ff                   	(bad)  
ffffffffc0005da5:	ff                   	(bad)  
ffffffffc0005da6:	ff                   	(bad)  
ffffffffc0005da7:	ff ac b0 ff ff ff ff 	ljmp   *-0x1(%rax,%rsi,4)
ffffffffc0005dae:	ff                   	(bad)  
ffffffffc0005daf:	ff 99 b0 ff ff ff    	lcall  *-0x50(%rcx)
ffffffffc0005db5:	ff                   	(bad)  
ffffffffc0005db6:	ff                   	(bad)  
ffffffffc0005db7:	ff 90 b1 ff ff ff    	callq  *-0x4f(%rax)
ffffffffc0005dbd:	ff                   	(bad)  
ffffffffc0005dbe:	ff                   	(bad)  
ffffffffc0005dbf:	ff                   	(bad)  
ffffffffc0005dc0:	7d b1                	jge    ffffffffc0005d73 <.refptr.asm_isr0+0x633>
ffffffffc0005dc2:	ff                   	(bad)  
ffffffffc0005dc3:	ff                   	(bad)  
ffffffffc0005dc4:	ff                   	(bad)  
ffffffffc0005dc5:	ff                   	(bad)  
ffffffffc0005dc6:	ff                   	(bad)  
ffffffffc0005dc7:	ff 6a b1             	ljmp   *-0x4f(%rdx)
ffffffffc0005dca:	ff                   	(bad)  
ffffffffc0005dcb:	ff                   	(bad)  
ffffffffc0005dcc:	ff                   	(bad)  
ffffffffc0005dcd:	ff                   	(bad)  
ffffffffc0005dce:	ff                   	(bad)  
ffffffffc0005dcf:	ff 57 b1             	callq  *-0x4f(%rdi)
ffffffffc0005dd2:	ff                   	(bad)  
ffffffffc0005dd3:	ff                   	(bad)  
ffffffffc0005dd4:	ff                   	(bad)  
ffffffffc0005dd5:	ff                   	(bad)  
ffffffffc0005dd6:	ff                   	(bad)  
ffffffffc0005dd7:	ff a3 b1 ff ff ff    	jmpq   *-0x4f(%rbx)
ffffffffc0005ddd:	ff                   	(bad)  
ffffffffc0005dde:	ff                   	(bad)  
ffffffffc0005ddf:	ff 86 b0 ff ff ff    	incl   -0x50(%rsi)
ffffffffc0005de5:	ff                   	(bad)  
ffffffffc0005de6:	ff                   	(bad)  
ffffffffc0005de7:	ff 00                	incl   (%rax)
ffffffffc0005de9:	00 00                	add    %al,(%rax)
ffffffffc0005deb:	00 00                	add    %al,(%rax)
ffffffffc0005ded:	00 00                	add    %al,(%rax)
	...

ffffffffc0005df0 <.refptr.asm_port_in32>:
ffffffffc0005df0:	b1 03                	mov    $0x3,%cl
ffffffffc0005df2:	00 c0                	add    %al,%al
ffffffffc0005df4:	ff                   	(bad)  
ffffffffc0005df5:	ff                   	(bad)  
ffffffffc0005df6:	ff                   	(bad)  
ffffffffc0005df7:	ff 00                	incl   (%rax)
ffffffffc0005df9:	00 00                	add    %al,(%rax)
ffffffffc0005dfb:	00 00                	add    %al,(%rax)
ffffffffc0005dfd:	00 00                	add    %al,(%rax)
	...

ffffffffc0005e00 <.refptr.asm_port_out32>:
ffffffffc0005e00:	c9                   	leaveq 
ffffffffc0005e01:	03 00                	add    (%rax),%eax
ffffffffc0005e03:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005e06:	ff                   	(bad)  
ffffffffc0005e07:	ff 00                	incl   (%rax)
	...
ffffffffc0005e11:	00 00                	add    %al,(%rax)
ffffffffc0005e13:	20 00                	and    %al,(%rax)
ffffffffc0005e15:	00 00                	add    %al,(%rax)
ffffffffc0005e17:	20 00                	and    %al,(%rax)
ffffffffc0005e19:	00 00                	add    %al,(%rax)
ffffffffc0005e1b:	20 00                	and    %al,(%rax)
ffffffffc0005e1d:	00 00                	add    %al,(%rax)
ffffffffc0005e1f:	20                   	.byte 0x20

ffffffffc0005e20 <.refptr.__vprintf_raw>:
ffffffffc0005e20:	20 3b                	and    %bh,(%rbx)
ffffffffc0005e22:	00 c0                	add    %al,%al
ffffffffc0005e24:	ff                   	(bad)  
ffffffffc0005e25:	ff                   	(bad)  
ffffffffc0005e26:	ff                   	(bad)  
ffffffffc0005e27:	ff 00                	incl   (%rax)
ffffffffc0005e29:	00 00                	add    %al,(%rax)
ffffffffc0005e2b:	00 00                	add    %al,(%rax)
ffffffffc0005e2d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005e30 <.refptr.asm_lock_release>:
ffffffffc0005e30:	79 03                	jns    ffffffffc0005e35 <.refptr.asm_lock_release+0x5>
ffffffffc0005e32:	00 c0                	add    %al,%al
ffffffffc0005e34:	ff                   	(bad)  
ffffffffc0005e35:	ff                   	(bad)  
ffffffffc0005e36:	ff                   	(bad)  
ffffffffc0005e37:	ff 00                	incl   (%rax)
ffffffffc0005e39:	00 00                	add    %al,(%rax)
ffffffffc0005e3b:	00 00                	add    %al,(%rax)
ffffffffc0005e3d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005e40 <.refptr.asm_lock_acquire>:
ffffffffc0005e40:	60                   	(bad)  
ffffffffc0005e41:	03 00                	add    (%rax),%eax
ffffffffc0005e43:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005e46:	ff                   	(bad)  
ffffffffc0005e47:	ff 00                	incl   (%rax)
ffffffffc0005e49:	00 00                	add    %al,(%rax)
ffffffffc0005e4b:	00 00                	add    %al,(%rax)
ffffffffc0005e4d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005e50 <.refptr.FONT_SPLEEN>:
ffffffffc0005e50:	e0 72                	loopne ffffffffc0005ec4 <.refptr.lock_create+0x44>
ffffffffc0005e52:	00 c0                	add    %al,%al
ffffffffc0005e54:	ff                   	(bad)  
ffffffffc0005e55:	ff                   	(bad)  
ffffffffc0005e56:	ff                   	(bad)  
ffffffffc0005e57:	ff 00                	incl   (%rax)
ffffffffc0005e59:	00 00                	add    %al,(%rax)
ffffffffc0005e5b:	00 00                	add    %al,(%rax)
ffffffffc0005e5d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005e60 <.refptr.gfx_fill_rect>:
ffffffffc0005e60:	b0 18                	mov    $0x18,%al
ffffffffc0005e62:	00 c0                	add    %al,%al
ffffffffc0005e64:	ff                   	(bad)  
ffffffffc0005e65:	ff                   	(bad)  
ffffffffc0005e66:	ff                   	(bad)  
ffffffffc0005e67:	ff 00                	incl   (%rax)
ffffffffc0005e69:	00 00                	add    %al,(%rax)
ffffffffc0005e6b:	00 00                	add    %al,(%rax)
ffffffffc0005e6d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005e70 <.refptr.gfx_print_char>:
ffffffffc0005e70:	60                   	(bad)  
ffffffffc0005e71:	14 00                	adc    $0x0,%al
ffffffffc0005e73:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005e76:	ff                   	(bad)  
ffffffffc0005e77:	ff 00                	incl   (%rax)
ffffffffc0005e79:	00 00                	add    %al,(%rax)
ffffffffc0005e7b:	00 00                	add    %al,(%rax)
ffffffffc0005e7d:	00 00                	add    %al,(%rax)
	...

ffffffffc0005e80 <.refptr.lock_create>:
ffffffffc0005e80:	c0 21 00             	shlb   $0x0,(%rcx)
ffffffffc0005e83:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005e86:	ff                   	(bad)  
ffffffffc0005e87:	ff 00                	incl   (%rax)
ffffffffc0005e89:	00 00                	add    %al,(%rax)
ffffffffc0005e8b:	00 00                	add    %al,(%rax)
ffffffffc0005e8d:	00 00                	add    %al,(%rax)
ffffffffc0005e8f:	00 73 72             	add    %dh,0x72(%rbx)
ffffffffc0005e92:	63 2f                	movslq (%rdi),%ebp
ffffffffc0005e94:	6b 65 72 6e          	imul   $0x6e,0x72(%rbp),%esp
ffffffffc0005e98:	65 6c                	gs insb (%dx),%es:(%rdi)
ffffffffc0005e9a:	2f                   	(bad)  
ffffffffc0005e9b:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0005e9c:	65 6d                	gs insl (%dx),%es:(%rdi)
ffffffffc0005e9e:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005e9f:	72 79                	jb     ffffffffc0005f1a <.refptr.lock_create+0x9a>
ffffffffc0005ea1:	2f                   	(bad)  
ffffffffc0005ea2:	70 61                	jo     ffffffffc0005f05 <.refptr.lock_create+0x85>
ffffffffc0005ea4:	67 69 6e 67 2e 63 00 	imul   $0x4100632e,0x67(%esi),%ebp
ffffffffc0005eab:	41 
ffffffffc0005eac:	73 73                	jae    ffffffffc0005f21 <.refptr.lock_create+0xa1>
ffffffffc0005eae:	65 72 74             	gs jb  ffffffffc0005f25 <.refptr.lock_create+0xa5>
ffffffffc0005eb1:	69 6f 6e 20 46 61 69 	imul   $0x69614620,0x6e(%rdi),%ebp
ffffffffc0005eb8:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005eb9:	65 64 00 21          	gs add %ah,%fs:(%rcx)
ffffffffc0005ebd:	28 70 61             	sub    %dh,0x61(%rax)
ffffffffc0005ec0:	26 28 50 41          	sub    %dl,%es:0x41(%rax)
ffffffffc0005ec4:	47                   	rex.RXB
ffffffffc0005ec5:	45 5f                	rex.RB pop %r15
ffffffffc0005ec7:	34 4b                	xor    $0x4b,%al
ffffffffc0005ec9:	42 5f                	rex.X pop %rdi
ffffffffc0005ecb:	53                   	push   %rbx
ffffffffc0005ecc:	49 5a                	rex.WB pop %r10
ffffffffc0005ece:	45 2d 31 29 29 00    	rex.RB sub $0x292931,%eax
ffffffffc0005ed4:	21 28                	and    %ebp,(%rax)
ffffffffc0005ed6:	76 61                	jbe    ffffffffc0005f39 <.refptr.lock_create+0xb9>
ffffffffc0005ed8:	26 28 50 41          	sub    %dl,%es:0x41(%rax)
ffffffffc0005edc:	47                   	rex.RXB
ffffffffc0005edd:	45 5f                	rex.RB pop %r15
ffffffffc0005edf:	34 4b                	xor    $0x4b,%al
ffffffffc0005ee1:	42 5f                	rex.X pop %rdi
ffffffffc0005ee3:	53                   	push   %rbx
ffffffffc0005ee4:	49 5a                	rex.WB pop %r10
ffffffffc0005ee6:	45 2d 31 29 29 00    	rex.RB sub $0x292931,%eax
ffffffffc0005eec:	00 00                	add    %al,(%rax)
ffffffffc0005eee:	00 00                	add    %al,(%rax)
ffffffffc0005ef0:	21 28                	and    %ebp,(%rax)
ffffffffc0005ef2:	74 5b                	je     ffffffffc0005f4f <.refptr.lock_create+0xcf>
ffffffffc0005ef4:	47                   	rex.RXB
ffffffffc0005ef5:	45 54                	rex.RB push %r12
ffffffffc0005ef7:	5f                   	pop    %rdi
ffffffffc0005ef8:	50                   	push   %rax
ffffffffc0005ef9:	54                   	push   %rsp
ffffffffc0005efa:	5f                   	pop    %rdi
ffffffffc0005efb:	49                   	rex.WB
ffffffffc0005efc:	4e                   	rex.WRX
ffffffffc0005efd:	44                   	rex.R
ffffffffc0005efe:	45 58                	rex.RB pop %r8
ffffffffc0005f00:	28 76 61             	sub    %dh,0x61(%rsi)
ffffffffc0005f03:	29 5d 26             	sub    %ebx,0x26(%rbp)
ffffffffc0005f06:	50                   	push   %rax
ffffffffc0005f07:	41                   	rex.B
ffffffffc0005f08:	47                   	rex.RXB
ffffffffc0005f09:	45 5f                	rex.RB pop %r15
ffffffffc0005f0b:	50                   	push   %rax
ffffffffc0005f0c:	52                   	push   %rdx
ffffffffc0005f0d:	45 53                	rex.RB push %r11
ffffffffc0005f0f:	45                   	rex.RB
ffffffffc0005f10:	4e 54                	rex.WRX push %rsp
ffffffffc0005f12:	29 00                	sub    %eax,(%rax)
	...
ffffffffc0005f20:	70 61                	jo     ffffffffc0005f83 <.refptr.lock_create+0x103>
ffffffffc0005f22:	67 69 6e 67 5f 75 6e 	imul   $0x6d6e755f,0x67(%esi),%ebp
ffffffffc0005f29:	6d 
ffffffffc0005f2a:	61                   	(bad)  
ffffffffc0005f2b:	70 5f                	jo     ffffffffc0005f8c <.refptr.lock_create+0x10c>
ffffffffc0005f2d:	70 61                	jo     ffffffffc0005f90 <.refptr.lock_create+0x110>
ffffffffc0005f2f:	67 65 00 00          	add    %al,%gs:(%eax)
	...
ffffffffc0005f3f:	00 70 61             	add    %dh,0x61(%rax)
ffffffffc0005f42:	67 69 6e 67 5f 72 65 	imul   $0x7665725f,0x67(%esi),%ebp
ffffffffc0005f49:	76 
ffffffffc0005f4a:	65 72 73             	gs jb  ffffffffc0005fc0 <.refptr.lock_create+0x140>
ffffffffc0005f4d:	65 5f                	gs pop %rdi
ffffffffc0005f4f:	74 72                	je     ffffffffc0005fc3 <.refptr.lock_create+0x143>
ffffffffc0005f51:	61                   	(bad)  
ffffffffc0005f52:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc0005f53:	73 6c                	jae    ffffffffc0005fc1 <.refptr.lock_create+0x141>
ffffffffc0005f55:	61                   	(bad)  
ffffffffc0005f56:	74 65                	je     ffffffffc0005fbd <.refptr.lock_create+0x13d>
	...
ffffffffc0005f60:	70 61                	jo     ffffffffc0005fc3 <.refptr.lock_create+0x143>
ffffffffc0005f62:	67 69 6e 67 5f 6d 61 	imul   $0x70616d5f,0x67(%esi),%ebp
ffffffffc0005f69:	70 
ffffffffc0005f6a:	5f                   	pop    %rdi
ffffffffc0005f6b:	70 61                	jo     ffffffffc0005fce <.refptr.lock_create+0x14e>
ffffffffc0005f6d:	67 65 00 73 72       	add    %dh,%gs:0x72(%ebx)
ffffffffc0005f72:	63 2f                	movslq (%rdi),%ebp
ffffffffc0005f74:	6b 65 72 6e          	imul   $0x6e,0x72(%rbp),%esp
ffffffffc0005f78:	65 6c                	gs insb (%dx),%es:(%rdi)
ffffffffc0005f7a:	2f                   	(bad)  
ffffffffc0005f7b:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0005f7c:	65 6d                	gs insl (%dx),%es:(%rdi)
ffffffffc0005f7e:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005f7f:	72 79                	jb     ffffffffc0005ffa <.refptr.paging_map_page+0x2a>
ffffffffc0005f81:	2f                   	(bad)  
ffffffffc0005f82:	70 6d                	jo     ffffffffc0005ff1 <.refptr.paging_map_page+0x21>
ffffffffc0005f84:	2e 63 00             	movslq %cs:(%rax),%eax
ffffffffc0005f87:	41 73 73             	rex.B jae ffffffffc0005ffd <.refptr.paging_map_page+0x2d>
ffffffffc0005f8a:	65 72 74             	gs jb  ffffffffc0006001 <.refptr.paging_map_page+0x31>
ffffffffc0005f8d:	69 6f 6e 20 46 61 69 	imul   $0x69614620,0x6e(%rdi),%ebp
ffffffffc0005f94:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005f95:	65 64 00 6b 61       	gs add %ch,%fs:0x61(%rbx)
ffffffffc0005f9a:	2d 3e 6e 5f 70       	sub    $0x705f6e3e,%eax
ffffffffc0005f9f:	61                   	(bad)  
ffffffffc0005fa0:	5f                   	pop    %rdi
ffffffffc0005fa1:	69 64 78 3c 6b 61 2d 	imul   $0x3e2d616b,0x3c(%rax,%rdi,2),%esp
ffffffffc0005fa8:	3e 
ffffffffc0005fa9:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0005faa:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0005fab:	61                   	(bad)  
ffffffffc0005fac:	70 5f                	jo     ffffffffc000600d <.refptr.paging_map_page+0x3d>
ffffffffc0005fae:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005faf:	00 69 3c             	add    %ch,0x3c(%rcx)
ffffffffc0005fb2:	70 6d                	jo     ffffffffc0006021 <.refptr.pm_set_free+0x1>
ffffffffc0005fb4:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0005fb5:	34 00                	xor    $0x0,%al
ffffffffc0005fb7:	00 70 6d             	add    %dh,0x6d(%rax)
ffffffffc0005fba:	5f                   	pop    %rdi
ffffffffc0005fbb:	69 6e 69 74 00 00 10 	imul   $0x10000074,0x69(%rsi),%ebp
ffffffffc0005fc2:	00 00                	add    %al,(%rax)
ffffffffc0005fc4:	00 00                	add    %al,(%rax)
ffffffffc0005fc6:	00 00                	add    %al,(%rax)
ffffffffc0005fc8:	00 10                	add    %dl,(%rax)
ffffffffc0005fca:	00 00                	add    %al,(%rax)
ffffffffc0005fcc:	00 00                	add    %al,(%rax)
	...

ffffffffc0005fd0 <.refptr.paging_map_page>:
ffffffffc0005fd0:	c0 19 00             	rcrb   $0x0,(%rcx)
ffffffffc0005fd3:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0005fd6:	ff                   	(bad)  
ffffffffc0005fd7:	ff 00                	incl   (%rax)
ffffffffc0005fd9:	00 00                	add    %al,(%rax)
ffffffffc0005fdb:	00 00                	add    %al,(%rax)
ffffffffc0005fdd:	00 00                	add    %al,(%rax)
ffffffffc0005fdf:	00 4e 6f             	add    %cl,0x6f(%rsi)
ffffffffc0005fe2:	74 20                	je     ffffffffc0006004 <.refptr.paging_map_page+0x34>
ffffffffc0005fe4:	65 6e                	outsb  %gs:(%rsi),(%dx)
ffffffffc0005fe6:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005fe7:	75 67                	jne    ffffffffc0006050 <.refptr.___KERNEL_BASE_VA__>
ffffffffc0005fe9:	68 74 20 4d 65       	pushq  $0x654d2074
ffffffffc0005fee:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0005fef:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005ff0:	72 79                	jb     ffffffffc000606b <.refptr.fatal_error+0xb>
ffffffffc0005ff2:	21 0a                	and    %ecx,(%rdx)
ffffffffc0005ff4:	00 4e 6f             	add    %cl,0x6f(%rsi)
ffffffffc0005ff7:	74 20                	je     ffffffffc0006019 <.refptr.paging_unmap_page+0x9>
ffffffffc0005ff9:	65 6e                	outsb  %gs:(%rsi),(%dx)
ffffffffc0005ffb:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0005ffc:	75 67                	jne    ffffffffc0006065 <.refptr.fatal_error+0x5>
ffffffffc0005ffe:	68 74 20 6d 65       	pushq  $0x656d2074
ffffffffc0006003:	6d                   	insl   (%dx),%es:(%rdi)
ffffffffc0006004:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0006005:	72 79                	jb     ffffffffc0006080 <.refptr.asm_get_cr2>
ffffffffc0006007:	21 00                	and    %eax,(%rax)
ffffffffc0006009:	00 00                	add    %al,(%rax)
ffffffffc000600b:	00 00                	add    %al,(%rax)
ffffffffc000600d:	00 00                	add    %al,(%rax)
	...

ffffffffc0006010 <.refptr.paging_unmap_page>:
ffffffffc0006010:	b0 1c                	mov    $0x1c,%al
ffffffffc0006012:	00 c0                	add    %al,%al
ffffffffc0006014:	ff                   	(bad)  
ffffffffc0006015:	ff                   	(bad)  
ffffffffc0006016:	ff                   	(bad)  
ffffffffc0006017:	ff 00                	incl   (%rax)
ffffffffc0006019:	00 00                	add    %al,(%rax)
ffffffffc000601b:	00 00                	add    %al,(%rax)
ffffffffc000601d:	00 00                	add    %al,(%rax)
	...

ffffffffc0006020 <.refptr.pm_set_free>:
ffffffffc0006020:	40 1f                	rex (bad) 
ffffffffc0006022:	00 c0                	add    %al,%al
ffffffffc0006024:	ff                   	(bad)  
ffffffffc0006025:	ff                   	(bad)  
ffffffffc0006026:	ff                   	(bad)  
ffffffffc0006027:	ff 00                	incl   (%rax)
ffffffffc0006029:	00 00                	add    %al,(%rax)
ffffffffc000602b:	00 00                	add    %al,(%rax)
ffffffffc000602d:	00 00                	add    %al,(%rax)
	...

ffffffffc0006030 <.refptr.paging_reverse_translate>:
ffffffffc0006030:	c0 1b 00             	rcrb   $0x0,(%rbx)
ffffffffc0006033:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0006036:	ff                   	(bad)  
ffffffffc0006037:	ff 00                	incl   (%rax)
ffffffffc0006039:	00 00                	add    %al,(%rax)
ffffffffc000603b:	00 00                	add    %al,(%rax)
ffffffffc000603d:	00 00                	add    %al,(%rax)
	...

ffffffffc0006040 <.refptr.regiser_isr_handler>:
ffffffffc0006040:	b0 09                	mov    $0x9,%al
ffffffffc0006042:	00 c0                	add    %al,%al
ffffffffc0006044:	ff                   	(bad)  
ffffffffc0006045:	ff                   	(bad)  
ffffffffc0006046:	ff                   	(bad)  
ffffffffc0006047:	ff 00                	incl   (%rax)
ffffffffc0006049:	00 00                	add    %al,(%rax)
ffffffffc000604b:	00 00                	add    %al,(%rax)
ffffffffc000604d:	00 00                	add    %al,(%rax)
	...

ffffffffc0006050 <.refptr.___KERNEL_BASE_VA__>:
ffffffffc0006050:	00 00                	add    %al,(%rax)
ffffffffc0006052:	00 c0                	add    %al,%al
ffffffffc0006054:	ff                   	(bad)  
ffffffffc0006055:	ff                   	(bad)  
ffffffffc0006056:	ff                   	(bad)  
ffffffffc0006057:	ff 00                	incl   (%rax)
ffffffffc0006059:	00 00                	add    %al,(%rax)
ffffffffc000605b:	00 00                	add    %al,(%rax)
ffffffffc000605d:	00 00                	add    %al,(%rax)
	...

ffffffffc0006060 <.refptr.fatal_error>:
ffffffffc0006060:	20 05 00 c0 ff ff    	and    %al,-0x4000(%rip)        # ffffffffc0002066 <vm_reserve+0x46>
ffffffffc0006066:	ff                   	(bad)  
ffffffffc0006067:	ff 00                	incl   (%rax)
ffffffffc0006069:	00 00                	add    %al,(%rax)
ffffffffc000606b:	00 00                	add    %al,(%rax)
ffffffffc000606d:	00 00                	add    %al,(%rax)
	...

ffffffffc0006070 <.refptr.pm_get_free>:
ffffffffc0006070:	c0 1e 00             	rcrb   $0x0,(%rsi)
ffffffffc0006073:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0006076:	ff                   	(bad)  
ffffffffc0006077:	ff 00                	incl   (%rax)
ffffffffc0006079:	00 00                	add    %al,(%rax)
ffffffffc000607b:	00 00                	add    %al,(%rax)
ffffffffc000607d:	00 00                	add    %al,(%rax)
	...

ffffffffc0006080 <.refptr.asm_get_cr2>:
ffffffffc0006080:	f0 03 00             	lock add (%rax),%eax
ffffffffc0006083:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0006086:	ff                   	(bad)  
ffffffffc0006087:	ff 00                	incl   (%rax)
ffffffffc0006089:	00 00                	add    %al,(%rax)
ffffffffc000608b:	00 00                	add    %al,(%rax)
ffffffffc000608d:	00 00                	add    %al,(%rax)
ffffffffc000608f:	00 4c 6f 63          	add    %cl,0x63(%rdi,%rbp,2)
ffffffffc0006093:	6b 20 4c             	imul   $0x4c,(%rax),%esp
ffffffffc0006096:	69 73 74 20 4c 65 6e 	imul   $0x6e654c20,0x74(%rbx),%esi
ffffffffc000609d:	3a 20                	cmp    (%rax),%ah
ffffffffc000609f:	25 6c 6c 75 0a       	and    $0xa756c6c,%eax
ffffffffc00060a4:	00 46 69             	add    %al,0x69(%rsi)
ffffffffc00060a7:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00060a8:	61                   	(bad)  
ffffffffc00060a9:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00060aa:	20 4c 6f 63          	and    %cl,0x63(%rdi,%rbp,2)
ffffffffc00060ae:	6b 20 41             	imul   $0x41,(%rax),%esp
ffffffffc00060b1:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00060b2:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00060b3:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00060b4:	63 61 74             	movslq 0x74(%rcx),%esp
ffffffffc00060b7:	65 64 21 0a          	gs and %ecx,%fs:(%rdx)
ffffffffc00060bb:	00 00                	add    %al,(%rax)
ffffffffc00060bd:	00 00                	add    %al,(%rax)
ffffffffc00060bf:	00 4d 61             	add    %cl,0x61(%rbp)
ffffffffc00060c2:	78 20                	js     ffffffffc00060e4 <.refptr.asm_get_cr2+0x64>
ffffffffc00060c4:	50                   	push   %rax
ffffffffc00060c5:	72 6f                	jb     ffffffffc0006136 <.refptr.hpet_timer_get_us+0x26>
ffffffffc00060c7:	63 65 73             	movslq 0x73(%rbp),%esp
ffffffffc00060ca:	73 20                	jae    ffffffffc00060ec <.refptr.asm_get_cr2+0x6c>
ffffffffc00060cc:	49                   	rex.WB
ffffffffc00060cd:	44 3a 20             	cmp    (%rax),%r12b
ffffffffc00060d0:	25 6c 6c 75 0a       	and    $0xa756c6c,%eax
ffffffffc00060d5:	00 46 69             	add    %al,0x69(%rsi)
ffffffffc00060d8:	6e                   	outsb  %ds:(%rsi),(%dx)
ffffffffc00060d9:	61                   	(bad)  
ffffffffc00060da:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00060db:	20 50 72             	and    %dl,0x72(%rax)
ffffffffc00060de:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00060df:	63 65 73             	movslq 0x73(%rbp),%esp
ffffffffc00060e2:	73 20                	jae    ffffffffc0006104 <.refptr.asm_get_cr2+0x84>
ffffffffc00060e4:	41 6c                	rex.B insb (%dx),%es:(%rdi)
ffffffffc00060e6:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00060e7:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00060e8:	63 61 74             	movslq 0x74(%rcx),%esp
ffffffffc00060eb:	65 64 21 0a          	gs and %ecx,%fs:(%rdx)
ffffffffc00060ef:	00 52 65             	add    %dl,0x65(%rdx)
ffffffffc00060f2:	73 63                	jae    ffffffffc0006157 <.refptr.hpet_timer_get_us+0x47>
ffffffffc00060f4:	68 65 64 75 6c       	pushq  $0x6c756465
ffffffffc00060f9:	65 3a 20             	cmp    %gs:(%rax),%ah
ffffffffc00060fc:	25 6c 6c 75 75       	and    $0x75756c6c,%eax
ffffffffc0006101:	73 20                	jae    ffffffffc0006123 <.refptr.hpet_timer_get_us+0x13>
ffffffffc0006103:	28 25 75 29 0a 00    	sub    %ah,0xa2975(%rip)        # ffffffffc00a8a7e <___KERNEL_UNMAP_END__+0x9ee9e>
ffffffffc0006109:	00 00                	add    %al,(%rax)
ffffffffc000610b:	00 00                	add    %al,(%rax)
ffffffffc000610d:	00 00                	add    %al,(%rax)
	...

ffffffffc0006110 <.refptr.hpet_timer_get_us>:
ffffffffc0006110:	b0 05                	mov    $0x5,%al
ffffffffc0006112:	00 c0                	add    %al,%al
ffffffffc0006114:	ff                   	(bad)  
ffffffffc0006115:	ff                   	(bad)  
ffffffffc0006116:	ff                   	(bad)  
ffffffffc0006117:	ff 00                	incl   (%rax)
ffffffffc0006119:	00 00                	add    %al,(%rax)
ffffffffc000611b:	00 00                	add    %al,(%rax)
ffffffffc000611d:	00 00                	add    %al,(%rax)
ffffffffc000611f:	00 4d 61             	add    %cl,0x61(%rbp)
ffffffffc0006122:	78 20                	js     ffffffffc0006144 <.refptr.hpet_timer_get_us+0x34>
ffffffffc0006124:	54                   	push   %rsp
ffffffffc0006125:	68 72 65 61 64       	pushq  $0x64616572
ffffffffc000612a:	20 49 44             	and    %cl,0x44(%rcx)
ffffffffc000612d:	3a 20                	cmp    (%rax),%ah
ffffffffc000612f:	25 6c 6c 75 0a       	and    $0xa756c6c,%eax
ffffffffc0006134:	00 73 72             	add    %dh,0x72(%rbx)
ffffffffc0006137:	63 2f                	movslq (%rdi),%ebp
ffffffffc0006139:	6b 65 72 6e          	imul   $0x6e,0x72(%rbp),%esp
ffffffffc000613d:	65 6c                	gs insb (%dx),%es:(%rdi)
ffffffffc000613f:	2f                   	(bad)  
ffffffffc0006140:	70 72                	jo     ffffffffc00061b4 <.refptr.asm_clear_thread_data+0x24>
ffffffffc0006142:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0006143:	63 65 73             	movslq 0x73(%rbp),%esp
ffffffffc0006146:	73 2f                	jae    ffffffffc0006177 <.refptr.hpet_timer_get_us+0x67>
ffffffffc0006148:	74 68                	je     ffffffffc00061b2 <.refptr.asm_clear_thread_data+0x22>
ffffffffc000614a:	72 65                	jb     ffffffffc00061b1 <.refptr.asm_clear_thread_data+0x21>
ffffffffc000614c:	61                   	(bad)  
ffffffffc000614d:	64 2e 63 00          	fs movslq %cs:(%rax),%eax
ffffffffc0006151:	4e 75 6c             	rex.WRX jne ffffffffc00061c0 <.refptr.asm_clear_thread_data+0x30>
ffffffffc0006154:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0006155:	20 50 6f             	and    %dl,0x6f(%rax)
ffffffffc0006158:	69 6e 74 65 72 00 70 	imul   $0x70007265,0x74(%rsi),%ebp
ffffffffc000615f:	00 65 00             	add    %ah,0x0(%rbp)
ffffffffc0006162:	46 69 6e 61 6c 20 54 	rex.RX imul $0x6854206c,0x61(%rsi),%r13d
ffffffffc0006169:	68 
ffffffffc000616a:	72 65                	jb     ffffffffc00061d1 <.refptr.asm_clear_thread_data+0x41>
ffffffffc000616c:	61                   	(bad)  
ffffffffc000616d:	64 20 41 6c          	and    %al,%fs:0x6c(%rcx)
ffffffffc0006171:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc0006172:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0006173:	63 61 74             	movslq 0x74(%rcx),%esp
ffffffffc0006176:	65 64 21 0a          	gs and %ecx,%fs:(%rdx)
ffffffffc000617a:	00 00                	add    %al,(%rax)
ffffffffc000617c:	00 00                	add    %al,(%rax)
ffffffffc000617e:	00 00                	add    %al,(%rax)
ffffffffc0006180:	63 72 65             	movslq 0x65(%rdx),%esi
ffffffffc0006183:	61                   	(bad)  
ffffffffc0006184:	74 65                	je     ffffffffc00061eb <.refptr.asm_clear_thread_data+0x5b>
ffffffffc0006186:	5f                   	pop    %rdi
ffffffffc0006187:	74 68                	je     ffffffffc00061f1 <.refptr.asm_clear_thread_data+0x61>
ffffffffc0006189:	72 65                	jb     ffffffffc00061f0 <.refptr.asm_clear_thread_data+0x60>
ffffffffc000618b:	61                   	(bad)  
ffffffffc000618c:	64 00 00             	add    %al,%fs:(%rax)
	...

ffffffffc0006190 <.refptr.asm_clear_thread_data>:
ffffffffc0006190:	d0 03                	rolb   (%rbx)
ffffffffc0006192:	00 c0                	add    %al,%al
ffffffffc0006194:	ff                   	(bad)  
ffffffffc0006195:	ff                   	(bad)  
ffffffffc0006196:	ff                   	(bad)  
ffffffffc0006197:	ff 00                	incl   (%rax)
ffffffffc0006199:	00 00                	add    %al,(%rax)
ffffffffc000619b:	00 00                	add    %al,(%rax)
ffffffffc000619d:	00 00                	add    %al,(%rax)
ffffffffc000619f:	00 73 72             	add    %dh,0x72(%rbx)
ffffffffc00061a2:	63 2f                	movslq (%rdi),%ebp
ffffffffc00061a4:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00061a5:	69 62 63 2f 61 6c 6c 	imul   $0x6c6c612f,0x63(%rdx),%esp
ffffffffc00061ac:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00061ad:	63 2e                	movslq (%rsi),%ebp
ffffffffc00061af:	63 00                	movslq (%rax),%eax
ffffffffc00061b1:	41 73 73             	rex.B jae ffffffffc0006227 <.refptr.asm_clear_thread_data+0x97>
ffffffffc00061b4:	65 72 74             	gs jb  ffffffffc000622b <.refptr.asm_clear_thread_data+0x9b>
ffffffffc00061b7:	69 6f 6e 20 46 61 69 	imul   $0x69614620,0x6e(%rdi),%ebp
ffffffffc00061be:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00061bf:	65 64 00 70 67       	gs add %dh,%fs:0x67(%rax)
ffffffffc00061c4:	3d 3d 4d 45 4d       	cmp    $0x4d454d3d,%eax
ffffffffc00061c9:	5f                   	pop    %rdi
ffffffffc00061ca:	42                   	rex.X
ffffffffc00061cb:	4c                   	rex.WR
ffffffffc00061cc:	4f                   	rex.WRXB
ffffffffc00061cd:	43                   	rex.XB
ffffffffc00061ce:	4b 5f                	rex.WXB pop %r15
ffffffffc00061d0:	47                   	rex.RXB
ffffffffc00061d1:	45 54                	rex.RB push %r12
ffffffffc00061d3:	5f                   	pop    %rdi
ffffffffc00061d4:	4e                   	rex.WRX
ffffffffc00061d5:	45 58                	rex.RB pop %r8
ffffffffc00061d7:	54                   	push   %rsp
ffffffffc00061d8:	28 62 29             	sub    %ah,0x29(%rdx)
ffffffffc00061db:	00 4d 75             	add    %cl,0x75(%rbp)
ffffffffc00061de:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00061df:	74 69                	je     ffffffffc000624a <.refptr.vm_reserve+0xa>
ffffffffc00061e1:	70 6c                	jo     ffffffffc000624f <.refptr.vm_reserve+0xf>
ffffffffc00061e3:	69 63 61 74 69 6f 6e 	imul   $0x6e6f6974,0x61(%rbx),%esp
ffffffffc00061ea:	20 4f 76             	and    %cl,0x76(%rdi)
ffffffffc00061ed:	65 72 66             	gs jb  ffffffffc0006256 <.refptr.realloc+0x6>
ffffffffc00061f0:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc00061f1:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00061f2:	77 21                	ja     ffffffffc0006215 <.refptr.asm_clear_thread_data+0x85>
ffffffffc00061f4:	0a 00                	or     (%rax),%al
ffffffffc00061f6:	4e 6f                	rex.WRX outsl %ds:(%rsi),(%dx)
ffffffffc00061f8:	74 20                	je     ffffffffc000621a <.refptr.asm_clear_thread_data+0x8a>
ffffffffc00061fa:	65 6e                	outsb  %gs:(%rsi),(%dx)
ffffffffc00061fc:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc00061fd:	75 67                	jne    ffffffffc0006266 <FONT_SPLEEN_DATA+0x6>
ffffffffc00061ff:	68 20 4d 65 6d       	pushq  $0x6d654d20
ffffffffc0006204:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc0006205:	72 79                	jb     ffffffffc0006280 <FONT_SPLEEN_DATA+0x20>
ffffffffc0006207:	21 0a                	and    %ecx,(%rdx)
ffffffffc0006209:	00 6d 61             	add    %ch,0x61(%rbp)
ffffffffc000620c:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000620d:	6c                   	insb   (%dx),%es:(%rdi)
ffffffffc000620e:	6f                   	outsl  %ds:(%rsi),(%dx)
ffffffffc000620f:	63 00                	movslq (%rax),%eax
	...
ffffffffc0006225:	00 00                	add    %al,(%rax)
ffffffffc0006227:	00 f1                	add    %dh,%cl
ffffffffc0006229:	7f 00                	jg     ffffffffc000622b <.refptr.asm_clear_thread_data+0x9b>
ffffffffc000622b:	00 00                	add    %al,(%rax)
ffffffffc000622d:	00 00                	add    %al,(%rax)
	...

ffffffffc0006230 <.refptr.__asm_fill_zero>:
ffffffffc0006230:	80 43 00 c0          	addb   $0xc0,0x0(%rbx)
ffffffffc0006234:	ff                   	(bad)  
ffffffffc0006235:	ff                   	(bad)  
ffffffffc0006236:	ff                   	(bad)  
ffffffffc0006237:	ff 00                	incl   (%rax)
ffffffffc0006239:	00 00                	add    %al,(%rax)
ffffffffc000623b:	00 00                	add    %al,(%rax)
ffffffffc000623d:	00 00                	add    %al,(%rax)
	...

ffffffffc0006240 <.refptr.vm_reserve>:
ffffffffc0006240:	20 20                	and    %ah,(%rax)
ffffffffc0006242:	00 c0                	add    %al,%al
ffffffffc0006244:	ff                   	(bad)  
ffffffffc0006245:	ff                   	(bad)  
ffffffffc0006246:	ff                   	(bad)  
ffffffffc0006247:	ff 00                	incl   (%rax)
ffffffffc0006249:	00 00                	add    %al,(%rax)
ffffffffc000624b:	00 00                	add    %al,(%rax)
ffffffffc000624d:	00 00                	add    %al,(%rax)
	...

ffffffffc0006250 <.refptr.realloc>:
ffffffffc0006250:	80 27 00             	andb   $0x0,(%rdi)
ffffffffc0006253:	c0 ff ff             	sar    $0xff,%bh
ffffffffc0006256:	ff                   	(bad)  
ffffffffc0006257:	ff 00                	incl   (%rax)
ffffffffc0006259:	00 00                	add    %al,(%rax)
ffffffffc000625b:	00 00                	add    %al,(%rax)
ffffffffc000625d:	00 00                	add    %al,(%rax)
	...

ffffffffc0006260 <FONT_SPLEEN_DATA>:
	...
ffffffffc0006470:	00 00                	add    %al,(%rax)
ffffffffc0006472:	18 18                	sbb    %bl,(%rax)
ffffffffc0006474:	18 18                	sbb    %bl,(%rax)
ffffffffc0006476:	18 18                	sbb    %bl,(%rax)
ffffffffc0006478:	18 00                	sbb    %al,(%rax)
ffffffffc000647a:	18 18                	sbb    %bl,(%rax)
ffffffffc000647c:	00 00                	add    %al,(%rax)
ffffffffc000647e:	00 00                	add    %al,(%rax)
ffffffffc0006480:	00 66 66             	add    %ah,0x66(%rsi)
ffffffffc0006483:	66 66 00 00          	data16 data16 add %al,(%rax)
	...
ffffffffc000648f:	00 00                	add    %al,(%rax)
ffffffffc0006491:	00 36                	add    %dh,(%rsi)
ffffffffc0006493:	36 7f 36             	ss jg  ffffffffc00064cc <FONT_SPLEEN_DATA+0x26c>
ffffffffc0006496:	36 36 36 7f 36       	ss ss ss jg ffffffffc00064d1 <FONT_SPLEEN_DATA+0x271>
ffffffffc000649b:	36 00 00             	add    %al,%ss:(%rax)
ffffffffc000649e:	00 00                	add    %al,(%rax)
ffffffffc00064a0:	00 08                	add    %cl,(%rax)
ffffffffc00064a2:	7e 0b                	jle    ffffffffc00064af <FONT_SPLEEN_DATA+0x24f>
ffffffffc00064a4:	0b 0b                	or     (%rbx),%ecx
ffffffffc00064a6:	3e 68 68 68 68 3f    	ds pushq $0x3f686868
ffffffffc00064ac:	08 00                	or     %al,(%rax)
ffffffffc00064ae:	00 00                	add    %al,(%rax)
ffffffffc00064b0:	00 00                	add    %al,(%rax)
ffffffffc00064b2:	60                   	(bad)  
ffffffffc00064b3:	66 36 30 18          	data16 xor %bl,%ss:(%rax)
ffffffffc00064b7:	18 0c 6c             	sbb    %cl,(%rsp,%rbp,2)
ffffffffc00064ba:	66 06                	data16 (bad) 
ffffffffc00064bc:	00 00                	add    %al,(%rax)
ffffffffc00064be:	00 00                	add    %al,(%rax)
ffffffffc00064c0:	00 00                	add    %al,(%rax)
ffffffffc00064c2:	1c 36                	sbb    $0x36,%al
ffffffffc00064c4:	36 36 1c 0e          	ss ss sbb $0xe,%al
ffffffffc00064c8:	5b                   	pop    %rbx
ffffffffc00064c9:	33 33                	xor    (%rbx),%esi
ffffffffc00064cb:	5e                   	pop    %rsi
ffffffffc00064cc:	00 00                	add    %al,(%rax)
ffffffffc00064ce:	00 00                	add    %al,(%rax)
ffffffffc00064d0:	00 18                	add    %bl,(%rax)
ffffffffc00064d2:	18 18                	sbb    %bl,(%rax)
ffffffffc00064d4:	18 00                	sbb    %al,(%rax)
	...
ffffffffc00064de:	00 00                	add    %al,(%rax)
ffffffffc00064e0:	00 70 18             	add    %dh,0x18(%rax)
ffffffffc00064e3:	0c 0c                	or     $0xc,%al
ffffffffc00064e5:	06                   	(bad)  
ffffffffc00064e6:	06                   	(bad)  
ffffffffc00064e7:	06                   	(bad)  
ffffffffc00064e8:	06                   	(bad)  
ffffffffc00064e9:	0c 0c                	or     $0xc,%al
ffffffffc00064eb:	18 70 00             	sbb    %dh,0x0(%rax)
ffffffffc00064ee:	00 00                	add    %al,(%rax)
ffffffffc00064f0:	00 0e                	add    %cl,(%rsi)
ffffffffc00064f2:	18 30                	sbb    %dh,(%rax)
ffffffffc00064f4:	30 60 60             	xor    %ah,0x60(%rax)
ffffffffc00064f7:	60                   	(bad)  
ffffffffc00064f8:	60                   	(bad)  
ffffffffc00064f9:	30 30                	xor    %dh,(%rax)
ffffffffc00064fb:	18 0e                	sbb    %cl,(%rsi)
ffffffffc00064fd:	00 00                	add    %al,(%rax)
ffffffffc00064ff:	00 00                	add    %al,(%rax)
ffffffffc0006501:	00 00                	add    %al,(%rax)
ffffffffc0006503:	00 66 3c             	add    %ah,0x3c(%rsi)
ffffffffc0006506:	18 ff                	sbb    %bh,%bh
ffffffffc0006508:	18 3c 66             	sbb    %bh,(%rsi,%riz,2)
	...
ffffffffc0006513:	00 00                	add    %al,(%rax)
ffffffffc0006515:	18 18                	sbb    %bl,(%rax)
ffffffffc0006517:	7e 18                	jle    ffffffffc0006531 <FONT_SPLEEN_DATA+0x2d1>
ffffffffc0006519:	18 00                	sbb    %al,(%rax)
	...
ffffffffc0006527:	00 00                	add    %al,(%rax)
ffffffffc0006529:	00 18                	add    %bl,(%rax)
ffffffffc000652b:	18 0c 00             	sbb    %cl,(%rax,%rax,1)
	...
ffffffffc0006536:	00 7e 00             	add    %bh,0x0(%rsi)
	...
ffffffffc0006549:	00 18                	add    %bl,(%rax)
ffffffffc000654b:	18 00                	sbb    %al,(%rax)
ffffffffc000654d:	00 00                	add    %al,(%rax)
ffffffffc000654f:	00 00                	add    %al,(%rax)
ffffffffc0006551:	60                   	(bad)  
ffffffffc0006552:	60                   	(bad)  
ffffffffc0006553:	30 30                	xor    %dh,(%rax)
ffffffffc0006555:	18 18                	sbb    %bl,(%rax)
ffffffffc0006557:	0c 0c                	or     $0xc,%al
ffffffffc0006559:	06                   	(bad)  
ffffffffc000655a:	06                   	(bad)  
ffffffffc000655b:	03 03                	add    (%rbx),%eax
ffffffffc000655d:	00 00                	add    %al,(%rax)
ffffffffc000655f:	00 00                	add    %al,(%rax)
ffffffffc0006561:	00 3e                	add    %bh,(%rsi)
ffffffffc0006563:	63 63 73             	movslq 0x73(%rbx),%esp
ffffffffc0006566:	7b 6f                	jnp    ffffffffc00065d7 <FONT_SPLEEN_DATA+0x377>
ffffffffc0006568:	67 63 63 3e          	movslq 0x3e(%ebx),%esp
ffffffffc000656c:	00 00                	add    %al,(%rax)
ffffffffc000656e:	00 00                	add    %al,(%rax)
ffffffffc0006570:	00 00                	add    %al,(%rax)
ffffffffc0006572:	18 1c 1e             	sbb    %bl,(%rsi,%rbx,1)
ffffffffc0006575:	1a 18                	sbb    (%rax),%bl
ffffffffc0006577:	18 18                	sbb    %bl,(%rax)
ffffffffc0006579:	18 18                	sbb    %bl,(%rax)
ffffffffc000657b:	7e 00                	jle    ffffffffc000657d <FONT_SPLEEN_DATA+0x31d>
ffffffffc000657d:	00 00                	add    %al,(%rax)
ffffffffc000657f:	00 00                	add    %al,(%rax)
ffffffffc0006581:	00 3e                	add    %bh,(%rsi)
ffffffffc0006583:	63 60 60             	movslq 0x60(%rax),%esp
ffffffffc0006586:	30 18                	xor    %bl,(%rax)
ffffffffc0006588:	0c 06                	or     $0x6,%al
ffffffffc000658a:	63 7f 00             	movslq 0x0(%rdi),%edi
ffffffffc000658d:	00 00                	add    %al,(%rax)
ffffffffc000658f:	00 00                	add    %al,(%rax)
ffffffffc0006591:	00 3e                	add    %bh,(%rsi)
ffffffffc0006593:	63 60 60             	movslq 0x60(%rax),%esp
ffffffffc0006596:	3c 60                	cmp    $0x60,%al
ffffffffc0006598:	60                   	(bad)  
ffffffffc0006599:	60                   	(bad)  
ffffffffc000659a:	63 3e                	movslq (%rsi),%edi
ffffffffc000659c:	00 00                	add    %al,(%rax)
ffffffffc000659e:	00 00                	add    %al,(%rax)
ffffffffc00065a0:	00 00                	add    %al,(%rax)
ffffffffc00065a2:	03 03                	add    (%rbx),%eax
ffffffffc00065a4:	33 33                	xor    (%rbx),%esi
ffffffffc00065a6:	33 33                	xor    (%rbx),%esi
ffffffffc00065a8:	7f 30                	jg     ffffffffc00065da <FONT_SPLEEN_DATA+0x37a>
ffffffffc00065aa:	30 30                	xor    %dh,(%rax)
ffffffffc00065ac:	00 00                	add    %al,(%rax)
ffffffffc00065ae:	00 00                	add    %al,(%rax)
ffffffffc00065b0:	00 00                	add    %al,(%rax)
ffffffffc00065b2:	7f 63                	jg     ffffffffc0006617 <FONT_SPLEEN_DATA+0x3b7>
ffffffffc00065b4:	03 03                	add    (%rbx),%eax
ffffffffc00065b6:	3f                   	(bad)  
ffffffffc00065b7:	60                   	(bad)  
ffffffffc00065b8:	60                   	(bad)  
ffffffffc00065b9:	60                   	(bad)  
ffffffffc00065ba:	63 3e                	movslq (%rsi),%edi
ffffffffc00065bc:	00 00                	add    %al,(%rax)
ffffffffc00065be:	00 00                	add    %al,(%rax)
ffffffffc00065c0:	00 00                	add    %al,(%rax)
ffffffffc00065c2:	3e 63 03             	movslq %ds:(%rbx),%eax
ffffffffc00065c5:	03 3f                	add    (%rdi),%edi
ffffffffc00065c7:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00065ca:	63 3e                	movslq (%rsi),%edi
ffffffffc00065cc:	00 00                	add    %al,(%rax)
ffffffffc00065ce:	00 00                	add    %al,(%rax)
ffffffffc00065d0:	00 00                	add    %al,(%rax)
ffffffffc00065d2:	7f 63                	jg     ffffffffc0006637 <FONT_SPLEEN_DATA+0x3d7>
ffffffffc00065d4:	60                   	(bad)  
ffffffffc00065d5:	60                   	(bad)  
ffffffffc00065d6:	30 18                	xor    %bl,(%rax)
ffffffffc00065d8:	0c 0c                	or     $0xc,%al
ffffffffc00065da:	0c 0c                	or     $0xc,%al
ffffffffc00065dc:	00 00                	add    %al,(%rax)
ffffffffc00065de:	00 00                	add    %al,(%rax)
ffffffffc00065e0:	00 00                	add    %al,(%rax)
ffffffffc00065e2:	3e 63 63 63          	movslq %ds:0x63(%rbx),%esp
ffffffffc00065e6:	3e 63 63 63          	movslq %ds:0x63(%rbx),%esp
ffffffffc00065ea:	63 3e                	movslq (%rsi),%edi
ffffffffc00065ec:	00 00                	add    %al,(%rax)
ffffffffc00065ee:	00 00                	add    %al,(%rax)
ffffffffc00065f0:	00 00                	add    %al,(%rax)
ffffffffc00065f2:	3e 63 63 63          	movslq %ds:0x63(%rbx),%esp
ffffffffc00065f6:	63 7e 60             	movslq 0x60(%rsi),%edi
ffffffffc00065f9:	60                   	(bad)  
ffffffffc00065fa:	63 3e                	movslq (%rsi),%edi
	...
ffffffffc0006604:	00 18                	add    %bl,(%rax)
ffffffffc0006606:	18 00                	sbb    %al,(%rax)
ffffffffc0006608:	00 00                	add    %al,(%rax)
ffffffffc000660a:	18 18                	sbb    %bl,(%rax)
	...
ffffffffc0006614:	00 18                	add    %bl,(%rax)
ffffffffc0006616:	18 00                	sbb    %al,(%rax)
ffffffffc0006618:	00 00                	add    %al,(%rax)
ffffffffc000661a:	18 18                	sbb    %bl,(%rax)
ffffffffc000661c:	0c 00                	or     $0x0,%al
ffffffffc000661e:	00 00                	add    %al,(%rax)
ffffffffc0006620:	00 00                	add    %al,(%rax)
ffffffffc0006622:	60                   	(bad)  
ffffffffc0006623:	30 18                	xor    %bl,(%rax)
ffffffffc0006625:	0c 06                	or     $0x6,%al
ffffffffc0006627:	06                   	(bad)  
ffffffffc0006628:	0c 18                	or     $0x18,%al
ffffffffc000662a:	30 60 00             	xor    %ah,0x0(%rax)
	...
ffffffffc0006635:	7e 00                	jle    ffffffffc0006637 <FONT_SPLEEN_DATA+0x3d7>
ffffffffc0006637:	00 7e 00             	add    %bh,0x0(%rsi)
	...
ffffffffc0006642:	06                   	(bad)  
ffffffffc0006643:	0c 18                	or     $0x18,%al
ffffffffc0006645:	30 60 60             	xor    %ah,0x60(%rax)
ffffffffc0006648:	30 18                	xor    %bl,(%rax)
ffffffffc000664a:	0c 06                	or     $0x6,%al
ffffffffc000664c:	00 00                	add    %al,(%rax)
ffffffffc000664e:	00 00                	add    %al,(%rax)
ffffffffc0006650:	00 00                	add    %al,(%rax)
ffffffffc0006652:	3e 63 60 30          	movslq %ds:0x30(%rax),%esp
ffffffffc0006656:	18 0c 0c             	sbb    %cl,(%rsp,%rcx,1)
ffffffffc0006659:	00 0c 0c             	add    %cl,(%rsp,%rcx,1)
ffffffffc000665c:	00 00                	add    %al,(%rax)
ffffffffc000665e:	00 00                	add    %al,(%rax)
ffffffffc0006660:	00 00                	add    %al,(%rax)
ffffffffc0006662:	00 3e                	add    %bh,(%rsi)
ffffffffc0006664:	43 5b                	rex.XB pop %r11
ffffffffc0006666:	5b                   	pop    %rbx
ffffffffc0006667:	5b                   	pop    %rbx
ffffffffc0006668:	5b                   	pop    %rbx
ffffffffc0006669:	7b 03                	jnp    ffffffffc000666e <FONT_SPLEEN_DATA+0x40e>
ffffffffc000666b:	3e 00 00             	add    %al,%ds:(%rax)
ffffffffc000666e:	00 00                	add    %al,(%rax)
ffffffffc0006670:	00 00                	add    %al,(%rax)
ffffffffc0006672:	3e 63 63 63          	movslq %ds:0x63(%rbx),%esp
ffffffffc0006676:	7f 63                	jg     ffffffffc00066db <FONT_SPLEEN_DATA+0x47b>
ffffffffc0006678:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc000667b:	63 00                	movslq (%rax),%eax
ffffffffc000667d:	00 00                	add    %al,(%rax)
ffffffffc000667f:	00 00                	add    %al,(%rax)
ffffffffc0006681:	00 3f                	add    %bh,(%rdi)
ffffffffc0006683:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc0006686:	3f                   	(bad)  
ffffffffc0006687:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc000668a:	63 3f                	movslq (%rdi),%edi
ffffffffc000668c:	00 00                	add    %al,(%rax)
ffffffffc000668e:	00 00                	add    %al,(%rax)
ffffffffc0006690:	00 00                	add    %al,(%rax)
ffffffffc0006692:	7e 03                	jle    ffffffffc0006697 <FONT_SPLEEN_DATA+0x437>
ffffffffc0006694:	03 03                	add    (%rbx),%eax
ffffffffc0006696:	03 03                	add    (%rbx),%eax
ffffffffc0006698:	03 03                	add    (%rbx),%eax
ffffffffc000669a:	03 7e 00             	add    0x0(%rsi),%edi
ffffffffc000669d:	00 00                	add    %al,(%rax)
ffffffffc000669f:	00 00                	add    %al,(%rax)
ffffffffc00066a1:	00 3f                	add    %bh,(%rdi)
ffffffffc00066a3:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00066a6:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00066a9:	63 63 3f             	movslq 0x3f(%rbx),%esp
ffffffffc00066ac:	00 00                	add    %al,(%rax)
ffffffffc00066ae:	00 00                	add    %al,(%rax)
ffffffffc00066b0:	00 00                	add    %al,(%rax)
ffffffffc00066b2:	7e 03                	jle    ffffffffc00066b7 <FONT_SPLEEN_DATA+0x457>
ffffffffc00066b4:	03 03                	add    (%rbx),%eax
ffffffffc00066b6:	1f                   	(bad)  
ffffffffc00066b7:	03 03                	add    (%rbx),%eax
ffffffffc00066b9:	03 03                	add    (%rbx),%eax
ffffffffc00066bb:	7e 00                	jle    ffffffffc00066bd <FONT_SPLEEN_DATA+0x45d>
ffffffffc00066bd:	00 00                	add    %al,(%rax)
ffffffffc00066bf:	00 00                	add    %al,(%rax)
ffffffffc00066c1:	00 7e 03             	add    %bh,0x3(%rsi)
ffffffffc00066c4:	03 03                	add    (%rbx),%eax
ffffffffc00066c6:	1f                   	(bad)  
ffffffffc00066c7:	03 03                	add    (%rbx),%eax
ffffffffc00066c9:	03 03                	add    (%rbx),%eax
ffffffffc00066cb:	03 00                	add    (%rax),%eax
ffffffffc00066cd:	00 00                	add    %al,(%rax)
ffffffffc00066cf:	00 00                	add    %al,(%rax)
ffffffffc00066d1:	00 7e 03             	add    %bh,0x3(%rsi)
ffffffffc00066d4:	03 03                	add    (%rbx),%eax
ffffffffc00066d6:	7b 63                	jnp    ffffffffc000673b <FONT_SPLEEN_DATA+0x4db>
ffffffffc00066d8:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00066db:	7e 00                	jle    ffffffffc00066dd <FONT_SPLEEN_DATA+0x47d>
ffffffffc00066dd:	00 00                	add    %al,(%rax)
ffffffffc00066df:	00 00                	add    %al,(%rax)
ffffffffc00066e1:	00 63 63             	add    %ah,0x63(%rbx)
ffffffffc00066e4:	63 63 7f             	movslq 0x7f(%rbx),%esp
ffffffffc00066e7:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00066ea:	63 63 00             	movslq 0x0(%rbx),%esp
ffffffffc00066ed:	00 00                	add    %al,(%rax)
ffffffffc00066ef:	00 00                	add    %al,(%rax)
ffffffffc00066f1:	00 7e 18             	add    %bh,0x18(%rsi)
ffffffffc00066f4:	18 18                	sbb    %bl,(%rax)
ffffffffc00066f6:	18 18                	sbb    %bl,(%rax)
ffffffffc00066f8:	18 18                	sbb    %bl,(%rax)
ffffffffc00066fa:	18 7e 00             	sbb    %bh,0x0(%rsi)
ffffffffc00066fd:	00 00                	add    %al,(%rax)
ffffffffc00066ff:	00 00                	add    %al,(%rax)
ffffffffc0006701:	00 7e 18             	add    %bh,0x18(%rsi)
ffffffffc0006704:	18 18                	sbb    %bl,(%rax)
ffffffffc0006706:	18 18                	sbb    %bl,(%rax)
ffffffffc0006708:	18 18                	sbb    %bl,(%rax)
ffffffffc000670a:	18 0f                	sbb    %cl,(%rdi)
ffffffffc000670c:	00 00                	add    %al,(%rax)
ffffffffc000670e:	00 00                	add    %al,(%rax)
ffffffffc0006710:	00 00                	add    %al,(%rax)
ffffffffc0006712:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc0006715:	33 1f                	xor    (%rdi),%ebx
ffffffffc0006717:	33 63 63             	xor    0x63(%rbx),%esp
ffffffffc000671a:	63 63 00             	movslq 0x0(%rbx),%esp
ffffffffc000671d:	00 00                	add    %al,(%rax)
ffffffffc000671f:	00 00                	add    %al,(%rax)
ffffffffc0006721:	00 03                	add    %al,(%rbx)
ffffffffc0006723:	03 03                	add    (%rbx),%eax
ffffffffc0006725:	03 03                	add    (%rbx),%eax
ffffffffc0006727:	03 03                	add    (%rbx),%eax
ffffffffc0006729:	03 03                	add    (%rbx),%eax
ffffffffc000672b:	7e 00                	jle    ffffffffc000672d <FONT_SPLEEN_DATA+0x4cd>
ffffffffc000672d:	00 00                	add    %al,(%rax)
ffffffffc000672f:	00 00                	add    %al,(%rax)
ffffffffc0006731:	00 63 77             	add    %ah,0x77(%rbx)
ffffffffc0006734:	7f 6b                	jg     ffffffffc00067a1 <FONT_SPLEEN_DATA+0x541>
ffffffffc0006736:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc0006739:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc000673c:	00 00                	add    %al,(%rax)
ffffffffc000673e:	00 00                	add    %al,(%rax)
ffffffffc0006740:	00 00                	add    %al,(%rax)
ffffffffc0006742:	63 63 67             	movslq 0x67(%rbx),%esp
ffffffffc0006745:	67 6b 6b 73 73       	imul   $0x73,0x73(%ebx),%ebp
ffffffffc000674a:	63 63 00             	movslq 0x0(%rbx),%esp
ffffffffc000674d:	00 00                	add    %al,(%rax)
ffffffffc000674f:	00 00                	add    %al,(%rax)
ffffffffc0006751:	00 3e                	add    %bh,(%rsi)
ffffffffc0006753:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc0006756:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc0006759:	63 63 3e             	movslq 0x3e(%rbx),%esp
ffffffffc000675c:	00 00                	add    %al,(%rax)
ffffffffc000675e:	00 00                	add    %al,(%rax)
ffffffffc0006760:	00 00                	add    %al,(%rax)
ffffffffc0006762:	3f                   	(bad)  
ffffffffc0006763:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc0006766:	3f                   	(bad)  
ffffffffc0006767:	03 03                	add    (%rbx),%eax
ffffffffc0006769:	03 03                	add    (%rbx),%eax
ffffffffc000676b:	03 00                	add    (%rax),%eax
ffffffffc000676d:	00 00                	add    %al,(%rax)
ffffffffc000676f:	00 00                	add    %al,(%rax)
ffffffffc0006771:	00 3e                	add    %bh,(%rsi)
ffffffffc0006773:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc0006776:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc0006779:	6b 6b 3e 18          	imul   $0x18,0x3e(%rbx),%ebp
ffffffffc000677d:	30 00                	xor    %al,(%rax)
ffffffffc000677f:	00 00                	add    %al,(%rax)
ffffffffc0006781:	00 3f                	add    %bh,(%rdi)
ffffffffc0006783:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc0006786:	3f                   	(bad)  
ffffffffc0006787:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc000678a:	63 63 00             	movslq 0x0(%rbx),%esp
ffffffffc000678d:	00 00                	add    %al,(%rax)
ffffffffc000678f:	00 00                	add    %al,(%rax)
ffffffffc0006791:	00 7e 03             	add    %bh,0x3(%rsi)
ffffffffc0006794:	03 03                	add    (%rbx),%eax
ffffffffc0006796:	3e 60                	ds (bad) 
ffffffffc0006798:	60                   	(bad)  
ffffffffc0006799:	60                   	(bad)  
ffffffffc000679a:	60                   	(bad)  
ffffffffc000679b:	3f                   	(bad)  
ffffffffc000679c:	00 00                	add    %al,(%rax)
ffffffffc000679e:	00 00                	add    %al,(%rax)
ffffffffc00067a0:	00 00                	add    %al,(%rax)
ffffffffc00067a2:	ff 18                	lcall  *(%rax)
ffffffffc00067a4:	18 18                	sbb    %bl,(%rax)
ffffffffc00067a6:	18 18                	sbb    %bl,(%rax)
ffffffffc00067a8:	18 18                	sbb    %bl,(%rax)
ffffffffc00067aa:	18 18                	sbb    %bl,(%rax)
ffffffffc00067ac:	00 00                	add    %al,(%rax)
ffffffffc00067ae:	00 00                	add    %al,(%rax)
ffffffffc00067b0:	00 00                	add    %al,(%rax)
ffffffffc00067b2:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00067b5:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00067b8:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00067bb:	7e 00                	jle    ffffffffc00067bd <FONT_SPLEEN_DATA+0x55d>
ffffffffc00067bd:	00 00                	add    %al,(%rax)
ffffffffc00067bf:	00 00                	add    %al,(%rax)
ffffffffc00067c1:	00 63 63             	add    %ah,0x63(%rbx)
ffffffffc00067c4:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00067c7:	63 63 36             	movslq 0x36(%rbx),%esp
ffffffffc00067ca:	1c 08                	sbb    $0x8,%al
ffffffffc00067cc:	00 00                	add    %al,(%rax)
ffffffffc00067ce:	00 00                	add    %al,(%rax)
ffffffffc00067d0:	00 00                	add    %al,(%rax)
ffffffffc00067d2:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00067d5:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00067d8:	6b 7f 77 63          	imul   $0x63,0x77(%rdi),%edi
ffffffffc00067dc:	00 00                	add    %al,(%rax)
ffffffffc00067de:	00 00                	add    %al,(%rax)
ffffffffc00067e0:	00 00                	add    %al,(%rax)
ffffffffc00067e2:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00067e5:	36 1c 36             	ss sbb $0x36,%al
ffffffffc00067e8:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00067eb:	63 00                	movslq (%rax),%eax
ffffffffc00067ed:	00 00                	add    %al,(%rax)
ffffffffc00067ef:	00 00                	add    %al,(%rax)
ffffffffc00067f1:	00 63 63             	add    %ah,0x63(%rbx)
ffffffffc00067f4:	63 63 7e             	movslq 0x7e(%rbx),%esp
ffffffffc00067f7:	60                   	(bad)  
ffffffffc00067f8:	60                   	(bad)  
ffffffffc00067f9:	60                   	(bad)  
ffffffffc00067fa:	60                   	(bad)  
ffffffffc00067fb:	3f                   	(bad)  
ffffffffc00067fc:	00 00                	add    %al,(%rax)
ffffffffc00067fe:	00 00                	add    %al,(%rax)
ffffffffc0006800:	00 00                	add    %al,(%rax)
ffffffffc0006802:	7f 60                	jg     ffffffffc0006864 <FONT_SPLEEN_DATA+0x604>
ffffffffc0006804:	60                   	(bad)  
ffffffffc0006805:	30 18                	xor    %bl,(%rax)
ffffffffc0006807:	0c 06                	or     $0x6,%al
ffffffffc0006809:	03 03                	add    (%rbx),%eax
ffffffffc000680b:	7f 00                	jg     ffffffffc000680d <FONT_SPLEEN_DATA+0x5ad>
ffffffffc000680d:	00 00                	add    %al,(%rax)
ffffffffc000680f:	00 00                	add    %al,(%rax)
ffffffffc0006811:	7c 0c                	jl     ffffffffc000681f <FONT_SPLEEN_DATA+0x5bf>
ffffffffc0006813:	0c 0c                	or     $0xc,%al
ffffffffc0006815:	0c 0c                	or     $0xc,%al
ffffffffc0006817:	0c 0c                	or     $0xc,%al
ffffffffc0006819:	0c 0c                	or     $0xc,%al
ffffffffc000681b:	0c 7c                	or     $0x7c,%al
ffffffffc000681d:	00 00                	add    %al,(%rax)
ffffffffc000681f:	00 00                	add    %al,(%rax)
ffffffffc0006821:	03 03                	add    (%rbx),%eax
ffffffffc0006823:	06                   	(bad)  
ffffffffc0006824:	06                   	(bad)  
ffffffffc0006825:	0c 0c                	or     $0xc,%al
ffffffffc0006827:	18 18                	sbb    %bl,(%rax)
ffffffffc0006829:	30 30                	xor    %dh,(%rax)
ffffffffc000682b:	60                   	(bad)  
ffffffffc000682c:	60                   	(bad)  
ffffffffc000682d:	00 00                	add    %al,(%rax)
ffffffffc000682f:	00 00                	add    %al,(%rax)
ffffffffc0006831:	3e 30 30             	xor    %dh,%ds:(%rax)
ffffffffc0006834:	30 30                	xor    %dh,(%rax)
ffffffffc0006836:	30 30                	xor    %dh,(%rax)
ffffffffc0006838:	30 30                	xor    %dh,(%rax)
ffffffffc000683a:	30 30                	xor    %dh,(%rax)
ffffffffc000683c:	3e 00 00             	add    %al,%ds:(%rax)
ffffffffc000683f:	00 00                	add    %al,(%rax)
ffffffffc0006841:	08 1c 36             	or     %bl,(%rsi,%rsi,1)
ffffffffc0006844:	63 00                	movslq (%rax),%eax
	...
ffffffffc000685e:	7f 00                	jg     ffffffffc0006860 <FONT_SPLEEN_DATA+0x600>
ffffffffc0006860:	00 0c 18             	add    %cl,(%rax,%rbx,1)
ffffffffc0006863:	30 00                	xor    %al,(%rax)
	...
ffffffffc0006875:	3e 60                	ds (bad) 
ffffffffc0006877:	7e 63                	jle    ffffffffc00068dc <FONT_SPLEEN_DATA+0x67c>
ffffffffc0006879:	63 63 7e             	movslq 0x7e(%rbx),%esp
ffffffffc000687c:	00 00                	add    %al,(%rax)
ffffffffc000687e:	00 00                	add    %al,(%rax)
ffffffffc0006880:	00 00                	add    %al,(%rax)
ffffffffc0006882:	03 03                	add    (%rbx),%eax
ffffffffc0006884:	03 3f                	add    (%rdi),%edi
ffffffffc0006886:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc0006889:	63 63 3f             	movslq 0x3f(%rbx),%esp
	...
ffffffffc0006894:	00 7e 03             	add    %bh,0x3(%rsi)
ffffffffc0006897:	03 03                	add    (%rbx),%eax
ffffffffc0006899:	03 03                	add    (%rbx),%eax
ffffffffc000689b:	7e 00                	jle    ffffffffc000689d <FONT_SPLEEN_DATA+0x63d>
ffffffffc000689d:	00 00                	add    %al,(%rax)
ffffffffc000689f:	00 00                	add    %al,(%rax)
ffffffffc00068a1:	00 60 60             	add    %ah,0x60(%rax)
ffffffffc00068a4:	60                   	(bad)  
ffffffffc00068a5:	7e 63                	jle    ffffffffc000690a <FONT_SPLEEN_DATA+0x6aa>
ffffffffc00068a7:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00068aa:	63 7e 00             	movslq 0x0(%rsi),%edi
	...
ffffffffc00068b5:	7e 63                	jle    ffffffffc000691a <FONT_SPLEEN_DATA+0x6ba>
ffffffffc00068b7:	63 7f 03             	movslq 0x3(%rdi),%edi
ffffffffc00068ba:	03 7e 00             	add    0x0(%rsi),%edi
ffffffffc00068bd:	00 00                	add    %al,(%rax)
ffffffffc00068bf:	00 00                	add    %al,(%rax)
ffffffffc00068c1:	00 78 0c             	add    %bh,0xc(%rax)
ffffffffc00068c4:	0c 0c                	or     $0xc,%al
ffffffffc00068c6:	3e 0c 0c             	ds or  $0xc,%al
ffffffffc00068c9:	0c 0c                	or     $0xc,%al
ffffffffc00068cb:	0c 00                	or     $0x0,%al
	...
ffffffffc00068d5:	7e 63                	jle    ffffffffc000693a <FONT_SPLEEN_DATA+0x6da>
ffffffffc00068d7:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00068da:	63 3e                	movslq (%rsi),%edi
ffffffffc00068dc:	60                   	(bad)  
ffffffffc00068dd:	60                   	(bad)  
ffffffffc00068de:	3f                   	(bad)  
ffffffffc00068df:	00 00                	add    %al,(%rax)
ffffffffc00068e1:	00 03                	add    %al,(%rbx)
ffffffffc00068e3:	03 03                	add    (%rbx),%eax
ffffffffc00068e5:	3f                   	(bad)  
ffffffffc00068e6:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00068e9:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00068ec:	00 00                	add    %al,(%rax)
ffffffffc00068ee:	00 00                	add    %al,(%rax)
ffffffffc00068f0:	00 00                	add    %al,(%rax)
ffffffffc00068f2:	18 18                	sbb    %bl,(%rax)
ffffffffc00068f4:	00 1c 18             	add    %bl,(%rax,%rbx,1)
ffffffffc00068f7:	18 18                	sbb    %bl,(%rax)
ffffffffc00068f9:	18 18                	sbb    %bl,(%rax)
ffffffffc00068fb:	38 00                	cmp    %al,(%rax)
ffffffffc00068fd:	00 00                	add    %al,(%rax)
ffffffffc00068ff:	00 00                	add    %al,(%rax)
ffffffffc0006901:	00 18                	add    %bl,(%rax)
ffffffffc0006903:	18 00                	sbb    %al,(%rax)
ffffffffc0006905:	18 18                	sbb    %bl,(%rax)
ffffffffc0006907:	18 18                	sbb    %bl,(%rax)
ffffffffc0006909:	18 18                	sbb    %bl,(%rax)
ffffffffc000690b:	18 18                	sbb    %bl,(%rax)
ffffffffc000690d:	18 0e                	sbb    %cl,(%rsi)
ffffffffc000690f:	00 00                	add    %al,(%rax)
ffffffffc0006911:	00 03                	add    %al,(%rbx)
ffffffffc0006913:	03 03                	add    (%rbx),%eax
ffffffffc0006915:	33 1b                	xor    (%rbx),%ebx
ffffffffc0006917:	0f                   	(bad)  
ffffffffc0006918:	0f 1b 33             	bndstx (bad),(%rbx)
ffffffffc000691b:	63 00                	movslq (%rax),%eax
ffffffffc000691d:	00 00                	add    %al,(%rax)
ffffffffc000691f:	00 00                	add    %al,(%rax)
ffffffffc0006921:	00 0c 0c             	add    %cl,(%rsp,%rcx,1)
ffffffffc0006924:	0c 0c                	or     $0xc,%al
ffffffffc0006926:	0c 0c                	or     $0xc,%al
ffffffffc0006928:	0c 0c                	or     $0xc,%al
ffffffffc000692a:	0c 38                	or     $0x38,%al
	...
ffffffffc0006934:	00 37                	add    %dh,(%rdi)
ffffffffc0006936:	6b 6b 6b 6b          	imul   $0x6b,0x6b(%rbx),%ebp
ffffffffc000693a:	63 63 00             	movslq 0x0(%rbx),%esp
	...
ffffffffc0006945:	3f                   	(bad)  
ffffffffc0006946:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc0006949:	63 63 63             	movslq 0x63(%rbx),%esp
	...
ffffffffc0006954:	00 3e                	add    %bh,(%rsi)
ffffffffc0006956:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc0006959:	63 63 3e             	movslq 0x3e(%rbx),%esp
	...
ffffffffc0006964:	00 3f                	add    %bh,(%rdi)
ffffffffc0006966:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc0006969:	63 63 3f             	movslq 0x3f(%rbx),%esp
ffffffffc000696c:	03 03                	add    (%rbx),%eax
ffffffffc000696e:	03 00                	add    (%rax),%eax
ffffffffc0006970:	00 00                	add    %al,(%rax)
ffffffffc0006972:	00 00                	add    %al,(%rax)
ffffffffc0006974:	00 7e 63             	add    %bh,0x63(%rsi)
ffffffffc0006977:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc000697a:	63 7e 60             	movslq 0x60(%rsi),%edi
ffffffffc000697d:	60                   	(bad)  
ffffffffc000697e:	60                   	(bad)  
ffffffffc000697f:	00 00                	add    %al,(%rax)
ffffffffc0006981:	00 00                	add    %al,(%rax)
ffffffffc0006983:	00 00                	add    %al,(%rax)
ffffffffc0006985:	7e 63                	jle    ffffffffc00069ea <FONT_SPLEEN_DATA+0x78a>
ffffffffc0006987:	03 03                	add    (%rbx),%eax
ffffffffc0006989:	03 03                	add    (%rbx),%eax
ffffffffc000698b:	03 00                	add    (%rax),%eax
	...
ffffffffc0006995:	7e 03                	jle    ffffffffc000699a <FONT_SPLEEN_DATA+0x73a>
ffffffffc0006997:	03 3e                	add    (%rsi),%edi
ffffffffc0006999:	60                   	(bad)  
ffffffffc000699a:	60                   	(bad)  
ffffffffc000699b:	3f                   	(bad)  
ffffffffc000699c:	00 00                	add    %al,(%rax)
ffffffffc000699e:	00 00                	add    %al,(%rax)
ffffffffc00069a0:	00 00                	add    %al,(%rax)
ffffffffc00069a2:	0c 0c                	or     $0xc,%al
ffffffffc00069a4:	0c 3e                	or     $0x3e,%al
ffffffffc00069a6:	0c 0c                	or     $0xc,%al
ffffffffc00069a8:	0c 0c                	or     $0xc,%al
ffffffffc00069aa:	0c 78                	or     $0x78,%al
	...
ffffffffc00069b4:	00 63 63             	add    %ah,0x63(%rbx)
ffffffffc00069b7:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00069ba:	63 7e 00             	movslq 0x0(%rsi),%edi
	...
ffffffffc00069c5:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00069c8:	63 36                	movslq (%rsi),%esi
ffffffffc00069ca:	1c 08                	sbb    $0x8,%al
	...
ffffffffc00069d4:	00 63 63             	add    %ah,0x63(%rbx)
ffffffffc00069d7:	6b 6b 6b 6b          	imul   $0x6b,0x6b(%rbx),%ebp
ffffffffc00069db:	76 00                	jbe    ffffffffc00069dd <FONT_SPLEEN_DATA+0x77d>
	...
ffffffffc00069e5:	63 36                	movslq (%rsi),%esi
ffffffffc00069e7:	1c 1c                	sbb    $0x1c,%al
ffffffffc00069e9:	36 63 63 00          	movslq %ss:0x0(%rbx),%esp
	...
ffffffffc00069f5:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00069f8:	63 63 63             	movslq 0x63(%rbx),%esp
ffffffffc00069fb:	7e 60                	jle    ffffffffc0006a5d <FONT_SPLEEN_DATA+0x7fd>
ffffffffc00069fd:	60                   	(bad)  
ffffffffc00069fe:	3f                   	(bad)  
ffffffffc00069ff:	00 00                	add    %al,(%rax)
ffffffffc0006a01:	00 00                	add    %al,(%rax)
ffffffffc0006a03:	00 00                	add    %al,(%rax)
ffffffffc0006a05:	7f 60                	jg     ffffffffc0006a67 <FONT_SPLEEN_DATA+0x807>
ffffffffc0006a07:	30 18                	xor    %bl,(%rax)
ffffffffc0006a09:	0c 06                	or     $0x6,%al
ffffffffc0006a0b:	7f 00                	jg     ffffffffc0006a0d <FONT_SPLEEN_DATA+0x7ad>
ffffffffc0006a0d:	00 00                	add    %al,(%rax)
ffffffffc0006a0f:	00 00                	add    %al,(%rax)
ffffffffc0006a11:	70 18                	jo     ffffffffc0006a2b <FONT_SPLEEN_DATA+0x7cb>
ffffffffc0006a13:	18 18                	sbb    %bl,(%rax)
ffffffffc0006a15:	18 0e                	sbb    %cl,(%rsi)
ffffffffc0006a17:	0e                   	(bad)  
ffffffffc0006a18:	18 18                	sbb    %bl,(%rax)
ffffffffc0006a1a:	18 18                	sbb    %bl,(%rax)
ffffffffc0006a1c:	70 00                	jo     ffffffffc0006a1e <FONT_SPLEEN_DATA+0x7be>
ffffffffc0006a1e:	00 00                	add    %al,(%rax)
ffffffffc0006a20:	00 18                	add    %bl,(%rax)
ffffffffc0006a22:	18 18                	sbb    %bl,(%rax)
ffffffffc0006a24:	18 18                	sbb    %bl,(%rax)
ffffffffc0006a26:	18 18                	sbb    %bl,(%rax)
ffffffffc0006a28:	18 18                	sbb    %bl,(%rax)
ffffffffc0006a2a:	18 18                	sbb    %bl,(%rax)
ffffffffc0006a2c:	18 00                	sbb    %al,(%rax)
ffffffffc0006a2e:	00 00                	add    %al,(%rax)
ffffffffc0006a30:	00 0e                	add    %cl,(%rsi)
ffffffffc0006a32:	18 18                	sbb    %bl,(%rax)
ffffffffc0006a34:	18 18                	sbb    %bl,(%rax)
ffffffffc0006a36:	70 70                	jo     ffffffffc0006aa8 <gdt64_start+0x4>
ffffffffc0006a38:	18 18                	sbb    %bl,(%rax)
ffffffffc0006a3a:	18 18                	sbb    %bl,(%rax)
ffffffffc0006a3c:	0e                   	(bad)  
	...
ffffffffc0006a45:	00 4c 7e 32          	add    %cl,0x32(%rsi,%rdi,2)
	...

Disassembly of section .text_unmap:

ffffffffc0007620 <___KERNEL_UNMAP_START__>:
ffffffffc0007620:	41 57                	push   %r15
ffffffffc0007622:	41 56                	push   %r14
ffffffffc0007624:	41 55                	push   %r13
ffffffffc0007626:	41 54                	push   %r12
ffffffffc0007628:	55                   	push   %rbp
ffffffffc0007629:	57                   	push   %rdi
ffffffffc000762a:	56                   	push   %rsi
ffffffffc000762b:	53                   	push   %rbx
ffffffffc000762c:	48 83 ec 38          	sub    $0x38,%rsp
ffffffffc0007630:	49 89 cc             	mov    %rcx,%r12
ffffffffc0007633:	ff 15 f7 d0 ff ff    	callq  *-0x2f09(%rip)        # ffffffffc0004730 <.refptr.paging_init>
ffffffffc0007639:	4c 89 e1             	mov    %r12,%rcx
ffffffffc000763c:	ff 15 de d0 ff ff    	callq  *-0x2f22(%rip)        # ffffffffc0004720 <.refptr.pm_init>
ffffffffc0007642:	4c 89 e1             	mov    %r12,%rcx
ffffffffc0007645:	ff 15 c5 d0 ff ff    	callq  *-0x2f3b(%rip)        # ffffffffc0004710 <.refptr.vm_init>
ffffffffc000764b:	4c 89 e1             	mov    %r12,%rcx
ffffffffc000764e:	ff 15 ac d0 ff ff    	callq  *-0x2f54(%rip)        # ffffffffc0004700 <.refptr.gfx_init>
ffffffffc0007654:	ff 15 96 d0 ff ff    	callq  *-0x2f6a(%rip)        # ffffffffc00046f0 <.refptr.lock_init>
ffffffffc000765a:	4c 89 e1             	mov    %r12,%rcx
ffffffffc000765d:	ff 15 7d d0 ff ff    	callq  *-0x2f83(%rip)        # ffffffffc00046e0 <.refptr.console_init>
ffffffffc0007663:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0007668:	48 8d 0d 35 cd ff ff 	lea    -0x32cb(%rip),%rcx        # ffffffffc00043a4 <__asm_fill_zero+0x24>
ffffffffc000766f:	48 8b 35 ca d0 ff ff 	mov    -0x2f36(%rip),%rsi        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0007676:	ff d6                	callq  *%rsi
ffffffffc0007678:	4d 8b 84 24 80 00 00 	mov    0x80(%r12),%r8
ffffffffc000767f:	00 
ffffffffc0007680:	48 8b 2d 49 d0 ff ff 	mov    -0x2fb7(%rip),%rbp        # ffffffffc00046d0 <.refptr._console_vprint>
ffffffffc0007687:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc000768c:	48 8d 0d 25 cd ff ff 	lea    -0x32db(%rip),%rcx        # ffffffffc00043b8 <__asm_fill_zero+0x38>
ffffffffc0007693:	ff d5                	callq  *%rbp
ffffffffc0007695:	49 83 bc 24 80 00 00 	cmpq   $0x0,0x80(%r12)
ffffffffc000769c:	00 00 
ffffffffc000769e:	74 5a                	je     ffffffffc00076fa <___KERNEL_UNMAP_START__+0xda>
ffffffffc00076a0:	31 ff                	xor    %edi,%edi
ffffffffc00076a2:	49 8d 9c 24 88 00 00 	lea    0x88(%r12),%rbx
ffffffffc00076a9:	00 
ffffffffc00076aa:	4c 8d 2d 1b cd ff ff 	lea    -0x32e5(%rip),%r13        # ffffffffc00043cc <__asm_fill_zero+0x4c>
ffffffffc00076b1:	4c 8d 35 32 cd ff ff 	lea    -0x32ce(%rip),%r14        # ffffffffc00043ea <__asm_fill_zero+0x6a>
ffffffffc00076b8:	4c 8d 3d 1c cd ff ff 	lea    -0x32e4(%rip),%r15        # ffffffffc00043db <__asm_fill_zero+0x5b>
ffffffffc00076bf:	90                   	nop
ffffffffc00076c0:	4c 8b 03             	mov    (%rbx),%r8
ffffffffc00076c3:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00076c8:	4c 8b 4b 08          	mov    0x8(%rbx),%r9
ffffffffc00076cc:	4c 89 e9             	mov    %r13,%rcx
ffffffffc00076cf:	49 83 e0 fe          	and    $0xfffffffffffffffe,%r8
ffffffffc00076d3:	ff d5                	callq  *%rbp
ffffffffc00076d5:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00076da:	f6 03 01             	testb  $0x1,(%rbx)
ffffffffc00076dd:	0f 85 cd 01 00 00    	jne    ffffffffc00078b0 <___KERNEL_UNMAP_START__+0x290>
ffffffffc00076e3:	4c 89 f1             	mov    %r14,%rcx
ffffffffc00076e6:	48 83 c7 01          	add    $0x1,%rdi
ffffffffc00076ea:	48 83 c3 10          	add    $0x10,%rbx
ffffffffc00076ee:	ff d6                	callq  *%rsi
ffffffffc00076f0:	49 39 bc 24 80 00 00 	cmp    %rdi,0x80(%r12)
ffffffffc00076f7:	00 
ffffffffc00076f8:	77 c6                	ja     ffffffffc00076c0 <___KERNEL_UNMAP_START__+0xa0>
ffffffffc00076fa:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00076ff:	48 8d 0d e6 cc ff ff 	lea    -0x331a(%rip),%rcx        # ffffffffc00043ec <__asm_fill_zero+0x6c>
ffffffffc0007706:	ff d6                	callq  *%rsi
ffffffffc0007708:	ff 15 b2 cf ff ff    	callq  *-0x304e(%rip)        # ffffffffc00046c0 <.refptr.asm_setup_gdt>
ffffffffc000770e:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0007713:	48 8d 0d e5 cc ff ff 	lea    -0x331b(%rip),%rcx        # ffffffffc00043ff <__asm_fill_zero+0x7f>
ffffffffc000771a:	ff d6                	callq  *%rsi
ffffffffc000771c:	4c 89 e1             	mov    %r12,%rcx
ffffffffc000771f:	ff 15 8b cf ff ff    	callq  *-0x3075(%rip)        # ffffffffc00046b0 <.refptr.setup_idt>
ffffffffc0007725:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc000772a:	48 8d 0d e1 cc ff ff 	lea    -0x331f(%rip),%rcx        # ffffffffc0004412 <__asm_fill_zero+0x92>
ffffffffc0007731:	ff d6                	callq  *%rsi
ffffffffc0007733:	ff 15 67 cf ff ff    	callq  *-0x3099(%rip)        # ffffffffc00046a0 <.refptr.setup_isr>
ffffffffc0007739:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc000773e:	48 8d 0d e9 cc ff ff 	lea    -0x3317(%rip),%rcx        # ffffffffc000442e <__asm_fill_zero+0xae>
ffffffffc0007745:	ff d6                	callq  *%rsi
ffffffffc0007747:	ff 15 43 cf ff ff    	callq  *-0x30bd(%rip)        # ffffffffc0004690 <.refptr.setup_irq>
ffffffffc000774d:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0007752:	48 8d 0d f1 cc ff ff 	lea    -0x330f(%rip),%rcx        # ffffffffc000444a <__asm_fill_zero+0xca>
ffffffffc0007759:	ff d6                	callq  *%rsi
ffffffffc000775b:	ff 15 1f cf ff ff    	callq  *-0x30e1(%rip)        # ffffffffc0004680 <.refptr.cpu_info_init>
ffffffffc0007761:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0007766:	48 8d 0d f2 cc ff ff 	lea    -0x330e(%rip),%rcx        # ffffffffc000445f <__asm_fill_zero+0xdf>
ffffffffc000776d:	ff d6                	callq  *%rsi
ffffffffc000776f:	ff 15 fb ce ff ff    	callq  *-0x3105(%rip)        # ffffffffc0004670 <.refptr.pci_init>
ffffffffc0007775:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc000777a:	48 8d 0d f1 cc ff ff 	lea    -0x330f(%rip),%rcx        # ffffffffc0004472 <__asm_fill_zero+0xf2>
ffffffffc0007781:	ff d6                	callq  *%rsi
ffffffffc0007783:	4c 89 e1             	mov    %r12,%rcx
ffffffffc0007786:	ff 15 d4 ce ff ff    	callq  *-0x312c(%rip)        # ffffffffc0004660 <.refptr.acpi_init>
ffffffffc000778c:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0007791:	48 8d 0d f0 cc ff ff 	lea    -0x3310(%rip),%rcx        # ffffffffc0004488 <__asm_fill_zero+0x108>
ffffffffc0007798:	ff d6                	callq  *%rsi
ffffffffc000779a:	ff 15 b0 ce ff ff    	callq  *-0x3150(%rip)        # ffffffffc0004650 <.refptr.apic_init>
ffffffffc00077a0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00077a5:	48 8d 0d fd cc ff ff 	lea    -0x3303(%rip),%rcx        # ffffffffc00044a9 <__asm_fill_zero+0x129>
ffffffffc00077ac:	ff d6                	callq  *%rsi
ffffffffc00077ae:	ff 15 8c ce ff ff    	callq  *-0x3174(%rip)        # ffffffffc0004640 <.refptr.cpu_init>
ffffffffc00077b4:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00077b9:	48 8d 0d fd cc ff ff 	lea    -0x3303(%rip),%rcx        # ffffffffc00044bd <__asm_fill_zero+0x13d>
ffffffffc00077c0:	ff d6                	callq  *%rsi
ffffffffc00077c2:	ff 15 68 ce ff ff    	callq  *-0x3198(%rip)        # ffffffffc0004630 <.refptr.process_init>
ffffffffc00077c8:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00077cd:	48 8d 0d 05 cd ff ff 	lea    -0x32fb(%rip),%rcx        # ffffffffc00044d9 <__asm_fill_zero+0x159>
ffffffffc00077d4:	ff d6                	callq  *%rsi
ffffffffc00077d6:	ff 15 44 ce ff ff    	callq  *-0x31bc(%rip)        # ffffffffc0004620 <.refptr.thread_init>
ffffffffc00077dc:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00077e1:	48 8d 0d 0c cd ff ff 	lea    -0x32f4(%rip),%rcx        # ffffffffc00044f4 <__asm_fill_zero+0x174>
ffffffffc00077e8:	ff d6                	callq  *%rsi
ffffffffc00077ea:	ff 15 20 ce ff ff    	callq  *-0x31e0(%rip)        # ffffffffc0004610 <.refptr.scheduler_init>
ffffffffc00077f0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00077f5:	48 8d 0d 11 cd ff ff 	lea    -0x32ef(%rip),%rcx        # ffffffffc000450d <__asm_fill_zero+0x18d>
ffffffffc00077fc:	ff d6                	callq  *%rsi
ffffffffc00077fe:	ff 15 fc cd ff ff    	callq  *-0x3204(%rip)        # ffffffffc0004600 <.refptr.acpi_free_data>
ffffffffc0007804:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0007809:	48 8d 0d 18 cd ff ff 	lea    -0x32e8(%rip),%rcx        # ffffffffc0004528 <__asm_fill_zero+0x1a8>
ffffffffc0007810:	ff d6                	callq  *%rsi
ffffffffc0007812:	48 8b 3d d7 cd ff ff 	mov    -0x3229(%rip),%rdi        # ffffffffc00045f0 <.refptr.kernel_process>
ffffffffc0007819:	48 8b 1d c0 cd ff ff 	mov    -0x3240(%rip),%rbx        # ffffffffc00045e0 <.refptr.create_thread>
ffffffffc0007820:	45 31 c0             	xor    %r8d,%r8d
ffffffffc0007823:	48 8d 15 46 88 ff ff 	lea    -0x77ba(%rip),%rdx        # ffffffffc0000070 <thread1>
ffffffffc000782a:	48 8b 0f             	mov    (%rdi),%rcx
ffffffffc000782d:	ff d3                	callq  *%rbx
ffffffffc000782f:	48 8b 0f             	mov    (%rdi),%rcx
ffffffffc0007832:	45 31 c0             	xor    %r8d,%r8d
ffffffffc0007835:	48 8d 15 54 88 ff ff 	lea    -0x77ac(%rip),%rdx        # ffffffffc0000090 <thread2>
ffffffffc000783c:	ff d3                	callq  *%rbx
ffffffffc000783e:	4c 8b 05 7b cd ff ff 	mov    -0x3285(%rip),%r8        # ffffffffc00045c0 <.refptr.___KERNEL_UNMAP_START__>
ffffffffc0007845:	4c 8b 0d 84 cd ff ff 	mov    -0x327c(%rip),%r9        # ffffffffc00045d0 <.refptr.___KERNEL_UNMAP_END__>
ffffffffc000784c:	49 8d 90 ff 0f 00 00 	lea    0xfff(%r8),%rdx
ffffffffc0007853:	49 8d 81 ff 0f 00 00 	lea    0xfff(%r9),%rax
ffffffffc000785a:	48 89 d1             	mov    %rdx,%rcx
ffffffffc000785d:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffffc0007861:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffffc0007865:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
ffffffffc000786c:	4d 29 c1             	sub    %r8,%r9
ffffffffc000786f:	48 29 c8             	sub    %rcx,%rax
ffffffffc0007872:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
ffffffffc0007877:	48 8d 0d ca cc ff ff 	lea    -0x3336(%rip),%rcx        # ffffffffc0004548 <__asm_fill_zero+0x1c8>
ffffffffc000787e:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0007883:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffffc0007888:	ff d5                	callq  *%rbp
ffffffffc000788a:	ba 2d aa 6d 00       	mov    $0x6daa2d,%edx
ffffffffc000788f:	48 8d 0d f7 cc ff ff 	lea    -0x3309(%rip),%rcx        # ffffffffc000458d <__asm_fill_zero+0x20d>
ffffffffc0007896:	ff d6                	callq  *%rsi
ffffffffc0007898:	90                   	nop
ffffffffc0007899:	48 83 c4 38          	add    $0x38,%rsp
ffffffffc000789d:	5b                   	pop    %rbx
ffffffffc000789e:	5e                   	pop    %rsi
ffffffffc000789f:	5f                   	pop    %rdi
ffffffffc00078a0:	5d                   	pop    %rbp
ffffffffc00078a1:	41 5c                	pop    %r12
ffffffffc00078a3:	41 5d                	pop    %r13
ffffffffc00078a5:	41 5e                	pop    %r14
ffffffffc00078a7:	41 5f                	pop    %r15
ffffffffc00078a9:	48 ff 25 00 cd ff ff 	rex.W jmpq *-0x3300(%rip)        # ffffffffc00045b0 <.refptr.scheduler_start>
ffffffffc00078b0:	4c 89 f9             	mov    %r15,%rcx
ffffffffc00078b3:	48 83 c7 01          	add    $0x1,%rdi
ffffffffc00078b7:	48 83 c3 10          	add    $0x10,%rbx
ffffffffc00078bb:	ff d6                	callq  *%rsi
ffffffffc00078bd:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00078c2:	4c 89 f1             	mov    %r14,%rcx
ffffffffc00078c5:	ff d6                	callq  *%rsi
ffffffffc00078c7:	49 3b bc 24 80 00 00 	cmp    0x80(%r12),%rdi
ffffffffc00078ce:	00 
ffffffffc00078cf:	0f 82 eb fd ff ff    	jb     ffffffffc00076c0 <___KERNEL_UNMAP_START__+0xa0>
ffffffffc00078d5:	e9 20 fe ff ff       	jmpq   ffffffffc00076fa <___KERNEL_UNMAP_START__+0xda>
ffffffffc00078da:	90                   	nop
ffffffffc00078db:	90                   	nop
ffffffffc00078dc:	90                   	nop
ffffffffc00078dd:	90                   	nop
ffffffffc00078de:	90                   	nop
ffffffffc00078df:	90                   	nop

ffffffffc00078e0 <asm_apic_setup>:
ffffffffc00078e0:	81 b9 20 03 00 00 d0 	cmpl   $0x1d0,0x320(%rcx)
ffffffffc00078e7:	01 00 00 
ffffffffc00078ea:	74 7c                	je     ffffffffc0007968 <asm_apic_setup._end>
ffffffffc00078ec:	c7 81 70 03 00 00 d4 	movl   $0xd4,0x370(%rcx)
ffffffffc00078f3:	00 00 00 
ffffffffc00078f6:	c7 81 f0 00 00 00 d0 	movl   $0x1d0,0xf0(%rcx)
ffffffffc00078fd:	01 00 00 
ffffffffc0007900:	c7 81 20 03 00 00 d0 	movl   $0xd0,0x320(%rcx)
ffffffffc0007907:	00 00 00 
ffffffffc000790a:	c7 81 e0 03 00 00 0b 	movl   $0xb,0x3e0(%rcx)
ffffffffc0007911:	00 00 00 
ffffffffc0007914:	48 31 d2             	xor    %rdx,%rdx
ffffffffc0007917:	ff ca                	dec    %edx
ffffffffc0007919:	89 91 80 03 00 00    	mov    %edx,0x380(%rcx)
ffffffffc000791f:	52                   	push   %rdx
ffffffffc0007920:	51                   	push   %rcx
ffffffffc0007921:	b9 10 27 00 00       	mov    $0x2710,%ecx
ffffffffc0007926:	e8 a5 8c ff ff       	callq  ffffffffc00005d0 <hpet_timer_spinwait>
ffffffffc000792b:	41 58                	pop    %r8
ffffffffc000792d:	5a                   	pop    %rdx
ffffffffc000792e:	48 31 c0             	xor    %rax,%rax
ffffffffc0007931:	41 8b 80 90 03 00 00 	mov    0x390(%r8),%eax
ffffffffc0007938:	29 c2                	sub    %eax,%edx
ffffffffc000793a:	89 d0                	mov    %edx,%eax
ffffffffc000793c:	48 31 d2             	xor    %rdx,%rdx
ffffffffc000793f:	48 f7 f1             	div    %rcx
ffffffffc0007942:	65 48 8b 0c 25 00 00 	mov    %gs:0x0,%rcx
ffffffffc0007949:	00 00 
ffffffffc000794b:	89 41 24             	mov    %eax,0x24(%rcx)
ffffffffc000794e:	41 c7 80 20 03 00 00 	movl   $0x200d1,0x320(%r8)
ffffffffc0007955:	d1 00 02 00 
ffffffffc0007959:	ba 0a 00 00 00       	mov    $0xa,%edx
ffffffffc000795e:	48 f7 e2             	mul    %rdx
ffffffffc0007961:	41 89 80 80 03 00 00 	mov    %eax,0x380(%r8)

ffffffffc0007968 <asm_apic_setup._end>:
ffffffffc0007968:	c3                   	retq   
ffffffffc0007969:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffffc0007970 <asm_ap_startup>:
ffffffffc0007970:	fa                   	cli    
ffffffffc0007971:	fc                   	cld    
ffffffffc0007972:	31 c0                	xor    %eax,%eax
ffffffffc0007974:	8e d8                	mov    %eax,%ds
ffffffffc0007976:	8e c0                	mov    %eax,%es
ffffffffc0007978:	8e e0                	mov    %eax,%fs
ffffffffc000797a:	8e e8                	mov    %eax,%gs
ffffffffc000797c:	8e d0                	mov    %eax,%ss
ffffffffc000797e:	0f 01 1e             	lidt   (%rsi)
ffffffffc0007981:	60                   	(bad)  
ffffffffc0007982:	10 0f                	adc    %cl,(%rdi)
ffffffffc0007984:	20 e0                	and    %ah,%al
ffffffffc0007986:	66 0f ba e8 05       	bts    $0x5,%ax
ffffffffc000798b:	0f 22 e0             	mov    %rax,%cr4
ffffffffc000798e:	66 b8 00 20          	mov    $0x2000,%ax
ffffffffc0007992:	00 00                	add    %al,(%rax)
ffffffffc0007994:	0f 22 d8             	mov    %rax,%cr3
ffffffffc0007997:	66 b9 80 00          	mov    $0x80,%cx
ffffffffc000799b:	00 c0                	add    %al,%al
ffffffffc000799d:	0f 32                	rdmsr  
ffffffffc000799f:	66 0f ba e8 08       	bts    $0x8,%ax
ffffffffc00079a4:	0f 30                	wrmsr  
ffffffffc00079a6:	0f 20 c0             	mov    %cr0,%rax
ffffffffc00079a9:	66 0d 01 00          	or     $0x1,%ax
ffffffffc00079ad:	00 80 0f 22 c0 0f    	add    %al,0xfc0220f(%rax)
ffffffffc00079b3:	01 16                	add    %edx,(%rsi)
ffffffffc00079b5:	88 10                	mov    %dl,(%rax)
ffffffffc00079b7:	ea                   	(bad)  
ffffffffc00079b8:	98                   	cwtl   
ffffffffc00079b9:	10 08                	adc    %cl,(%rax)
ffffffffc00079bb:	00                   	.byte 0x0
ffffffffc00079bc:	90                   	nop
ffffffffc00079bd:	90                   	nop
ffffffffc00079be:	90                   	nop
ffffffffc00079bf:	90                   	nop

ffffffffc00079c0 <asm_ap_startup._init_pml4>:
	...

ffffffffc00079c8 <asm_ap_startup._init_cpu_data>:
	...

ffffffffc00079d0 <asm_ap_startup._idt>:
ffffffffc00079d0:	00 00                	add    %al,(%rax)
ffffffffc00079d2:	00 00                	add    %al,(%rax)
ffffffffc00079d4:	00 00                	add    %al,(%rax)
ffffffffc00079d6:	90                   	nop
ffffffffc00079d7:	90                   	nop
ffffffffc00079d8:	90                   	nop
ffffffffc00079d9:	90                   	nop
ffffffffc00079da:	90                   	nop
ffffffffc00079db:	90                   	nop
ffffffffc00079dc:	90                   	nop
ffffffffc00079dd:	90                   	nop
ffffffffc00079de:	90                   	nop
ffffffffc00079df:	90                   	nop

ffffffffc00079e0 <asm_ap_startup._gdt>:
	...
ffffffffc00079ec:	00 9a a0 00 00 00    	add    %bl,0xa0(%rdx)
ffffffffc00079f2:	00 00                	add    %al,(%rax)
ffffffffc00079f4:	00                   	.byte 0x0
ffffffffc00079f5:	92                   	xchg   %eax,%edx
ffffffffc00079f6:	80                   	.byte 0x80
	...

ffffffffc00079f8 <asm_ap_startup._gdt_ptr>:
ffffffffc00079f8:	17                   	(bad)  
ffffffffc00079f9:	00 70 10             	add    %dh,0x10(%rax)
ffffffffc00079fc:	00 00                	add    %al,(%rax)
ffffffffc00079fe:	00 00                	add    %al,(%rax)
ffffffffc0007a00:	00 00                	add    %al,(%rax)
ffffffffc0007a02:	90                   	nop
ffffffffc0007a03:	90                   	nop
ffffffffc0007a04:	90                   	nop
ffffffffc0007a05:	90                   	nop
ffffffffc0007a06:	90                   	nop
ffffffffc0007a07:	90                   	nop

ffffffffc0007a08 <asm_ap_startup._64bit_code>:
ffffffffc0007a08:	66 b8 10 00          	mov    $0x10,%ax
ffffffffc0007a0c:	8e d8                	mov    %eax,%ds
ffffffffc0007a0e:	8e c0                	mov    %eax,%es
ffffffffc0007a10:	8e e0                	mov    %eax,%fs
ffffffffc0007a12:	8e e8                	mov    %eax,%gs
ffffffffc0007a14:	8e d0                	mov    %eax,%ss
ffffffffc0007a16:	48 8b 04 25 50 10 00 	mov    0x1050,%rax
ffffffffc0007a1d:	00 
ffffffffc0007a1e:	0f 22 d8             	mov    %rax,%cr3
ffffffffc0007a21:	4c 8b 04 25 58 10 00 	mov    0x1058,%r8
ffffffffc0007a28:	00 
ffffffffc0007a29:	49 8b 60 10          	mov    0x10(%r8),%rsp
ffffffffc0007a2d:	48 89 e5             	mov    %rsp,%rbp
ffffffffc0007a30:	48 b8 40 7a 00 c0 ff 	movabs $0xffffffffc0007a40,%rax
ffffffffc0007a37:	ff ff ff 
ffffffffc0007a3a:	ff e0                	jmpq   *%rax
ffffffffc0007a3c:	90                   	nop
ffffffffc0007a3d:	90                   	nop
ffffffffc0007a3e:	90                   	nop
ffffffffc0007a3f:	90                   	nop

ffffffffc0007a40 <_asm_ap_startup_kernel>:
ffffffffc0007a40:	ff 04 25 60 6b 00 c0 	incl   0xffffffffc0006b60
ffffffffc0007a47:	b9 1b 00 00 00       	mov    $0x1b,%ecx
ffffffffc0007a4c:	0f 32                	rdmsr  
ffffffffc0007a4e:	48 c1 e2 20          	shl    $0x20,%rdx
ffffffffc0007a52:	48 09 d0             	or     %rdx,%rax
ffffffffc0007a55:	66 31 c0             	xor    %ax,%ax
ffffffffc0007a58:	49 89 40 20          	mov    %rax,0x20(%r8)
ffffffffc0007a5c:	50                   	push   %rax
ffffffffc0007a5d:	48 31 c0             	xor    %rax,%rax
ffffffffc0007a60:	44 89 c0             	mov    %r8d,%eax
ffffffffc0007a63:	b9 01 01 00 c0       	mov    $0xc0000101,%ecx
ffffffffc0007a68:	4c 89 c2             	mov    %r8,%rdx
ffffffffc0007a6b:	48 c1 ea 20          	shr    $0x20,%rdx
ffffffffc0007a6f:	0f 30                	wrmsr  
ffffffffc0007a71:	59                   	pop    %rcx
ffffffffc0007a72:	e8 69 fe ff ff       	callq  ffffffffc00078e0 <asm_apic_setup>
ffffffffc0007a77:	0f 01 1c 25 50 6c 00 	lidt   0xffffffffc0006c50
ffffffffc0007a7e:	c0 
ffffffffc0007a7f:	e8 bb 00 00 00       	callq  ffffffffc0007b3f <asm_setup_gdt>
ffffffffc0007a84:	e9 97 86 ff ff       	jmpq   ffffffffc0000120 <_asm_ap_startup_kernel_wait>

ffffffffc0007a89 <asm_setup_ap_startup_code>:
ffffffffc0007a89:	57                   	push   %rdi
ffffffffc0007a8a:	56                   	push   %rsi
ffffffffc0007a8b:	48 89 ca             	mov    %rcx,%rdx
ffffffffc0007a8e:	bf 00 10 00 00       	mov    $0x1000,%edi
ffffffffc0007a93:	48 be 70 79 00 c0 ff 	movabs $0xffffffffc0007970,%rsi
ffffffffc0007a9a:	ff ff ff 
ffffffffc0007a9d:	b9 1a 00 00 00       	mov    $0x1a,%ecx
ffffffffc0007aa2:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
ffffffffc0007aa5:	bf 00 20 00 00       	mov    $0x2000,%edi
ffffffffc0007aaa:	48 31 c0             	xor    %rax,%rax
ffffffffc0007aad:	b9 00 08 00 00       	mov    $0x800,%ecx
ffffffffc0007ab2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
ffffffffc0007ab5:	48 89 14 25 50 10 00 	mov    %rdx,0x1050
ffffffffc0007abc:	00 
ffffffffc0007abd:	bf 00 20 00 00       	mov    $0x2000,%edi
ffffffffc0007ac2:	48 c7 07 03 30 00 00 	movq   $0x3003,(%rdi)
ffffffffc0007ac9:	48 81 c7 00 10 00 00 	add    $0x1000,%rdi
ffffffffc0007ad0:	48 c7 07 03 40 00 00 	movq   $0x4003,(%rdi)
ffffffffc0007ad7:	48 81 c7 00 10 00 00 	add    $0x1000,%rdi
ffffffffc0007ade:	48 c7 07 03 50 00 00 	movq   $0x5003,(%rdi)
ffffffffc0007ae5:	48 81 c7 08 10 00 00 	add    $0x1008,%rdi
ffffffffc0007aec:	48 c7 07 03 10 00 00 	movq   $0x1003,(%rdi)
ffffffffc0007af3:	5e                   	pop    %rsi
ffffffffc0007af4:	5f                   	pop    %rdi
ffffffffc0007af5:	c3                   	retq   

ffffffffc0007af6 <asm_setup_ap_startup_data>:
ffffffffc0007af6:	48 89 0c 25 58 10 00 	mov    %rcx,0x1058
ffffffffc0007afd:	00 
ffffffffc0007afe:	c3                   	retq   

ffffffffc0007aff <asm_cpu_setup_data>:
ffffffffc0007aff:	49 89 c8             	mov    %rcx,%r8
ffffffffc0007b02:	b9 1b 00 00 00       	mov    $0x1b,%ecx
ffffffffc0007b07:	0f 32                	rdmsr  
ffffffffc0007b09:	48 c1 e2 20          	shl    $0x20,%rdx
ffffffffc0007b0d:	48 09 d0             	or     %rdx,%rax
ffffffffc0007b10:	48 89 c1             	mov    %rax,%rcx
ffffffffc0007b13:	66 31 c0             	xor    %ax,%ax
ffffffffc0007b16:	49 89 40 20          	mov    %rax,0x20(%r8)
ffffffffc0007b1a:	50                   	push   %rax
ffffffffc0007b1b:	48 31 c0             	xor    %rax,%rax
ffffffffc0007b1e:	44 89 c0             	mov    %r8d,%eax
ffffffffc0007b21:	b9 01 01 00 c0       	mov    $0xc0000101,%ecx
ffffffffc0007b26:	4c 89 c2             	mov    %r8,%rdx
ffffffffc0007b29:	48 c1 ea 20          	shr    $0x20,%rdx
ffffffffc0007b2d:	0f 30                	wrmsr  
ffffffffc0007b2f:	59                   	pop    %rcx
ffffffffc0007b30:	8b 41 20             	mov    0x20(%rcx),%eax
ffffffffc0007b33:	c1 e8 18             	shr    $0x18,%eax
ffffffffc0007b36:	41 88 40 08          	mov    %al,0x8(%r8)
ffffffffc0007b3a:	e9 a1 fd ff ff       	jmpq   ffffffffc00078e0 <asm_apic_setup>

ffffffffc0007b3f <asm_setup_gdt>:
ffffffffc0007b3f:	0f 01 14 25 bc 6a 00 	lgdt   0xffffffffc0006abc
ffffffffc0007b46:	c0 
ffffffffc0007b47:	66 b8 10 00          	mov    $0x10,%ax
ffffffffc0007b4b:	8e d8                	mov    %eax,%ds
ffffffffc0007b4d:	8e c0                	mov    %eax,%es
ffffffffc0007b4f:	8e e0                	mov    %eax,%fs
ffffffffc0007b51:	8e e8                	mov    %eax,%gs
ffffffffc0007b53:	8e d0                	mov    %eax,%ss
ffffffffc0007b55:	6a 08                	pushq  $0x8
ffffffffc0007b57:	68 5e 7b 00 c0       	pushq  $0xffffffffc0007b5e
ffffffffc0007b5c:	48 cb                	lretq  

ffffffffc0007b5e <asm_setup_gdt._new_cs>:
ffffffffc0007b5e:	c3                   	retq   

ffffffffc0007b5f <asm_setup_idt>:
ffffffffc0007b5f:	57                   	push   %rdi
ffffffffc0007b60:	48 31 c0             	xor    %rax,%rax
ffffffffc0007b63:	b9 00 02 00 00       	mov    $0x200,%ecx
ffffffffc0007b68:	48 8b 3c 25 52 6c 00 	mov    0xffffffffc0006c52,%rdi
ffffffffc0007b6f:	c0 
ffffffffc0007b70:	f3 48 ab             	rep stos %rax,%es:(%rdi)
ffffffffc0007b73:	0f 01 1c 25 50 6c 00 	lidt   0xffffffffc0006c50
ffffffffc0007b7a:	c0 
ffffffffc0007b7b:	5f                   	pop    %rdi
ffffffffc0007b7c:	c3                   	retq   
ffffffffc0007b7d:	0f 1f 00             	nopl   (%rax)

ffffffffc0007b80 <acpi_init>:
ffffffffc0007b80:	41 57                	push   %r15
ffffffffc0007b82:	41 56                	push   %r14
ffffffffc0007b84:	41 55                	push   %r13
ffffffffc0007b86:	41 54                	push   %r12
ffffffffc0007b88:	55                   	push   %rbp
ffffffffc0007b89:	57                   	push   %rdi
ffffffffc0007b8a:	56                   	push   %rsi
ffffffffc0007b8b:	53                   	push   %rbx
ffffffffc0007b8c:	48 83 ec 48          	sub    $0x48,%rsp
ffffffffc0007b90:	4c 8b 25 39 cb ff ff 	mov    -0x34c7(%rip),%r12        # ffffffffc00046d0 <.refptr._console_vprint>
ffffffffc0007b97:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0007b9c:	48 8b 41 30          	mov    0x30(%rcx),%rax
ffffffffc0007ba0:	48 89 cd             	mov    %rcx,%rbp
ffffffffc0007ba3:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc0007ba8:	4c 8b 41 20          	mov    0x20(%rcx),%r8
ffffffffc0007bac:	4c 8b 49 28          	mov    0x28(%rcx),%r9
ffffffffc0007bb0:	48 8d 0d 99 cb ff ff 	lea    -0x3467(%rip),%rcx        # ffffffffc0004750 <.refptr._console_print+0x10>
ffffffffc0007bb7:	41 ff d4             	callq  *%r12
ffffffffc0007bba:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
ffffffffc0007bbe:	44 8b 47 04          	mov    0x4(%rdi),%r8d
ffffffffc0007bc2:	45 85 c0             	test   %r8d,%r8d
ffffffffc0007bc5:	0f 84 a5 02 00 00    	je     ffffffffc0007e70 <acpi_init+0x2f0>
ffffffffc0007bcb:	48 8d 4f 2c          	lea    0x2c(%rdi),%rcx
ffffffffc0007bcf:	45 31 d2             	xor    %r10d,%r10d
ffffffffc0007bd2:	45 31 db             	xor    %r11d,%r11d
ffffffffc0007bd5:	45 31 c9             	xor    %r9d,%r9d
ffffffffc0007bd8:	31 db                	xor    %ebx,%ebx
ffffffffc0007bda:	31 c0                	xor    %eax,%eax
ffffffffc0007bdc:	eb 13                	jmp    ffffffffc0007bf1 <acpi_init+0x71>
ffffffffc0007bde:	66 90                	xchg   %ax,%ax
ffffffffc0007be0:	83 c3 01             	add    $0x1,%ebx
ffffffffc0007be3:	8d 50 01             	lea    0x1(%rax),%edx
ffffffffc0007be6:	0f b6 14 11          	movzbl (%rcx,%rdx,1),%edx
ffffffffc0007bea:	01 d0                	add    %edx,%eax
ffffffffc0007bec:	44 39 c0             	cmp    %r8d,%eax
ffffffffc0007bef:	73 36                	jae    ffffffffc0007c27 <acpi_init+0xa7>
ffffffffc0007bf1:	89 c2                	mov    %eax,%edx
ffffffffc0007bf3:	0f b6 14 11          	movzbl (%rcx,%rdx,1),%edx
ffffffffc0007bf7:	84 d2                	test   %dl,%dl
ffffffffc0007bf9:	74 e5                	je     ffffffffc0007be0 <acpi_init+0x60>
ffffffffc0007bfb:	80 fa 01             	cmp    $0x1,%dl
ffffffffc0007bfe:	0f 84 64 01 00 00    	je     ffffffffc0007d68 <acpi_init+0x1e8>
ffffffffc0007c04:	80 fa 02             	cmp    $0x2,%dl
ffffffffc0007c07:	0f 84 6b 01 00 00    	je     ffffffffc0007d78 <acpi_init+0x1f8>
ffffffffc0007c0d:	80 fa 04             	cmp    $0x4,%dl
ffffffffc0007c10:	0f 94 c2             	sete   %dl
ffffffffc0007c13:	0f b6 d2             	movzbl %dl,%edx
ffffffffc0007c16:	41 01 d2             	add    %edx,%r10d
ffffffffc0007c19:	8d 50 01             	lea    0x1(%rax),%edx
ffffffffc0007c1c:	0f b6 14 11          	movzbl (%rcx,%rdx,1),%edx
ffffffffc0007c20:	01 d0                	add    %edx,%eax
ffffffffc0007c22:	44 39 c0             	cmp    %r8d,%eax
ffffffffc0007c25:	72 ca                	jb     ffffffffc0007bf1 <acpi_init+0x71>
ffffffffc0007c27:	41 89 dd             	mov    %ebx,%r13d
ffffffffc0007c2a:	49 81 c5 04 10 00 00 	add    $0x1004,%r13
ffffffffc0007c31:	49 c1 ed 0c          	shr    $0xc,%r13
ffffffffc0007c35:	41 89 d8             	mov    %ebx,%r8d
ffffffffc0007c38:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0007c3d:	4c 8d 7f 2c          	lea    0x2c(%rdi),%r15
ffffffffc0007c41:	44 89 54 24 28       	mov    %r10d,0x28(%rsp)
ffffffffc0007c46:	44 89 5c 24 20       	mov    %r11d,0x20(%rsp)
ffffffffc0007c4b:	48 8d 0d 2e cb ff ff 	lea    -0x34d2(%rip),%rcx        # ffffffffc0004780 <.refptr._console_print+0x40>
ffffffffc0007c52:	4c 8d 35 ee cb ff ff 	lea    -0x3412(%rip),%r14        # ffffffffc0004847 <.refptr._console_print+0x107>
ffffffffc0007c59:	41 ff d4             	callq  *%r12
ffffffffc0007c5c:	4c 89 2d 8d f6 ff ff 	mov    %r13,-0x973(%rip)        # ffffffffc00072f0 <_dt_len>
ffffffffc0007c63:	4c 89 e9             	mov    %r13,%rcx
ffffffffc0007c66:	45 31 ed             	xor    %r13d,%r13d
ffffffffc0007c69:	ff 15 51 cc ff ff    	callq  *-0x33af(%rip)        # ffffffffc00048c0 <.refptr.vm_commit>
ffffffffc0007c6f:	8b 57 04             	mov    0x4(%rdi),%edx
ffffffffc0007c72:	48 89 05 7f f6 ff ff 	mov    %rax,-0x981(%rip)        # ffffffffc00072f8 <_dt_ptr>
ffffffffc0007c79:	89 18                	mov    %ebx,(%rax)
ffffffffc0007c7b:	31 db                	xor    %ebx,%ebx
ffffffffc0007c7d:	85 d2                	test   %edx,%edx
ffffffffc0007c7f:	75 59                	jne    ffffffffc0007cda <acpi_init+0x15a>
ffffffffc0007c81:	e9 bd 00 00 00       	jmpq   ffffffffc0007d43 <acpi_init+0x1c3>
ffffffffc0007c86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffffc0007c8d:	00 00 00 
ffffffffc0007c90:	41 8b 4c 37 04       	mov    0x4(%r15,%rsi,1),%ecx
ffffffffc0007c95:	85 c9                	test   %ecx,%ecx
ffffffffc0007c97:	74 3a                	je     ffffffffc0007cd3 <acpi_init+0x153>
ffffffffc0007c99:	45 0f b6 4c 37 03    	movzbl 0x3(%r15,%rsi,1),%r9d
ffffffffc0007c9f:	45 0f b6 44 37 02    	movzbl 0x2(%r15,%rsi,1),%r8d
ffffffffc0007ca5:	f6 c1 02             	test   $0x2,%cl
ffffffffc0007ca8:	0f 85 62 01 00 00    	jne    ffffffffc0007e10 <acpi_init+0x290>
ffffffffc0007cae:	4c 8b 15 43 f6 ff ff 	mov    -0x9bd(%rip),%r10        # ffffffffc00072f8 <_dt_ptr>
ffffffffc0007cb5:	44 89 e9             	mov    %r13d,%ecx
ffffffffc0007cb8:	41 83 c5 01          	add    $0x1,%r13d
ffffffffc0007cbc:	45 88 4c 0a 04       	mov    %r9b,0x4(%r10,%rcx,1)
ffffffffc0007cc1:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0007cc6:	48 8d 0d 23 cb ff ff 	lea    -0x34dd(%rip),%rcx        # ffffffffc00047f0 <.refptr._console_print+0xb0>
ffffffffc0007ccd:	41 ff d4             	callq  *%r12
ffffffffc0007cd0:	8b 57 04             	mov    0x4(%rdi),%edx
ffffffffc0007cd3:	83 c3 08             	add    $0x8,%ebx
ffffffffc0007cd6:	39 d3                	cmp    %edx,%ebx
ffffffffc0007cd8:	73 69                	jae    ffffffffc0007d43 <acpi_init+0x1c3>
ffffffffc0007cda:	89 de                	mov    %ebx,%esi
ffffffffc0007cdc:	45 0f b6 04 37       	movzbl (%r15,%rsi,1),%r8d
ffffffffc0007ce1:	41 80 f8 0f          	cmp    $0xf,%r8b
ffffffffc0007ce5:	0f 87 9d 00 00 00    	ja     ffffffffc0007d88 <acpi_init+0x208>
ffffffffc0007ceb:	45 84 c0             	test   %r8b,%r8b
ffffffffc0007cee:	74 a0                	je     ffffffffc0007c90 <acpi_init+0x110>
ffffffffc0007cf0:	41 80 f8 01          	cmp    $0x1,%r8b
ffffffffc0007cf4:	0f 84 c6 00 00 00    	je     ffffffffc0007dc0 <acpi_init+0x240>
ffffffffc0007cfa:	41 80 f8 02          	cmp    $0x2,%r8b
ffffffffc0007cfe:	0f 84 3c 01 00 00    	je     ffffffffc0007e40 <acpi_init+0x2c0>
ffffffffc0007d04:	41 80 f8 04          	cmp    $0x4,%r8b
ffffffffc0007d08:	0f 85 8a 00 00 00    	jne    ffffffffc0007d98 <acpi_init+0x218>
ffffffffc0007d0e:	45 0f b6 44 37 02    	movzbl 0x2(%r15,%rsi,1),%r8d
ffffffffc0007d14:	41 80 f8 ff          	cmp    $0xff,%r8b
ffffffffc0007d18:	0f 85 ca 00 00 00    	jne    ffffffffc0007de8 <acpi_init+0x268>
ffffffffc0007d1e:	41 0f b6 54 37 05    	movzbl 0x5(%r15,%rsi,1),%edx
ffffffffc0007d24:	45 0f b7 4c 37 03    	movzwl 0x3(%r15,%rsi,1),%r9d
ffffffffc0007d2a:	4c 89 f1             	mov    %r14,%rcx
ffffffffc0007d2d:	83 c3 06             	add    $0x6,%ebx
ffffffffc0007d30:	89 54 24 20          	mov    %edx,0x20(%rsp)
ffffffffc0007d34:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0007d39:	41 ff d4             	callq  *%r12
ffffffffc0007d3c:	8b 57 04             	mov    0x4(%rdi),%edx
ffffffffc0007d3f:	39 d3                	cmp    %edx,%ebx
ffffffffc0007d41:	72 97                	jb     ffffffffc0007cda <acpi_init+0x15a>
ffffffffc0007d43:	48 8b 45 30          	mov    0x30(%rbp),%rax
ffffffffc0007d47:	48 8b 48 2c          	mov    0x2c(%rax),%rcx
ffffffffc0007d4b:	48 83 c4 48          	add    $0x48,%rsp
ffffffffc0007d4f:	5b                   	pop    %rbx
ffffffffc0007d50:	5e                   	pop    %rsi
ffffffffc0007d51:	5f                   	pop    %rdi
ffffffffc0007d52:	5d                   	pop    %rbp
ffffffffc0007d53:	41 5c                	pop    %r12
ffffffffc0007d55:	41 5d                	pop    %r13
ffffffffc0007d57:	41 5e                	pop    %r14
ffffffffc0007d59:	41 5f                	pop    %r15
ffffffffc0007d5b:	48 ff 25 4e cb ff ff 	rex.W jmpq *-0x34b2(%rip)        # ffffffffc00048b0 <.refptr.hpet_timer_init>
ffffffffc0007d62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc0007d68:	41 83 c1 01          	add    $0x1,%r9d
ffffffffc0007d6c:	e9 72 fe ff ff       	jmpq   ffffffffc0007be3 <acpi_init+0x63>
ffffffffc0007d71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0007d78:	41 83 c3 01          	add    $0x1,%r11d
ffffffffc0007d7c:	e9 62 fe ff ff       	jmpq   ffffffffc0007be3 <acpi_init+0x63>
ffffffffc0007d81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0007d88:	41 0f b6 4c 37 01    	movzbl 0x1(%r15,%rsi,1),%ecx
ffffffffc0007d8e:	01 cb                	add    %ecx,%ebx
ffffffffc0007d90:	e9 41 ff ff ff       	jmpq   ffffffffc0007cd6 <acpi_init+0x156>
ffffffffc0007d95:	0f 1f 00             	nopl   (%rax)
ffffffffc0007d98:	ba 1b bf e3 00       	mov    $0xe3bf1b,%edx
ffffffffc0007d9d:	48 8d 0d bc ca ff ff 	lea    -0x3544(%rip),%rcx        # ffffffffc0004860 <.refptr._console_print+0x120>
ffffffffc0007da4:	41 ff d4             	callq  *%r12
ffffffffc0007da7:	41 0f b6 54 37 01    	movzbl 0x1(%r15,%rsi,1),%edx
ffffffffc0007dad:	01 d3                	add    %edx,%ebx
ffffffffc0007daf:	8b 57 04             	mov    0x4(%rdi),%edx
ffffffffc0007db2:	e9 1f ff ff ff       	jmpq   ffffffffc0007cd6 <acpi_init+0x156>
ffffffffc0007db7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffffc0007dbe:	00 00 
ffffffffc0007dc0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0007dc5:	45 8b 4c 37 08       	mov    0x8(%r15,%rsi,1),%r9d
ffffffffc0007dca:	45 8b 44 37 04       	mov    0x4(%r15,%rsi,1),%r8d
ffffffffc0007dcf:	83 c3 0c             	add    $0xc,%ebx
ffffffffc0007dd2:	48 8d 0d 37 ca ff ff 	lea    -0x35c9(%rip),%rcx        # ffffffffc0004810 <.refptr._console_print+0xd0>
ffffffffc0007dd9:	41 ff d4             	callq  *%r12
ffffffffc0007ddc:	8b 57 04             	mov    0x4(%rdi),%edx
ffffffffc0007ddf:	e9 f2 fe ff ff       	jmpq   ffffffffc0007cd6 <acpi_init+0x156>
ffffffffc0007de4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffffc0007de8:	44 88 44 24 38       	mov    %r8b,0x38(%rsp)
ffffffffc0007ded:	ba 1b bf e3 00       	mov    $0xe3bf1b,%edx
ffffffffc0007df2:	48 8d 0d 3d ca ff ff 	lea    -0x35c3(%rip),%rcx        # ffffffffc0004836 <.refptr._console_print+0xf6>
ffffffffc0007df9:	ff 15 41 c9 ff ff    	callq  *-0x36bf(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0007dff:	44 0f b6 44 24 38    	movzbl 0x38(%rsp),%r8d
ffffffffc0007e05:	e9 14 ff ff ff       	jmpq   ffffffffc0007d1e <acpi_init+0x19e>
ffffffffc0007e0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc0007e10:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
ffffffffc0007e14:	ba 1b bf e3 00       	mov    $0xe3bf1b,%edx
ffffffffc0007e19:	48 8d 0d 98 c9 ff ff 	lea    -0x3668(%rip),%rcx        # ffffffffc00047b8 <.refptr._console_print+0x78>
ffffffffc0007e20:	44 89 4c 24 3c       	mov    %r9d,0x3c(%rsp)
ffffffffc0007e25:	44 89 44 24 38       	mov    %r8d,0x38(%rsp)
ffffffffc0007e2a:	41 ff d4             	callq  *%r12
ffffffffc0007e2d:	44 8b 44 24 38       	mov    0x38(%rsp),%r8d
ffffffffc0007e32:	44 8b 4c 24 3c       	mov    0x3c(%rsp),%r9d
ffffffffc0007e37:	e9 85 fe ff ff       	jmpq   ffffffffc0007cc1 <acpi_init+0x141>
ffffffffc0007e3c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffffc0007e40:	41 0f b7 54 37 08    	movzwl 0x8(%r15,%rsi,1),%edx
ffffffffc0007e46:	45 8b 4c 37 04       	mov    0x4(%r15,%rsi,1),%r9d
ffffffffc0007e4b:	83 c3 0a             	add    $0xa,%ebx
ffffffffc0007e4e:	48 8d 0d cc c9 ff ff 	lea    -0x3634(%rip),%rcx        # ffffffffc0004821 <.refptr._console_print+0xe1>
ffffffffc0007e55:	45 0f b6 44 37 03    	movzbl 0x3(%r15,%rsi,1),%r8d
ffffffffc0007e5b:	89 54 24 20          	mov    %edx,0x20(%rsp)
ffffffffc0007e5f:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0007e64:	41 ff d4             	callq  *%r12
ffffffffc0007e67:	8b 57 04             	mov    0x4(%rdi),%edx
ffffffffc0007e6a:	e9 67 fe ff ff       	jmpq   ffffffffc0007cd6 <acpi_init+0x156>
ffffffffc0007e6f:	90                   	nop
ffffffffc0007e70:	45 31 d2             	xor    %r10d,%r10d
ffffffffc0007e73:	45 31 db             	xor    %r11d,%r11d
ffffffffc0007e76:	45 31 c9             	xor    %r9d,%r9d
ffffffffc0007e79:	31 db                	xor    %ebx,%ebx
ffffffffc0007e7b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffffc0007e81:	e9 af fd ff ff       	jmpq   ffffffffc0007c35 <acpi_init+0xb5>
ffffffffc0007e86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffffc0007e8d:	00 00 00 

ffffffffc0007e90 <acpi_get_data>:
ffffffffc0007e90:	48 8b 05 61 f4 ff ff 	mov    -0xb9f(%rip),%rax        # ffffffffc00072f8 <_dt_ptr>
ffffffffc0007e97:	c3                   	retq   
ffffffffc0007e98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffffc0007e9f:	00 

ffffffffc0007ea0 <acpi_free_data>:
ffffffffc0007ea0:	48 8b 15 49 f4 ff ff 	mov    -0xbb7(%rip),%rdx        # ffffffffc00072f0 <_dt_len>
ffffffffc0007ea7:	48 8b 0d 4a f4 ff ff 	mov    -0xbb6(%rip),%rcx        # ffffffffc00072f8 <_dt_ptr>
ffffffffc0007eae:	48 ff 25 eb c9 ff ff 	rex.W jmpq *-0x3615(%rip)        # ffffffffc00048a0 <.refptr.vm_release>
ffffffffc0007eb5:	90                   	nop
ffffffffc0007eb6:	90                   	nop
ffffffffc0007eb7:	90                   	nop
ffffffffc0007eb8:	90                   	nop
ffffffffc0007eb9:	90                   	nop
ffffffffc0007eba:	90                   	nop
ffffffffc0007ebb:	90                   	nop
ffffffffc0007ebc:	90                   	nop
ffffffffc0007ebd:	90                   	nop
ffffffffc0007ebe:	90                   	nop
ffffffffc0007ebf:	90                   	nop

ffffffffc0007ec0 <apic_init>:
ffffffffc0007ec0:	53                   	push   %rbx
ffffffffc0007ec1:	48 83 ec 20          	sub    $0x20,%rsp
ffffffffc0007ec5:	48 8b 1d b4 cb ff ff 	mov    -0x344c(%rip),%rbx        # ffffffffc0004a80 <.refptr.set_idt_entry>
ffffffffc0007ecc:	48 8b 15 bd cb ff ff 	mov    -0x3443(%rip),%rdx        # ffffffffc0004a90 <.refptr.asm_apic_spurious_int>
ffffffffc0007ed3:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0007ed9:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0007edf:	b9 d0 00 00 00       	mov    $0xd0,%ecx
ffffffffc0007ee4:	ff d3                	callq  *%rbx
ffffffffc0007ee6:	48 8b 15 83 cb ff ff 	mov    -0x347d(%rip),%rdx        # ffffffffc0004a70 <.refptr.asm_apic_timer_int>
ffffffffc0007eed:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0007ef3:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0007ef9:	b9 d1 00 00 00       	mov    $0xd1,%ecx
ffffffffc0007efe:	ff d3                	callq  *%rbx
ffffffffc0007f00:	48 8b 15 59 cb ff ff 	mov    -0x34a7(%rip),%rdx        # ffffffffc0004a60 <.refptr.asm_apic_lint0_int>
ffffffffc0007f07:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0007f0d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0007f13:	b9 d2 00 00 00       	mov    $0xd2,%ecx
ffffffffc0007f18:	ff d3                	callq  *%rbx
ffffffffc0007f1a:	48 8b 15 2f cb ff ff 	mov    -0x34d1(%rip),%rdx        # ffffffffc0004a50 <.refptr.asm_apic_lint1_int>
ffffffffc0007f21:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0007f27:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0007f2d:	b9 d3 00 00 00       	mov    $0xd3,%ecx
ffffffffc0007f32:	ff d3                	callq  *%rbx
ffffffffc0007f34:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0007f3a:	b9 d4 00 00 00       	mov    $0xd4,%ecx
ffffffffc0007f3f:	48 89 d8             	mov    %rbx,%rax
ffffffffc0007f42:	48 8b 15 f7 ca ff ff 	mov    -0x3509(%rip),%rdx        # ffffffffc0004a40 <.refptr.asm_apic_err_int>
ffffffffc0007f49:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0007f4f:	48 83 c4 20          	add    $0x20,%rsp
ffffffffc0007f53:	5b                   	pop    %rbx
ffffffffc0007f54:	48 ff e0             	rex.W jmpq *%rax
ffffffffc0007f57:	90                   	nop
ffffffffc0007f58:	90                   	nop
ffffffffc0007f59:	90                   	nop
ffffffffc0007f5a:	90                   	nop
ffffffffc0007f5b:	90                   	nop
ffffffffc0007f5c:	90                   	nop
ffffffffc0007f5d:	90                   	nop
ffffffffc0007f5e:	90                   	nop
ffffffffc0007f5f:	90                   	nop

ffffffffc0007f60 <cpu_init>:
ffffffffc0007f60:	41 57                	push   %r15
ffffffffc0007f62:	41 56                	push   %r14
ffffffffc0007f64:	41 55                	push   %r13
ffffffffc0007f66:	41 54                	push   %r12
ffffffffc0007f68:	55                   	push   %rbp
ffffffffc0007f69:	57                   	push   %rdi
ffffffffc0007f6a:	56                   	push   %rsi
ffffffffc0007f6b:	53                   	push   %rbx
ffffffffc0007f6c:	48 83 ec 58          	sub    $0x58,%rsp
ffffffffc0007f70:	ff 15 1a cd ff ff    	callq  *-0x32e6(%rip)        # ffffffffc0004c90 <.refptr.acpi_get_data>
ffffffffc0007f76:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0007f7b:	48 8d 0d 1e cb ff ff 	lea    -0x34e2(%rip),%rcx        # ffffffffc0004aa0 <.refptr.asm_apic_spurious_int+0x10>
ffffffffc0007f82:	44 8b 00             	mov    (%rax),%r8d
ffffffffc0007f85:	49 89 c4             	mov    %rax,%r12
ffffffffc0007f88:	48 8b 05 41 c7 ff ff 	mov    -0x38bf(%rip),%rax        # ffffffffc00046d0 <.refptr._console_vprint>
ffffffffc0007f8f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffffc0007f94:	ff d0                	callq  *%rax
ffffffffc0007f96:	41 8b 14 24          	mov    (%r12),%edx
ffffffffc0007f9a:	8d 42 ff             	lea    -0x1(%rdx),%eax
ffffffffc0007f9d:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffffc0007fa1:	c1 e0 0b             	shl    $0xb,%eax
ffffffffc0007fa4:	48 8d 8c d0 ff 0f 00 	lea    0xfff(%rax,%rdx,8),%rcx
ffffffffc0007fab:	00 
ffffffffc0007fac:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffffc0007fb0:	ff 15 0a c9 ff ff    	callq  *-0x36f6(%rip)        # ffffffffc00048c0 <.refptr.vm_commit>
ffffffffc0007fb6:	48 89 05 53 f3 ff ff 	mov    %rax,-0xcad(%rip)        # ffffffffc0007310 <_cpu_dt>
ffffffffc0007fbd:	48 89 c1             	mov    %rax,%rcx
ffffffffc0007fc0:	48 89 00             	mov    %rax,(%rax)
ffffffffc0007fc3:	c6 40 09 00          	movb   $0x0,0x9(%rax)
ffffffffc0007fc7:	ff 15 b3 cc ff ff    	callq  *-0x334d(%rip)        # ffffffffc0004c80 <.refptr.asm_cpu_setup_data>
ffffffffc0007fcd:	ff 15 9d cc ff ff    	callq  *-0x3363(%rip)        # ffffffffc0004c70 <.refptr.asm_current_cpu>
ffffffffc0007fd3:	49 89 c0             	mov    %rax,%r8
ffffffffc0007fd6:	48 8b 05 33 f3 ff ff 	mov    -0xccd(%rip),%rax        # ffffffffc0007310 <_cpu_dt>
ffffffffc0007fdd:	4c 39 c0             	cmp    %r8,%rax
ffffffffc0007fe0:	74 34                	je     ffffffffc0008016 <cpu_init+0xb6>
ffffffffc0007fe2:	48 8d 05 ec ca ff ff 	lea    -0x3514(%rip),%rax        # ffffffffc0004ad5 <.refptr.asm_apic_spurious_int+0x45>
ffffffffc0007fe9:	4c 8d 0d e8 cb ff ff 	lea    -0x3418(%rip),%r9        # ffffffffc0004bd8 <.refptr.asm_apic_spurious_int+0x148>
ffffffffc0007ff0:	41 b8 22 00 00 00    	mov    $0x22,%r8d
ffffffffc0007ff6:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc0007ffb:	48 8d 15 ad ca ff ff 	lea    -0x3553(%rip),%rdx        # ffffffffc0004aaf <.refptr.asm_apic_spurious_int+0x1f>
ffffffffc0008002:	48 8d 0d bb ca ff ff 	lea    -0x3545(%rip),%rcx        # ffffffffc0004ac4 <.refptr.asm_apic_spurious_int+0x34>
ffffffffc0008009:	ff 15 51 cc ff ff    	callq  *-0x33af(%rip)        # ffffffffc0004c60 <.refptr.fatal_error_line>
ffffffffc000800f:	48 8b 05 fa f2 ff ff 	mov    -0xd06(%rip),%rax        # ffffffffc0007310 <_cpu_dt>
ffffffffc0008016:	44 8b 48 20          	mov    0x20(%rax),%r9d
ffffffffc000801a:	44 0f b6 40 08       	movzbl 0x8(%rax),%r8d
ffffffffc000801f:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008024:	48 8d 0d c5 ca ff ff 	lea    -0x353b(%rip),%rcx        # ffffffffc0004af0 <.refptr.asm_apic_spurious_int+0x60>
ffffffffc000802b:	8b 40 24             	mov    0x24(%rax),%eax
ffffffffc000802e:	89 44 24 20          	mov    %eax,0x20(%rsp)
ffffffffc0008032:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
ffffffffc0008037:	ff d0                	callq  *%rax
ffffffffc0008039:	ba 05 00 00 00       	mov    $0x5,%edx
ffffffffc000803e:	b9 00 10 00 00       	mov    $0x1000,%ecx
ffffffffc0008043:	ff 15 07 cc ff ff    	callq  *-0x33f9(%rip)        # ffffffffc0004c50 <.refptr.paging_identity_map>
ffffffffc0008049:	ff 15 f1 cb ff ff    	callq  *-0x340f(%rip)        # ffffffffc0004c40 <.refptr.paging_get_phys_pml4>
ffffffffc000804f:	48 89 c1             	mov    %rax,%rcx
ffffffffc0008052:	ff 15 d8 cb ff ff    	callq  *-0x3428(%rip)        # ffffffffc0004c30 <.refptr.asm_setup_ap_startup_code>
ffffffffc0008058:	41 8b 14 24          	mov    (%r12),%edx
ffffffffc000805c:	45 31 c9             	xor    %r9d,%r9d
ffffffffc000805f:	45 31 c0             	xor    %r8d,%r8d
ffffffffc0008062:	48 8b 05 a7 f2 ff ff 	mov    -0xd59(%rip),%rax        # ffffffffc0007310 <_cpu_dt>
ffffffffc0008069:	4c 8b 35 b0 cb ff ff 	mov    -0x3450(%rip),%r14        # ffffffffc0004c20 <.refptr.apic_send_ipi>
ffffffffc0008070:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffffc0008074:	48 8d bc d0 00 08 00 	lea    0x800(%rax,%rdx,8),%rdi
ffffffffc000807b:	00 
ffffffffc000807c:	8b 48 20             	mov    0x20(%rax),%ecx
ffffffffc000807f:	48 8d 68 28          	lea    0x28(%rax),%rbp
ffffffffc0008083:	ba c5 0c 00 00       	mov    $0xcc5,%edx
ffffffffc0008088:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
ffffffffc000808d:	41 ff d6             	callq  *%r14
ffffffffc0008090:	45 8b 0c 24          	mov    (%r12),%r9d
ffffffffc0008094:	45 85 c9             	test   %r9d,%r9d
ffffffffc0008097:	0f 84 5e 01 00 00    	je     ffffffffc00081fb <cpu_init+0x29b>
ffffffffc000809d:	c7 44 24 4c 01 00 00 	movl   $0x1,0x4c(%rsp)
ffffffffc00080a4:	00 
ffffffffc00080a5:	48 8b 3d 54 cb ff ff 	mov    -0x34ac(%rip),%rdi        # ffffffffc0004c00 <.refptr.hpet_timer_spinwait>
ffffffffc00080ac:	31 f6                	xor    %esi,%esi
ffffffffc00080ae:	bb 02 00 00 00       	mov    $0x2,%ebx
ffffffffc00080b3:	eb 0f                	jmp    ffffffffc00080c4 <cpu_init+0x164>
ffffffffc00080b5:	0f 1f 00             	nopl   (%rax)
ffffffffc00080b8:	83 c6 01             	add    $0x1,%esi
ffffffffc00080bb:	44 39 ce             	cmp    %r9d,%esi
ffffffffc00080be:	0f 83 37 01 00 00    	jae    ffffffffc00081fb <cpu_init+0x29b>
ffffffffc00080c4:	48 8b 15 45 f2 ff ff 	mov    -0xdbb(%rip),%rdx        # ffffffffc0007310 <_cpu_dt>
ffffffffc00080cb:	89 f0                	mov    %esi,%eax
ffffffffc00080cd:	45 0f b6 7c 04 04    	movzbl 0x4(%r12,%rax,1),%r15d
ffffffffc00080d3:	44 38 7a 08          	cmp    %r15b,0x8(%rdx)
ffffffffc00080d7:	74 df                	je     ffffffffc00080b8 <cpu_init+0x158>
ffffffffc00080d9:	45 0f b6 ef          	movzbl %r15b,%r13d
ffffffffc00080dd:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
ffffffffc00080e2:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00080e7:	48 8d 0d 3b ca ff ff 	lea    -0x35c5(%rip),%rcx        # ffffffffc0004b29 <.refptr.asm_apic_spurious_int+0x99>
ffffffffc00080ee:	45 89 e8             	mov    %r13d,%r8d
ffffffffc00080f1:	ff d0                	callq  *%rax
ffffffffc00080f3:	0f b6 44 24 4c       	movzbl 0x4c(%rsp),%eax
ffffffffc00080f8:	44 88 7d 08          	mov    %r15b,0x8(%rbp)
ffffffffc00080fc:	48 89 e9             	mov    %rbp,%rcx
ffffffffc00080ff:	48 89 6d 00          	mov    %rbp,0x0(%rbp)
ffffffffc0008103:	45 31 ff             	xor    %r15d,%r15d
ffffffffc0008106:	88 45 09             	mov    %al,0x9(%rbp)
ffffffffc0008109:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
ffffffffc000810e:	48 89 45 10          	mov    %rax,0x10(%rbp)
ffffffffc0008112:	ff 15 f8 ca ff ff    	callq  *-0x3508(%rip)        # ffffffffc0004c10 <.refptr.asm_setup_ap_startup_data>
ffffffffc0008118:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffffc000811f:	00 
ffffffffc0008120:	8b 05 3a ea ff ff    	mov    -0x15c6(%rip),%eax        # ffffffffc0006b60 <_cpu_ap_c>
ffffffffc0008126:	39 d8                	cmp    %ebx,%eax
ffffffffc0008128:	73 49                	jae    ffffffffc0008173 <cpu_init+0x213>
ffffffffc000812a:	41 83 c7 01          	add    $0x1,%r15d
ffffffffc000812e:	b9 64 00 00 00       	mov    $0x64,%ecx
ffffffffc0008133:	ff d7                	callq  *%rdi
ffffffffc0008135:	41 80 ff c8          	cmp    $0xc8,%r15b
ffffffffc0008139:	0f 84 01 01 00 00    	je     ffffffffc0008240 <cpu_init+0x2e0>
ffffffffc000813f:	43 8d 04 bf          	lea    (%r15,%r15,4),%eax
ffffffffc0008143:	41 8d 04 c7          	lea    (%r15,%rax,8),%eax
ffffffffc0008147:	c0 c8 02             	ror    $0x2,%al
ffffffffc000814a:	3c 02                	cmp    $0x2,%al
ffffffffc000814c:	76 d2                	jbe    ffffffffc0008120 <cpu_init+0x1c0>
ffffffffc000814e:	48 8b 05 bb f1 ff ff 	mov    -0xe45(%rip),%rax        # ffffffffc0007310 <_cpu_dt>
ffffffffc0008155:	45 89 e9             	mov    %r13d,%r9d
ffffffffc0008158:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffffc000815e:	ba 46 00 00 00       	mov    $0x46,%edx
ffffffffc0008163:	8b 48 20             	mov    0x20(%rax),%ecx
ffffffffc0008166:	41 ff d6             	callq  *%r14
ffffffffc0008169:	8b 05 f1 e9 ff ff    	mov    -0x160f(%rip),%eax        # ffffffffc0006b60 <_cpu_ap_c>
ffffffffc000816f:	39 d8                	cmp    %ebx,%eax
ffffffffc0008171:	72 b7                	jb     ffffffffc000812a <cpu_init+0x1ca>
ffffffffc0008173:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
ffffffffc0008178:	44 0f b6 45 08       	movzbl 0x8(%rbp),%r8d
ffffffffc000817d:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008182:	83 c3 01             	add    $0x1,%ebx
ffffffffc0008185:	48 8d 0d bc c9 ff ff 	lea    -0x3644(%rip),%rcx        # ffffffffc0004b48 <.refptr.asm_apic_spurious_int+0xb8>
ffffffffc000818c:	ff d0                	callq  *%rax
ffffffffc000818e:	8b 05 cc e9 ff ff    	mov    -0x1634(%rip),%eax        # ffffffffc0006b60 <_cpu_ap_c>
ffffffffc0008194:	4c 8b 2d 65 ca ff ff 	mov    -0x359b(%rip),%r13        # ffffffffc0004c00 <.refptr.hpet_timer_spinwait>
ffffffffc000819b:	39 c3                	cmp    %eax,%ebx
ffffffffc000819d:	74 13                	je     ffffffffc00081b2 <cpu_init+0x252>
ffffffffc000819f:	90                   	nop
ffffffffc00081a0:	b9 19 00 00 00       	mov    $0x19,%ecx
ffffffffc00081a5:	41 ff d5             	callq  *%r13
ffffffffc00081a8:	8b 05 b2 e9 ff ff    	mov    -0x164e(%rip),%eax        # ffffffffc0006b60 <_cpu_ap_c>
ffffffffc00081ae:	39 d8                	cmp    %ebx,%eax
ffffffffc00081b0:	75 ee                	jne    ffffffffc00081a0 <cpu_init+0x240>
ffffffffc00081b2:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
ffffffffc00081b7:	44 0f b6 45 08       	movzbl 0x8(%rbp),%r8d
ffffffffc00081bc:	ba 2d aa 6d 00       	mov    $0x6daa2d,%edx
ffffffffc00081c1:	48 8d 0d ba c9 ff ff 	lea    -0x3646(%rip),%rcx        # ffffffffc0004b82 <.refptr.asm_apic_spurious_int+0xf2>
ffffffffc00081c8:	ff d0                	callq  *%rax
ffffffffc00081ca:	8b 05 90 e9 ff ff    	mov    -0x1670(%rip),%eax        # ffffffffc0006b60 <_cpu_ap_c>
ffffffffc00081d0:	83 e8 01             	sub    $0x1,%eax
ffffffffc00081d3:	89 05 87 e9 ff ff    	mov    %eax,-0x1679(%rip)        # ffffffffc0006b60 <_cpu_ap_c>
ffffffffc00081d9:	45 8b 0c 24          	mov    (%r12),%r9d
ffffffffc00081dd:	83 c6 01             	add    $0x1,%esi
ffffffffc00081e0:	83 44 24 4c 01       	addl   $0x1,0x4c(%rsp)
ffffffffc00081e5:	48 83 c5 28          	add    $0x28,%rbp
ffffffffc00081e9:	48 81 44 24 40 00 08 	addq   $0x800,0x40(%rsp)
ffffffffc00081f0:	00 00 
ffffffffc00081f2:	44 39 ce             	cmp    %r9d,%esi
ffffffffc00081f5:	0f 82 c9 fe ff ff    	jb     ffffffffc00080c4 <cpu_init+0x164>
ffffffffc00081fb:	44 8b 05 5e e9 ff ff 	mov    -0x16a2(%rip),%r8d        # ffffffffc0006b60 <_cpu_ap_c>
ffffffffc0008202:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
ffffffffc0008207:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc000820c:	48 8d 0d af c9 ff ff 	lea    -0x3651(%rip),%rcx        # ffffffffc0004bc2 <.refptr.asm_apic_spurious_int+0x132>
ffffffffc0008213:	ff d0                	callq  *%rax
ffffffffc0008215:	ba 05 00 00 00       	mov    $0x5,%edx
ffffffffc000821a:	b9 00 10 00 00       	mov    $0x1000,%ecx
ffffffffc000821f:	48 83 c4 58          	add    $0x58,%rsp
ffffffffc0008223:	5b                   	pop    %rbx
ffffffffc0008224:	5e                   	pop    %rsi
ffffffffc0008225:	5f                   	pop    %rdi
ffffffffc0008226:	5d                   	pop    %rbp
ffffffffc0008227:	41 5c                	pop    %r12
ffffffffc0008229:	41 5d                	pop    %r13
ffffffffc000822b:	41 5e                	pop    %r14
ffffffffc000822d:	41 5f                	pop    %r15
ffffffffc000822f:	48 ff 25 ba c9 ff ff 	rex.W jmpq *-0x3646(%rip)        # ffffffffc0004bf0 <.refptr.paging_identity_unmap>
ffffffffc0008236:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffffc000823d:	00 00 00 
ffffffffc0008240:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
ffffffffc0008245:	45 89 e8             	mov    %r13d,%r8d
ffffffffc0008248:	ba 1b bf e3 00       	mov    $0xe3bf1b,%edx
ffffffffc000824d:	83 c3 01             	add    $0x1,%ebx
ffffffffc0008250:	48 8d 0d 49 c9 ff ff 	lea    -0x36b7(%rip),%rcx        # ffffffffc0004ba0 <.refptr.asm_apic_spurious_int+0x110>
ffffffffc0008257:	ff d0                	callq  *%rax
ffffffffc0008259:	8b 05 01 e9 ff ff    	mov    -0x16ff(%rip),%eax        # ffffffffc0006b60 <_cpu_ap_c>
ffffffffc000825f:	83 c0 01             	add    $0x1,%eax
ffffffffc0008262:	89 05 f8 e8 ff ff    	mov    %eax,-0x1708(%rip)        # ffffffffc0006b60 <_cpu_ap_c>
ffffffffc0008268:	e9 6c ff ff ff       	jmpq   ffffffffc00081d9 <cpu_init+0x279>
ffffffffc000826d:	90                   	nop
ffffffffc000826e:	90                   	nop
ffffffffc000826f:	90                   	nop

ffffffffc0008270 <cpu_info_init>:
ffffffffc0008270:	41 54                	push   %r12
ffffffffc0008272:	53                   	push   %rbx
ffffffffc0008273:	48 83 ec 38          	sub    $0x38,%rsp
ffffffffc0008277:	48 8b 1d b2 cb ff ff 	mov    -0x344e(%rip),%rbx        # ffffffffc0004e30 <.refptr.asm_cpuid>
ffffffffc000827e:	31 c9                	xor    %ecx,%ecx
ffffffffc0008280:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
ffffffffc0008285:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0008288:	ff d3                	callq  *%rbx
ffffffffc000828a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
ffffffffc000828f:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0008292:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffffc0008297:	c6 05 92 f0 ff ff 00 	movb   $0x0,-0xf6e(%rip)        # ffffffffc0007330 <cpu_info_data+0x10>
ffffffffc000829e:	48 89 05 7b f0 ff ff 	mov    %rax,-0xf85(%rip)        # ffffffffc0007320 <cpu_info_data>
ffffffffc00082a5:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
ffffffffc00082a9:	89 05 79 f0 ff ff    	mov    %eax,-0xf87(%rip)        # ffffffffc0007328 <cpu_info_data+0x8>
ffffffffc00082af:	8b 44 24 28          	mov    0x28(%rsp),%eax
ffffffffc00082b3:	89 05 73 f0 ff ff    	mov    %eax,-0xf8d(%rip)        # ffffffffc000732c <cpu_info_data+0xc>
ffffffffc00082b9:	ff d3                	callq  *%rbx
ffffffffc00082bb:	8b 44 24 28          	mov    0x28(%rsp),%eax
ffffffffc00082bf:	8b 54 24 2c          	mov    0x2c(%rsp),%edx
ffffffffc00082c3:	b9 00 00 00 80       	mov    $0x80000000,%ecx
ffffffffc00082c8:	48 c1 e0 20          	shl    $0x20,%rax
ffffffffc00082cc:	48 09 d0             	or     %rdx,%rax
ffffffffc00082cf:	4c 89 e2             	mov    %r12,%rdx
ffffffffc00082d2:	48 89 05 5f f0 ff ff 	mov    %rax,-0xfa1(%rip)        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc00082d9:	ff d3                	callq  *%rbx
ffffffffc00082db:	81 7c 24 20 03 00 00 	cmpl   $0x80000003,0x20(%rsp)
ffffffffc00082e2:	80 
ffffffffc00082e3:	0f 87 97 02 00 00    	ja     ffffffffc0008580 <cpu_info_init+0x310>
ffffffffc00082e9:	48 8b 05 38 cb ff ff 	mov    -0x34c8(%rip),%rax        # ffffffffc0004e28 <.refptr.acpi_get_data+0x198>
ffffffffc00082f0:	c7 05 4e f0 ff ff 43 	movl   $0x555043,-0xfb2(%rip)        # ffffffffc0007348 <cpu_info_data+0x28>
ffffffffc00082f7:	50 55 00 
ffffffffc00082fa:	48 89 05 3f f0 ff ff 	mov    %rax,-0xfc1(%rip)        # ffffffffc0007340 <cpu_info_data+0x20>
ffffffffc0008301:	44 8b 05 18 f0 ff ff 	mov    -0xfe8(%rip),%r8d        # ffffffffc0007320 <cpu_info_data>
ffffffffc0008308:	48 8b 1d c1 c3 ff ff 	mov    -0x3c3f(%rip),%rbx        # ffffffffc00046d0 <.refptr._console_vprint>
ffffffffc000830f:	4c 8d 0d 0e f0 ff ff 	lea    -0xff2(%rip),%r9        # ffffffffc0007324 <cpu_info_data+0x4>
ffffffffc0008316:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc000831b:	48 8d 0d 7e c9 ff ff 	lea    -0x3682(%rip),%rcx        # ffffffffc0004ca0 <.refptr.acpi_get_data+0x10>
ffffffffc0008322:	ff d3                	callq  *%rbx
ffffffffc0008324:	48 8b 05 0d f0 ff ff 	mov    -0xff3(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc000832b:	a8 01                	test   $0x1,%al
ffffffffc000832d:	0f 85 0d 0a 00 00    	jne    ffffffffc0008d40 <cpu_info_init+0xad0>
ffffffffc0008333:	a8 02                	test   $0x2,%al
ffffffffc0008335:	0f 85 e5 09 00 00    	jne    ffffffffc0008d20 <cpu_info_init+0xab0>
ffffffffc000833b:	a8 04                	test   $0x4,%al
ffffffffc000833d:	0f 85 bd 09 00 00    	jne    ffffffffc0008d00 <cpu_info_init+0xa90>
ffffffffc0008343:	a8 08                	test   $0x8,%al
ffffffffc0008345:	0f 85 95 09 00 00    	jne    ffffffffc0008ce0 <cpu_info_init+0xa70>
ffffffffc000834b:	a8 10                	test   $0x10,%al
ffffffffc000834d:	0f 85 6d 09 00 00    	jne    ffffffffc0008cc0 <cpu_info_init+0xa50>
ffffffffc0008353:	a8 20                	test   $0x20,%al
ffffffffc0008355:	0f 85 45 09 00 00    	jne    ffffffffc0008ca0 <cpu_info_init+0xa30>
ffffffffc000835b:	a8 40                	test   $0x40,%al
ffffffffc000835d:	0f 85 1d 09 00 00    	jne    ffffffffc0008c80 <cpu_info_init+0xa10>
ffffffffc0008363:	a8 80                	test   $0x80,%al
ffffffffc0008365:	0f 85 f5 08 00 00    	jne    ffffffffc0008c60 <cpu_info_init+0x9f0>
ffffffffc000836b:	f6 c4 01             	test   $0x1,%ah
ffffffffc000836e:	0f 85 cc 08 00 00    	jne    ffffffffc0008c40 <cpu_info_init+0x9d0>
ffffffffc0008374:	f6 c4 02             	test   $0x2,%ah
ffffffffc0008377:	0f 85 a3 08 00 00    	jne    ffffffffc0008c20 <cpu_info_init+0x9b0>
ffffffffc000837d:	f6 c4 08             	test   $0x8,%ah
ffffffffc0008380:	0f 85 7a 08 00 00    	jne    ffffffffc0008c00 <cpu_info_init+0x990>
ffffffffc0008386:	f6 c4 10             	test   $0x10,%ah
ffffffffc0008389:	0f 85 51 08 00 00    	jne    ffffffffc0008be0 <cpu_info_init+0x970>
ffffffffc000838f:	f6 c4 20             	test   $0x20,%ah
ffffffffc0008392:	0f 85 28 08 00 00    	jne    ffffffffc0008bc0 <cpu_info_init+0x950>
ffffffffc0008398:	f6 c4 40             	test   $0x40,%ah
ffffffffc000839b:	0f 85 ff 07 00 00    	jne    ffffffffc0008ba0 <cpu_info_init+0x930>
ffffffffc00083a1:	f6 c4 80             	test   $0x80,%ah
ffffffffc00083a4:	0f 85 d6 07 00 00    	jne    ffffffffc0008b80 <cpu_info_init+0x910>
ffffffffc00083aa:	a9 00 00 01 00       	test   $0x10000,%eax
ffffffffc00083af:	0f 85 ab 07 00 00    	jne    ffffffffc0008b60 <cpu_info_init+0x8f0>
ffffffffc00083b5:	a9 00 00 02 00       	test   $0x20000,%eax
ffffffffc00083ba:	0f 85 80 07 00 00    	jne    ffffffffc0008b40 <cpu_info_init+0x8d0>
ffffffffc00083c0:	a9 00 00 04 00       	test   $0x40000,%eax
ffffffffc00083c5:	0f 85 55 07 00 00    	jne    ffffffffc0008b20 <cpu_info_init+0x8b0>
ffffffffc00083cb:	a9 00 00 08 00       	test   $0x80000,%eax
ffffffffc00083d0:	0f 85 2a 07 00 00    	jne    ffffffffc0008b00 <cpu_info_init+0x890>
ffffffffc00083d6:	a9 00 00 20 00       	test   $0x200000,%eax
ffffffffc00083db:	0f 85 ff 06 00 00    	jne    ffffffffc0008ae0 <cpu_info_init+0x870>
ffffffffc00083e1:	a9 00 00 40 00       	test   $0x400000,%eax
ffffffffc00083e6:	0f 85 d4 06 00 00    	jne    ffffffffc0008ac0 <cpu_info_init+0x850>
ffffffffc00083ec:	a9 00 00 80 00       	test   $0x800000,%eax
ffffffffc00083f1:	0f 85 a9 06 00 00    	jne    ffffffffc0008aa0 <cpu_info_init+0x830>
ffffffffc00083f7:	a9 00 00 00 01       	test   $0x1000000,%eax
ffffffffc00083fc:	0f 85 7e 06 00 00    	jne    ffffffffc0008a80 <cpu_info_init+0x810>
ffffffffc0008402:	a9 00 00 00 02       	test   $0x2000000,%eax
ffffffffc0008407:	0f 85 53 06 00 00    	jne    ffffffffc0008a60 <cpu_info_init+0x7f0>
ffffffffc000840d:	a9 00 00 00 04       	test   $0x4000000,%eax
ffffffffc0008412:	0f 85 28 06 00 00    	jne    ffffffffc0008a40 <cpu_info_init+0x7d0>
ffffffffc0008418:	a9 00 00 00 08       	test   $0x8000000,%eax
ffffffffc000841d:	0f 85 fd 05 00 00    	jne    ffffffffc0008a20 <cpu_info_init+0x7b0>
ffffffffc0008423:	a9 00 00 00 10       	test   $0x10000000,%eax
ffffffffc0008428:	0f 85 d2 05 00 00    	jne    ffffffffc0008a00 <cpu_info_init+0x790>
ffffffffc000842e:	a9 00 00 00 20       	test   $0x20000000,%eax
ffffffffc0008433:	0f 85 a7 05 00 00    	jne    ffffffffc00089e0 <cpu_info_init+0x770>
ffffffffc0008439:	a9 00 00 00 40       	test   $0x40000000,%eax
ffffffffc000843e:	0f 85 7c 05 00 00    	jne    ffffffffc00089c0 <cpu_info_init+0x750>
ffffffffc0008444:	a9 00 00 00 80       	test   $0x80000000,%eax
ffffffffc0008449:	0f 85 51 05 00 00    	jne    ffffffffc00089a0 <cpu_info_init+0x730>
ffffffffc000844f:	48 0f ba e0 20       	bt     $0x20,%rax
ffffffffc0008454:	0f 82 f6 04 00 00    	jb     ffffffffc0008950 <cpu_info_init+0x6e0>
ffffffffc000845a:	48 0f ba e0 22       	bt     $0x22,%rax
ffffffffc000845f:	0f 82 cb 04 00 00    	jb     ffffffffc0008930 <cpu_info_init+0x6c0>
ffffffffc0008465:	48 0f ba e0 23       	bt     $0x23,%rax
ffffffffc000846a:	0f 82 a0 04 00 00    	jb     ffffffffc0008910 <cpu_info_init+0x6a0>
ffffffffc0008470:	48 0f ba e0 24       	bt     $0x24,%rax
ffffffffc0008475:	0f 82 75 04 00 00    	jb     ffffffffc00088f0 <cpu_info_init+0x680>
ffffffffc000847b:	48 0f ba e0 25       	bt     $0x25,%rax
ffffffffc0008480:	0f 82 4a 04 00 00    	jb     ffffffffc00088d0 <cpu_info_init+0x660>
ffffffffc0008486:	48 0f ba e0 26       	bt     $0x26,%rax
ffffffffc000848b:	0f 82 1f 04 00 00    	jb     ffffffffc00088b0 <cpu_info_init+0x640>
ffffffffc0008491:	48 0f ba e0 27       	bt     $0x27,%rax
ffffffffc0008496:	0f 82 f4 03 00 00    	jb     ffffffffc0008890 <cpu_info_init+0x620>
ffffffffc000849c:	48 0f ba e0 28       	bt     $0x28,%rax
ffffffffc00084a1:	0f 82 c9 03 00 00    	jb     ffffffffc0008870 <cpu_info_init+0x600>
ffffffffc00084a7:	48 0f ba e0 29       	bt     $0x29,%rax
ffffffffc00084ac:	0f 82 9e 03 00 00    	jb     ffffffffc0008850 <cpu_info_init+0x5e0>
ffffffffc00084b2:	48 0f ba e0 2a       	bt     $0x2a,%rax
ffffffffc00084b7:	0f 82 73 03 00 00    	jb     ffffffffc0008830 <cpu_info_init+0x5c0>
ffffffffc00084bd:	48 0f ba e0 2c       	bt     $0x2c,%rax
ffffffffc00084c2:	0f 82 48 03 00 00    	jb     ffffffffc0008810 <cpu_info_init+0x5a0>
ffffffffc00084c8:	48 0f ba e0 2d       	bt     $0x2d,%rax
ffffffffc00084cd:	0f 82 1d 03 00 00    	jb     ffffffffc00087f0 <cpu_info_init+0x580>
ffffffffc00084d3:	48 0f ba e0 2e       	bt     $0x2e,%rax
ffffffffc00084d8:	0f 82 f2 02 00 00    	jb     ffffffffc00087d0 <cpu_info_init+0x560>
ffffffffc00084de:	48 0f ba e0 2f       	bt     $0x2f,%rax
ffffffffc00084e3:	0f 82 c7 02 00 00    	jb     ffffffffc00087b0 <cpu_info_init+0x540>
ffffffffc00084e9:	48 0f ba e0 31       	bt     $0x31,%rax
ffffffffc00084ee:	0f 82 9c 02 00 00    	jb     ffffffffc0008790 <cpu_info_init+0x520>
ffffffffc00084f4:	48 0f ba e0 32       	bt     $0x32,%rax
ffffffffc00084f9:	0f 82 71 02 00 00    	jb     ffffffffc0008770 <cpu_info_init+0x500>
ffffffffc00084ff:	48 0f ba e0 33       	bt     $0x33,%rax
ffffffffc0008504:	0f 82 46 02 00 00    	jb     ffffffffc0008750 <cpu_info_init+0x4e0>
ffffffffc000850a:	48 0f ba e0 34       	bt     $0x34,%rax
ffffffffc000850f:	0f 82 1b 02 00 00    	jb     ffffffffc0008730 <cpu_info_init+0x4c0>
ffffffffc0008515:	48 0f ba e0 35       	bt     $0x35,%rax
ffffffffc000851a:	0f 82 f0 01 00 00    	jb     ffffffffc0008710 <cpu_info_init+0x4a0>
ffffffffc0008520:	48 0f ba e0 36       	bt     $0x36,%rax
ffffffffc0008525:	0f 82 c5 01 00 00    	jb     ffffffffc00086f0 <cpu_info_init+0x480>
ffffffffc000852b:	48 0f ba e0 37       	bt     $0x37,%rax
ffffffffc0008530:	0f 82 9a 01 00 00    	jb     ffffffffc00086d0 <cpu_info_init+0x460>
ffffffffc0008536:	48 0f ba e0 39       	bt     $0x39,%rax
ffffffffc000853b:	0f 82 6f 01 00 00    	jb     ffffffffc00086b0 <cpu_info_init+0x440>
ffffffffc0008541:	48 0f ba e0 3a       	bt     $0x3a,%rax
ffffffffc0008546:	0f 82 44 01 00 00    	jb     ffffffffc0008690 <cpu_info_init+0x420>
ffffffffc000854c:	48 0f ba e0 3b       	bt     $0x3b,%rax
ffffffffc0008551:	0f 82 19 01 00 00    	jb     ffffffffc0008670 <cpu_info_init+0x400>
ffffffffc0008557:	48 0f ba e0 3c       	bt     $0x3c,%rax
ffffffffc000855c:	0f 82 ee 00 00 00    	jb     ffffffffc0008650 <cpu_info_init+0x3e0>
ffffffffc0008562:	4c 8d 05 d7 ed ff ff 	lea    -0x1229(%rip),%r8        # ffffffffc0007340 <cpu_info_data+0x20>
ffffffffc0008569:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc000856e:	48 8d 0d a4 c8 ff ff 	lea    -0x375c(%rip),%rcx        # ffffffffc0004e19 <.refptr.acpi_get_data+0x189>
ffffffffc0008575:	ff d3                	callq  *%rbx
ffffffffc0008577:	90                   	nop
ffffffffc0008578:	48 83 c4 38          	add    $0x38,%rsp
ffffffffc000857c:	5b                   	pop    %rbx
ffffffffc000857d:	41 5c                	pop    %r12
ffffffffc000857f:	c3                   	retq   
ffffffffc0008580:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0008583:	b9 02 00 00 80       	mov    $0x80000002,%ecx
ffffffffc0008588:	ff d3                	callq  *%rbx
ffffffffc000858a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
ffffffffc000858f:	b9 03 00 00 80       	mov    $0x80000003,%ecx
ffffffffc0008594:	48 89 05 a5 ed ff ff 	mov    %rax,-0x125b(%rip)        # ffffffffc0007340 <cpu_info_data+0x20>
ffffffffc000859b:	0f b7 44 24 28       	movzwl 0x28(%rsp),%eax
ffffffffc00085a0:	66 89 05 a1 ed ff ff 	mov    %ax,-0x125f(%rip)        # ffffffffc0007348 <cpu_info_data+0x28>
ffffffffc00085a7:	0f b7 44 24 2a       	movzwl 0x2a(%rsp),%eax
ffffffffc00085ac:	88 05 98 ed ff ff    	mov    %al,-0x1268(%rip)        # ffffffffc000734a <cpu_info_data+0x2a>
ffffffffc00085b2:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
ffffffffc00085b6:	89 c2                	mov    %eax,%edx
ffffffffc00085b8:	89 05 8e ed ff ff    	mov    %eax,-0x1272(%rip)        # ffffffffc000734c <cpu_info_data+0x2c>
ffffffffc00085be:	c1 ea 18             	shr    $0x18,%edx
ffffffffc00085c1:	88 15 84 ed ff ff    	mov    %dl,-0x127c(%rip)        # ffffffffc000734b <cpu_info_data+0x2b>
ffffffffc00085c7:	4c 89 e2             	mov    %r12,%rdx
ffffffffc00085ca:	ff d3                	callq  *%rbx
ffffffffc00085cc:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
ffffffffc00085d1:	b9 04 00 00 80       	mov    $0x80000004,%ecx
ffffffffc00085d6:	48 89 05 73 ed ff ff 	mov    %rax,-0x128d(%rip)        # ffffffffc0007350 <cpu_info_data+0x30>
ffffffffc00085dd:	0f b7 44 24 28       	movzwl 0x28(%rsp),%eax
ffffffffc00085e2:	66 89 05 6f ed ff ff 	mov    %ax,-0x1291(%rip)        # ffffffffc0007358 <cpu_info_data+0x38>
ffffffffc00085e9:	0f b7 44 24 2a       	movzwl 0x2a(%rsp),%eax
ffffffffc00085ee:	88 05 66 ed ff ff    	mov    %al,-0x129a(%rip)        # ffffffffc000735a <cpu_info_data+0x3a>
ffffffffc00085f4:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
ffffffffc00085f8:	89 c2                	mov    %eax,%edx
ffffffffc00085fa:	89 05 5c ed ff ff    	mov    %eax,-0x12a4(%rip)        # ffffffffc000735c <cpu_info_data+0x3c>
ffffffffc0008600:	c1 ea 18             	shr    $0x18,%edx
ffffffffc0008603:	88 15 52 ed ff ff    	mov    %dl,-0x12ae(%rip)        # ffffffffc000735b <cpu_info_data+0x3b>
ffffffffc0008609:	4c 89 e2             	mov    %r12,%rdx
ffffffffc000860c:	ff d3                	callq  *%rbx
ffffffffc000860e:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
ffffffffc0008613:	48 89 05 46 ed ff ff 	mov    %rax,-0x12ba(%rip)        # ffffffffc0007360 <cpu_info_data+0x40>
ffffffffc000861a:	0f b7 44 24 28       	movzwl 0x28(%rsp),%eax
ffffffffc000861f:	66 89 05 42 ed ff ff 	mov    %ax,-0x12be(%rip)        # ffffffffc0007368 <cpu_info_data+0x48>
ffffffffc0008626:	0f b7 44 24 2a       	movzwl 0x2a(%rsp),%eax
ffffffffc000862b:	88 05 39 ed ff ff    	mov    %al,-0x12c7(%rip)        # ffffffffc000736a <cpu_info_data+0x4a>
ffffffffc0008631:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
ffffffffc0008635:	89 c2                	mov    %eax,%edx
ffffffffc0008637:	89 05 2f ed ff ff    	mov    %eax,-0x12d1(%rip)        # ffffffffc000736c <cpu_info_data+0x4c>
ffffffffc000863d:	c1 ea 18             	shr    $0x18,%edx
ffffffffc0008640:	88 15 25 ed ff ff    	mov    %dl,-0x12db(%rip)        # ffffffffc000736b <cpu_info_data+0x4b>
ffffffffc0008646:	e9 b6 fc ff ff       	jmpq   ffffffffc0008301 <cpu_info_init+0x91>
ffffffffc000864b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0008650:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008655:	48 8d 0d b8 c7 ff ff 	lea    -0x3848(%rip),%rcx        # ffffffffc0004e14 <.refptr.acpi_get_data+0x184>
ffffffffc000865c:	ff 15 de c0 ff ff    	callq  *-0x3f22(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008662:	e9 fb fe ff ff       	jmpq   ffffffffc0008562 <cpu_info_init+0x2f2>
ffffffffc0008667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffffc000866e:	00 00 
ffffffffc0008670:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008675:	48 8d 0d 8f c7 ff ff 	lea    -0x3871(%rip),%rcx        # ffffffffc0004e0b <.refptr.acpi_get_data+0x17b>
ffffffffc000867c:	ff 15 be c0 ff ff    	callq  *-0x3f42(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008682:	48 8b 05 af ec ff ff 	mov    -0x1351(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008689:	e9 c9 fe ff ff       	jmpq   ffffffffc0008557 <cpu_info_init+0x2e7>
ffffffffc000868e:	66 90                	xchg   %ax,%ax
ffffffffc0008690:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008695:	48 8d 0d 68 c7 ff ff 	lea    -0x3898(%rip),%rcx        # ffffffffc0004e04 <.refptr.acpi_get_data+0x174>
ffffffffc000869c:	ff 15 9e c0 ff ff    	callq  *-0x3f62(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc00086a2:	48 8b 05 8f ec ff ff 	mov    -0x1371(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc00086a9:	e9 9e fe ff ff       	jmpq   ffffffffc000854c <cpu_info_init+0x2dc>
ffffffffc00086ae:	66 90                	xchg   %ax,%ax
ffffffffc00086b0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00086b5:	48 8d 0d 43 c7 ff ff 	lea    -0x38bd(%rip),%rcx        # ffffffffc0004dff <.refptr.acpi_get_data+0x16f>
ffffffffc00086bc:	ff 15 7e c0 ff ff    	callq  *-0x3f82(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc00086c2:	48 8b 05 6f ec ff ff 	mov    -0x1391(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc00086c9:	e9 73 fe ff ff       	jmpq   ffffffffc0008541 <cpu_info_init+0x2d1>
ffffffffc00086ce:	66 90                	xchg   %ax,%ax
ffffffffc00086d0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00086d5:	48 8d 0d 1b c7 ff ff 	lea    -0x38e5(%rip),%rcx        # ffffffffc0004df7 <.refptr.acpi_get_data+0x167>
ffffffffc00086dc:	ff 15 5e c0 ff ff    	callq  *-0x3fa2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc00086e2:	48 8b 05 4f ec ff ff 	mov    -0x13b1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc00086e9:	e9 48 fe ff ff       	jmpq   ffffffffc0008536 <cpu_info_init+0x2c6>
ffffffffc00086ee:	66 90                	xchg   %ax,%ax
ffffffffc00086f0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00086f5:	48 8d 0d f4 c6 ff ff 	lea    -0x390c(%rip),%rcx        # ffffffffc0004df0 <.refptr.acpi_get_data+0x160>
ffffffffc00086fc:	ff 15 3e c0 ff ff    	callq  *-0x3fc2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008702:	48 8b 05 2f ec ff ff 	mov    -0x13d1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008709:	e9 1d fe ff ff       	jmpq   ffffffffc000852b <cpu_info_init+0x2bb>
ffffffffc000870e:	66 90                	xchg   %ax,%ax
ffffffffc0008710:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008715:	48 8d 0d cc c6 ff ff 	lea    -0x3934(%rip),%rcx        # ffffffffc0004de8 <.refptr.acpi_get_data+0x158>
ffffffffc000871c:	ff 15 1e c0 ff ff    	callq  *-0x3fe2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008722:	48 8b 05 0f ec ff ff 	mov    -0x13f1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008729:	e9 f2 fd ff ff       	jmpq   ffffffffc0008520 <cpu_info_init+0x2b0>
ffffffffc000872e:	66 90                	xchg   %ax,%ax
ffffffffc0008730:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008735:	48 8d 0d a4 c6 ff ff 	lea    -0x395c(%rip),%rcx        # ffffffffc0004de0 <.refptr.acpi_get_data+0x150>
ffffffffc000873c:	ff 15 fe bf ff ff    	callq  *-0x4002(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008742:	48 8b 05 ef eb ff ff 	mov    -0x1411(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008749:	e9 c7 fd ff ff       	jmpq   ffffffffc0008515 <cpu_info_init+0x2a5>
ffffffffc000874e:	66 90                	xchg   %ax,%ax
ffffffffc0008750:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008755:	48 8d 0d 7c c6 ff ff 	lea    -0x3984(%rip),%rcx        # ffffffffc0004dd8 <.refptr.acpi_get_data+0x148>
ffffffffc000875c:	ff 15 de bf ff ff    	callq  *-0x4022(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008762:	48 8b 05 cf eb ff ff 	mov    -0x1431(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008769:	e9 9c fd ff ff       	jmpq   ffffffffc000850a <cpu_info_init+0x29a>
ffffffffc000876e:	66 90                	xchg   %ax,%ax
ffffffffc0008770:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008775:	48 8d 0d 57 c6 ff ff 	lea    -0x39a9(%rip),%rcx        # ffffffffc0004dd3 <.refptr.acpi_get_data+0x143>
ffffffffc000877c:	ff 15 be bf ff ff    	callq  *-0x4042(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008782:	48 8b 05 af eb ff ff 	mov    -0x1451(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008789:	e9 71 fd ff ff       	jmpq   ffffffffc00084ff <cpu_info_init+0x28f>
ffffffffc000878e:	66 90                	xchg   %ax,%ax
ffffffffc0008790:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008795:	48 8d 0d 30 c6 ff ff 	lea    -0x39d0(%rip),%rcx        # ffffffffc0004dcc <.refptr.acpi_get_data+0x13c>
ffffffffc000879c:	ff 15 9e bf ff ff    	callq  *-0x4062(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc00087a2:	48 8b 05 8f eb ff ff 	mov    -0x1471(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc00087a9:	e9 46 fd ff ff       	jmpq   ffffffffc00084f4 <cpu_info_init+0x284>
ffffffffc00087ae:	66 90                	xchg   %ax,%ax
ffffffffc00087b0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00087b5:	48 8d 0d 0a c6 ff ff 	lea    -0x39f6(%rip),%rcx        # ffffffffc0004dc6 <.refptr.acpi_get_data+0x136>
ffffffffc00087bc:	ff 15 7e bf ff ff    	callq  *-0x4082(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc00087c2:	48 8b 05 6f eb ff ff 	mov    -0x1491(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc00087c9:	e9 1b fd ff ff       	jmpq   ffffffffc00084e9 <cpu_info_init+0x279>
ffffffffc00087ce:	66 90                	xchg   %ax,%ax
ffffffffc00087d0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00087d5:	48 8d 0d e3 c5 ff ff 	lea    -0x3a1d(%rip),%rcx        # ffffffffc0004dbf <.refptr.acpi_get_data+0x12f>
ffffffffc00087dc:	ff 15 5e bf ff ff    	callq  *-0x40a2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc00087e2:	48 8b 05 4f eb ff ff 	mov    -0x14b1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc00087e9:	e9 f0 fc ff ff       	jmpq   ffffffffc00084de <cpu_info_init+0x26e>
ffffffffc00087ee:	66 90                	xchg   %ax,%ax
ffffffffc00087f0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00087f5:	48 8d 0d bd c5 ff ff 	lea    -0x3a43(%rip),%rcx        # ffffffffc0004db9 <.refptr.acpi_get_data+0x129>
ffffffffc00087fc:	ff 15 3e bf ff ff    	callq  *-0x40c2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008802:	48 8b 05 2f eb ff ff 	mov    -0x14d1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008809:	e9 c5 fc ff ff       	jmpq   ffffffffc00084d3 <cpu_info_init+0x263>
ffffffffc000880e:	66 90                	xchg   %ax,%ax
ffffffffc0008810:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008815:	48 8d 0d 98 c5 ff ff 	lea    -0x3a68(%rip),%rcx        # ffffffffc0004db4 <.refptr.acpi_get_data+0x124>
ffffffffc000881c:	ff 15 1e bf ff ff    	callq  *-0x40e2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008822:	48 8b 05 0f eb ff ff 	mov    -0x14f1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008829:	e9 9a fc ff ff       	jmpq   ffffffffc00084c8 <cpu_info_init+0x258>
ffffffffc000882e:	66 90                	xchg   %ax,%ax
ffffffffc0008830:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008835:	48 8d 0d 73 c5 ff ff 	lea    -0x3a8d(%rip),%rcx        # ffffffffc0004daf <.refptr.acpi_get_data+0x11f>
ffffffffc000883c:	ff 15 fe be ff ff    	callq  *-0x4102(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008842:	48 8b 05 ef ea ff ff 	mov    -0x1511(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008849:	e9 6f fc ff ff       	jmpq   ffffffffc00084bd <cpu_info_init+0x24d>
ffffffffc000884e:	66 90                	xchg   %ax,%ax
ffffffffc0008850:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008855:	48 8d 0d 4c c5 ff ff 	lea    -0x3ab4(%rip),%rcx        # ffffffffc0004da8 <.refptr.acpi_get_data+0x118>
ffffffffc000885c:	ff 15 de be ff ff    	callq  *-0x4122(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008862:	48 8b 05 cf ea ff ff 	mov    -0x1531(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008869:	e9 44 fc ff ff       	jmpq   ffffffffc00084b2 <cpu_info_init+0x242>
ffffffffc000886e:	66 90                	xchg   %ax,%ax
ffffffffc0008870:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008875:	48 8d 0d 27 c5 ff ff 	lea    -0x3ad9(%rip),%rcx        # ffffffffc0004da3 <.refptr.acpi_get_data+0x113>
ffffffffc000887c:	ff 15 be be ff ff    	callq  *-0x4142(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008882:	48 8b 05 af ea ff ff 	mov    -0x1551(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008889:	e9 19 fc ff ff       	jmpq   ffffffffc00084a7 <cpu_info_init+0x237>
ffffffffc000888e:	66 90                	xchg   %ax,%ax
ffffffffc0008890:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008895:	48 8d 0d 02 c5 ff ff 	lea    -0x3afe(%rip),%rcx        # ffffffffc0004d9e <.refptr.acpi_get_data+0x10e>
ffffffffc000889c:	ff 15 9e be ff ff    	callq  *-0x4162(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc00088a2:	48 8b 05 8f ea ff ff 	mov    -0x1571(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc00088a9:	e9 ee fb ff ff       	jmpq   ffffffffc000849c <cpu_info_init+0x22c>
ffffffffc00088ae:	66 90                	xchg   %ax,%ax
ffffffffc00088b0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00088b5:	48 8d 0d dd c4 ff ff 	lea    -0x3b23(%rip),%rcx        # ffffffffc0004d99 <.refptr.acpi_get_data+0x109>
ffffffffc00088bc:	ff 15 7e be ff ff    	callq  *-0x4182(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc00088c2:	48 8b 05 6f ea ff ff 	mov    -0x1591(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc00088c9:	e9 c3 fb ff ff       	jmpq   ffffffffc0008491 <cpu_info_init+0x221>
ffffffffc00088ce:	66 90                	xchg   %ax,%ax
ffffffffc00088d0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00088d5:	48 8d 0d b8 c4 ff ff 	lea    -0x3b48(%rip),%rcx        # ffffffffc0004d94 <.refptr.acpi_get_data+0x104>
ffffffffc00088dc:	ff 15 5e be ff ff    	callq  *-0x41a2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc00088e2:	48 8b 05 4f ea ff ff 	mov    -0x15b1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc00088e9:	e9 98 fb ff ff       	jmpq   ffffffffc0008486 <cpu_info_init+0x216>
ffffffffc00088ee:	66 90                	xchg   %ax,%ax
ffffffffc00088f0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00088f5:	48 8d 0d 90 c4 ff ff 	lea    -0x3b70(%rip),%rcx        # ffffffffc0004d8c <.refptr.acpi_get_data+0xfc>
ffffffffc00088fc:	ff 15 3e be ff ff    	callq  *-0x41c2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008902:	48 8b 05 2f ea ff ff 	mov    -0x15d1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008909:	e9 6d fb ff ff       	jmpq   ffffffffc000847b <cpu_info_init+0x20b>
ffffffffc000890e:	66 90                	xchg   %ax,%ax
ffffffffc0008910:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008915:	48 8d 0d 67 c4 ff ff 	lea    -0x3b99(%rip),%rcx        # ffffffffc0004d83 <.refptr.acpi_get_data+0xf3>
ffffffffc000891c:	ff 15 1e be ff ff    	callq  *-0x41e2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008922:	48 8b 05 0f ea ff ff 	mov    -0x15f1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008929:	e9 42 fb ff ff       	jmpq   ffffffffc0008470 <cpu_info_init+0x200>
ffffffffc000892e:	66 90                	xchg   %ax,%ax
ffffffffc0008930:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008935:	48 8d 0d 3f c4 ff ff 	lea    -0x3bc1(%rip),%rcx        # ffffffffc0004d7b <.refptr.acpi_get_data+0xeb>
ffffffffc000893c:	ff 15 fe bd ff ff    	callq  *-0x4202(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008942:	48 8b 05 ef e9 ff ff 	mov    -0x1611(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008949:	e9 17 fb ff ff       	jmpq   ffffffffc0008465 <cpu_info_init+0x1f5>
ffffffffc000894e:	66 90                	xchg   %ax,%ax
ffffffffc0008950:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008955:	4c 8b 25 e4 bd ff ff 	mov    -0x421c(%rip),%r12        # ffffffffc0004740 <.refptr._console_print>
ffffffffc000895c:	48 8d 0d 0a c4 ff ff 	lea    -0x3bf6(%rip),%rcx        # ffffffffc0004d6d <.refptr.acpi_get_data+0xdd>
ffffffffc0008963:	41 ff d4             	callq  *%r12
ffffffffc0008966:	48 8b 05 cb e9 ff ff 	mov    -0x1635(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc000896d:	48 ba 00 00 00 00 01 	movabs $0x100000000,%rdx
ffffffffc0008974:	00 00 00 
ffffffffc0008977:	48 85 d0             	test   %rdx,%rax
ffffffffc000897a:	0f 84 da fa ff ff    	je     ffffffffc000845a <cpu_info_init+0x1ea>
ffffffffc0008980:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008985:	48 8d 0d e7 c3 ff ff 	lea    -0x3c19(%rip),%rcx        # ffffffffc0004d73 <.refptr.acpi_get_data+0xe3>
ffffffffc000898c:	41 ff d4             	callq  *%r12
ffffffffc000898f:	48 8b 05 a2 e9 ff ff 	mov    -0x165e(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008996:	e9 bf fa ff ff       	jmpq   ffffffffc000845a <cpu_info_init+0x1ea>
ffffffffc000899b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc00089a0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00089a5:	48 8d 0d bc c3 ff ff 	lea    -0x3c44(%rip),%rcx        # ffffffffc0004d68 <.refptr.acpi_get_data+0xd8>
ffffffffc00089ac:	ff 15 8e bd ff ff    	callq  *-0x4272(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc00089b2:	48 8b 05 7f e9 ff ff 	mov    -0x1681(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc00089b9:	e9 91 fa ff ff       	jmpq   ffffffffc000844f <cpu_info_init+0x1df>
ffffffffc00089be:	66 90                	xchg   %ax,%ax
ffffffffc00089c0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00089c5:	48 8d 0d 96 c3 ff ff 	lea    -0x3c6a(%rip),%rcx        # ffffffffc0004d62 <.refptr.acpi_get_data+0xd2>
ffffffffc00089cc:	ff 15 6e bd ff ff    	callq  *-0x4292(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc00089d2:	48 8b 05 5f e9 ff ff 	mov    -0x16a1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc00089d9:	e9 66 fa ff ff       	jmpq   ffffffffc0008444 <cpu_info_init+0x1d4>
ffffffffc00089de:	66 90                	xchg   %ax,%ax
ffffffffc00089e0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc00089e5:	48 8d 0d 71 c3 ff ff 	lea    -0x3c8f(%rip),%rcx        # ffffffffc0004d5d <.refptr.acpi_get_data+0xcd>
ffffffffc00089ec:	ff 15 4e bd ff ff    	callq  *-0x42b2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc00089f2:	48 8b 05 3f e9 ff ff 	mov    -0x16c1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc00089f9:	e9 3b fa ff ff       	jmpq   ffffffffc0008439 <cpu_info_init+0x1c9>
ffffffffc00089fe:	66 90                	xchg   %ax,%ax
ffffffffc0008a00:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008a05:	48 8d 0d 4c c3 ff ff 	lea    -0x3cb4(%rip),%rcx        # ffffffffc0004d58 <.refptr.acpi_get_data+0xc8>
ffffffffc0008a0c:	ff 15 2e bd ff ff    	callq  *-0x42d2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008a12:	48 8b 05 1f e9 ff ff 	mov    -0x16e1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008a19:	e9 10 fa ff ff       	jmpq   ffffffffc000842e <cpu_info_init+0x1be>
ffffffffc0008a1e:	66 90                	xchg   %ax,%ax
ffffffffc0008a20:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008a25:	48 8d 0d 28 c3 ff ff 	lea    -0x3cd8(%rip),%rcx        # ffffffffc0004d54 <.refptr.acpi_get_data+0xc4>
ffffffffc0008a2c:	ff 15 0e bd ff ff    	callq  *-0x42f2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008a32:	48 8b 05 ff e8 ff ff 	mov    -0x1701(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008a39:	e9 e5 f9 ff ff       	jmpq   ffffffffc0008423 <cpu_info_init+0x1b3>
ffffffffc0008a3e:	66 90                	xchg   %ax,%ax
ffffffffc0008a40:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008a45:	48 8d 0d 02 c3 ff ff 	lea    -0x3cfe(%rip),%rcx        # ffffffffc0004d4e <.refptr.acpi_get_data+0xbe>
ffffffffc0008a4c:	ff 15 ee bc ff ff    	callq  *-0x4312(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008a52:	48 8b 05 df e8 ff ff 	mov    -0x1721(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008a59:	e9 ba f9 ff ff       	jmpq   ffffffffc0008418 <cpu_info_init+0x1a8>
ffffffffc0008a5e:	66 90                	xchg   %ax,%ax
ffffffffc0008a60:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008a65:	48 8d 0d dd c2 ff ff 	lea    -0x3d23(%rip),%rcx        # ffffffffc0004d49 <.refptr.acpi_get_data+0xb9>
ffffffffc0008a6c:	ff 15 ce bc ff ff    	callq  *-0x4332(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008a72:	48 8b 05 bf e8 ff ff 	mov    -0x1741(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008a79:	e9 8f f9 ff ff       	jmpq   ffffffffc000840d <cpu_info_init+0x19d>
ffffffffc0008a7e:	66 90                	xchg   %ax,%ax
ffffffffc0008a80:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008a85:	48 8d 0d b7 c2 ff ff 	lea    -0x3d49(%rip),%rcx        # ffffffffc0004d43 <.refptr.acpi_get_data+0xb3>
ffffffffc0008a8c:	ff 15 ae bc ff ff    	callq  *-0x4352(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008a92:	48 8b 05 9f e8 ff ff 	mov    -0x1761(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008a99:	e9 64 f9 ff ff       	jmpq   ffffffffc0008402 <cpu_info_init+0x192>
ffffffffc0008a9e:	66 90                	xchg   %ax,%ax
ffffffffc0008aa0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008aa5:	48 8d 0d 92 c2 ff ff 	lea    -0x3d6e(%rip),%rcx        # ffffffffc0004d3e <.refptr.acpi_get_data+0xae>
ffffffffc0008aac:	ff 15 8e bc ff ff    	callq  *-0x4372(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008ab2:	48 8b 05 7f e8 ff ff 	mov    -0x1781(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008ab9:	e9 39 f9 ff ff       	jmpq   ffffffffc00083f7 <cpu_info_init+0x187>
ffffffffc0008abe:	66 90                	xchg   %ax,%ax
ffffffffc0008ac0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008ac5:	48 8d 0d 6c c2 ff ff 	lea    -0x3d94(%rip),%rcx        # ffffffffc0004d38 <.refptr.acpi_get_data+0xa8>
ffffffffc0008acc:	ff 15 6e bc ff ff    	callq  *-0x4392(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008ad2:	48 8b 05 5f e8 ff ff 	mov    -0x17a1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008ad9:	e9 0e f9 ff ff       	jmpq   ffffffffc00083ec <cpu_info_init+0x17c>
ffffffffc0008ade:	66 90                	xchg   %ax,%ax
ffffffffc0008ae0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008ae5:	48 8d 0d 46 c2 ff ff 	lea    -0x3dba(%rip),%rcx        # ffffffffc0004d32 <.refptr.acpi_get_data+0xa2>
ffffffffc0008aec:	ff 15 4e bc ff ff    	callq  *-0x43b2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008af2:	48 8b 05 3f e8 ff ff 	mov    -0x17c1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008af9:	e9 e3 f8 ff ff       	jmpq   ffffffffc00083e1 <cpu_info_init+0x171>
ffffffffc0008afe:	66 90                	xchg   %ax,%ax
ffffffffc0008b00:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008b05:	48 8d 0d 21 c2 ff ff 	lea    -0x3ddf(%rip),%rcx        # ffffffffc0004d2d <.refptr.acpi_get_data+0x9d>
ffffffffc0008b0c:	ff 15 2e bc ff ff    	callq  *-0x43d2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008b12:	48 8b 05 1f e8 ff ff 	mov    -0x17e1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008b19:	e9 b8 f8 ff ff       	jmpq   ffffffffc00083d6 <cpu_info_init+0x166>
ffffffffc0008b1e:	66 90                	xchg   %ax,%ax
ffffffffc0008b20:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008b25:	48 8d 0d fc c1 ff ff 	lea    -0x3e04(%rip),%rcx        # ffffffffc0004d28 <.refptr.acpi_get_data+0x98>
ffffffffc0008b2c:	ff 15 0e bc ff ff    	callq  *-0x43f2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008b32:	48 8b 05 ff e7 ff ff 	mov    -0x1801(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008b39:	e9 8d f8 ff ff       	jmpq   ffffffffc00083cb <cpu_info_init+0x15b>
ffffffffc0008b3e:	66 90                	xchg   %ax,%ax
ffffffffc0008b40:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008b45:	48 8d 0d d5 c1 ff ff 	lea    -0x3e2b(%rip),%rcx        # ffffffffc0004d21 <.refptr.acpi_get_data+0x91>
ffffffffc0008b4c:	ff 15 ee bb ff ff    	callq  *-0x4412(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008b52:	48 8b 05 df e7 ff ff 	mov    -0x1821(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008b59:	e9 62 f8 ff ff       	jmpq   ffffffffc00083c0 <cpu_info_init+0x150>
ffffffffc0008b5e:	66 90                	xchg   %ax,%ax
ffffffffc0008b60:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008b65:	48 8d 0d b0 c1 ff ff 	lea    -0x3e50(%rip),%rcx        # ffffffffc0004d1c <.refptr.acpi_get_data+0x8c>
ffffffffc0008b6c:	ff 15 ce bb ff ff    	callq  *-0x4432(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008b72:	48 8b 05 bf e7 ff ff 	mov    -0x1841(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008b79:	e9 37 f8 ff ff       	jmpq   ffffffffc00083b5 <cpu_info_init+0x145>
ffffffffc0008b7e:	66 90                	xchg   %ax,%ax
ffffffffc0008b80:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008b85:	48 8d 0d 8a c1 ff ff 	lea    -0x3e76(%rip),%rcx        # ffffffffc0004d16 <.refptr.acpi_get_data+0x86>
ffffffffc0008b8c:	ff 15 ae bb ff ff    	callq  *-0x4452(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008b92:	48 8b 05 9f e7 ff ff 	mov    -0x1861(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008b99:	e9 0c f8 ff ff       	jmpq   ffffffffc00083aa <cpu_info_init+0x13a>
ffffffffc0008b9e:	66 90                	xchg   %ax,%ax
ffffffffc0008ba0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008ba5:	48 8d 0d 65 c1 ff ff 	lea    -0x3e9b(%rip),%rcx        # ffffffffc0004d11 <.refptr.acpi_get_data+0x81>
ffffffffc0008bac:	ff 15 8e bb ff ff    	callq  *-0x4472(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008bb2:	48 8b 05 7f e7 ff ff 	mov    -0x1881(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008bb9:	e9 e3 f7 ff ff       	jmpq   ffffffffc00083a1 <cpu_info_init+0x131>
ffffffffc0008bbe:	66 90                	xchg   %ax,%ax
ffffffffc0008bc0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008bc5:	48 8d 0d 40 c1 ff ff 	lea    -0x3ec0(%rip),%rcx        # ffffffffc0004d0c <.refptr.acpi_get_data+0x7c>
ffffffffc0008bcc:	ff 15 6e bb ff ff    	callq  *-0x4492(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008bd2:	48 8b 05 5f e7 ff ff 	mov    -0x18a1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008bd9:	e9 ba f7 ff ff       	jmpq   ffffffffc0008398 <cpu_info_init+0x128>
ffffffffc0008bde:	66 90                	xchg   %ax,%ax
ffffffffc0008be0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008be5:	48 8d 0d 1a c1 ff ff 	lea    -0x3ee6(%rip),%rcx        # ffffffffc0004d06 <.refptr.acpi_get_data+0x76>
ffffffffc0008bec:	ff 15 4e bb ff ff    	callq  *-0x44b2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008bf2:	48 8b 05 3f e7 ff ff 	mov    -0x18c1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008bf9:	e9 91 f7 ff ff       	jmpq   ffffffffc000838f <cpu_info_init+0x11f>
ffffffffc0008bfe:	66 90                	xchg   %ax,%ax
ffffffffc0008c00:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008c05:	48 8d 0d f5 c0 ff ff 	lea    -0x3f0b(%rip),%rcx        # ffffffffc0004d01 <.refptr.acpi_get_data+0x71>
ffffffffc0008c0c:	ff 15 2e bb ff ff    	callq  *-0x44d2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008c12:	48 8b 05 1f e7 ff ff 	mov    -0x18e1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008c19:	e9 68 f7 ff ff       	jmpq   ffffffffc0008386 <cpu_info_init+0x116>
ffffffffc0008c1e:	66 90                	xchg   %ax,%ax
ffffffffc0008c20:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008c25:	48 8d 0d cf c0 ff ff 	lea    -0x3f31(%rip),%rcx        # ffffffffc0004cfb <.refptr.acpi_get_data+0x6b>
ffffffffc0008c2c:	ff 15 0e bb ff ff    	callq  *-0x44f2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008c32:	48 8b 05 ff e6 ff ff 	mov    -0x1901(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008c39:	e9 3f f7 ff ff       	jmpq   ffffffffc000837d <cpu_info_init+0x10d>
ffffffffc0008c3e:	66 90                	xchg   %ax,%ax
ffffffffc0008c40:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008c45:	48 8d 0d aa c0 ff ff 	lea    -0x3f56(%rip),%rcx        # ffffffffc0004cf6 <.refptr.acpi_get_data+0x66>
ffffffffc0008c4c:	ff 15 ee ba ff ff    	callq  *-0x4512(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008c52:	48 8b 05 df e6 ff ff 	mov    -0x1921(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008c59:	e9 16 f7 ff ff       	jmpq   ffffffffc0008374 <cpu_info_init+0x104>
ffffffffc0008c5e:	66 90                	xchg   %ax,%ax
ffffffffc0008c60:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008c65:	48 8d 0d 85 c0 ff ff 	lea    -0x3f7b(%rip),%rcx        # ffffffffc0004cf1 <.refptr.acpi_get_data+0x61>
ffffffffc0008c6c:	ff 15 ce ba ff ff    	callq  *-0x4532(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008c72:	48 8b 05 bf e6 ff ff 	mov    -0x1941(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008c79:	e9 ed f6 ff ff       	jmpq   ffffffffc000836b <cpu_info_init+0xfb>
ffffffffc0008c7e:	66 90                	xchg   %ax,%ax
ffffffffc0008c80:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008c85:	48 8d 0d 60 c0 ff ff 	lea    -0x3fa0(%rip),%rcx        # ffffffffc0004cec <.refptr.acpi_get_data+0x5c>
ffffffffc0008c8c:	ff 15 ae ba ff ff    	callq  *-0x4552(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008c92:	48 8b 05 9f e6 ff ff 	mov    -0x1961(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008c99:	e9 c5 f6 ff ff       	jmpq   ffffffffc0008363 <cpu_info_init+0xf3>
ffffffffc0008c9e:	66 90                	xchg   %ax,%ax
ffffffffc0008ca0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008ca5:	48 8d 0d 3b c0 ff ff 	lea    -0x3fc5(%rip),%rcx        # ffffffffc0004ce7 <.refptr.acpi_get_data+0x57>
ffffffffc0008cac:	ff 15 8e ba ff ff    	callq  *-0x4572(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008cb2:	48 8b 05 7f e6 ff ff 	mov    -0x1981(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008cb9:	e9 9d f6 ff ff       	jmpq   ffffffffc000835b <cpu_info_init+0xeb>
ffffffffc0008cbe:	66 90                	xchg   %ax,%ax
ffffffffc0008cc0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008cc5:	48 8d 0d 16 c0 ff ff 	lea    -0x3fea(%rip),%rcx        # ffffffffc0004ce2 <.refptr.acpi_get_data+0x52>
ffffffffc0008ccc:	ff 15 6e ba ff ff    	callq  *-0x4592(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008cd2:	48 8b 05 5f e6 ff ff 	mov    -0x19a1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008cd9:	e9 75 f6 ff ff       	jmpq   ffffffffc0008353 <cpu_info_init+0xe3>
ffffffffc0008cde:	66 90                	xchg   %ax,%ax
ffffffffc0008ce0:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008ce5:	48 8d 0d f1 bf ff ff 	lea    -0x400f(%rip),%rcx        # ffffffffc0004cdd <.refptr.acpi_get_data+0x4d>
ffffffffc0008cec:	ff 15 4e ba ff ff    	callq  *-0x45b2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008cf2:	48 8b 05 3f e6 ff ff 	mov    -0x19c1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008cf9:	e9 4d f6 ff ff       	jmpq   ffffffffc000834b <cpu_info_init+0xdb>
ffffffffc0008cfe:	66 90                	xchg   %ax,%ax
ffffffffc0008d00:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008d05:	48 8d 0d cd bf ff ff 	lea    -0x4033(%rip),%rcx        # ffffffffc0004cd9 <.refptr.acpi_get_data+0x49>
ffffffffc0008d0c:	ff 15 2e ba ff ff    	callq  *-0x45d2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008d12:	48 8b 05 1f e6 ff ff 	mov    -0x19e1(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008d19:	e9 25 f6 ff ff       	jmpq   ffffffffc0008343 <cpu_info_init+0xd3>
ffffffffc0008d1e:	66 90                	xchg   %ax,%ax
ffffffffc0008d20:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008d25:	48 8d 0d a8 bf ff ff 	lea    -0x4058(%rip),%rcx        # ffffffffc0004cd4 <.refptr.acpi_get_data+0x44>
ffffffffc0008d2c:	ff 15 0e ba ff ff    	callq  *-0x45f2(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008d32:	48 8b 05 ff e5 ff ff 	mov    -0x1a01(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008d39:	e9 fd f5 ff ff       	jmpq   ffffffffc000833b <cpu_info_init+0xcb>
ffffffffc0008d3e:	66 90                	xchg   %ax,%ax
ffffffffc0008d40:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008d45:	48 8d 0d 83 bf ff ff 	lea    -0x407d(%rip),%rcx        # ffffffffc0004ccf <.refptr.acpi_get_data+0x3f>
ffffffffc0008d4c:	ff 15 ee b9 ff ff    	callq  *-0x4612(%rip)        # ffffffffc0004740 <.refptr._console_print>
ffffffffc0008d52:	48 8b 05 df e5 ff ff 	mov    -0x1a21(%rip),%rax        # ffffffffc0007338 <cpu_info_data+0x18>
ffffffffc0008d59:	e9 d5 f5 ff ff       	jmpq   ffffffffc0008333 <cpu_info_init+0xc3>
ffffffffc0008d5e:	90                   	nop
ffffffffc0008d5f:	90                   	nop

ffffffffc0008d60 <hpet_timer_init>:
ffffffffc0008d60:	56                   	push   %rsi
ffffffffc0008d61:	53                   	push   %rbx
ffffffffc0008d62:	48 83 ec 28          	sub    $0x28,%rsp
ffffffffc0008d66:	48 8b 35 63 b9 ff ff 	mov    -0x469d(%rip),%rsi        # ffffffffc00046d0 <.refptr._console_vprint>
ffffffffc0008d6d:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008d72:	48 89 cb             	mov    %rcx,%rbx
ffffffffc0008d75:	49 89 c8             	mov    %rcx,%r8
ffffffffc0008d78:	48 8d 0d f1 c0 ff ff 	lea    -0x3f0f(%rip),%rcx        # ffffffffc0004e70 <.refptr.asm_halt_cpu+0x10>
ffffffffc0008d7f:	ff d6                	callq  *%rsi
ffffffffc0008d81:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffffc0008d85:	31 d2                	xor    %edx,%edx
ffffffffc0008d87:	48 8d 0d f9 c0 ff ff 	lea    -0x3f07(%rip),%rcx        # ffffffffc0004e87 <.refptr.asm_halt_cpu+0x27>
ffffffffc0008d8e:	48 89 1d f3 e5 ff ff 	mov    %rbx,-0x1a0d(%rip)        # ffffffffc0007388 <_tm_ptr>
ffffffffc0008d95:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffffc0008d99:	48 89 43 10          	mov    %rax,0x10(%rbx)
ffffffffc0008d9d:	b8 00 ca 9a 3b       	mov    $0x3b9aca00,%eax
ffffffffc0008da2:	48 c7 83 f0 00 00 00 	movq   $0x0,0xf0(%rbx)
ffffffffc0008da9:	00 00 00 00 
ffffffffc0008dad:	4c 8b 03             	mov    (%rbx),%r8
ffffffffc0008db0:	49 c1 e8 20          	shr    $0x20,%r8
ffffffffc0008db4:	49 f7 f0             	div    %r8
ffffffffc0008db7:	4c 89 05 c2 e5 ff ff 	mov    %r8,-0x1a3e(%rip)        # ffffffffc0007380 <_tm_p>
ffffffffc0008dbe:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0008dc3:	48 89 05 26 de ff ff 	mov    %rax,-0x21da(%rip)        # ffffffffc0006bf0 <_tm_us_r>
ffffffffc0008dca:	ff d6                	callq  *%rsi
ffffffffc0008dcc:	31 c9                	xor    %ecx,%ecx
ffffffffc0008dce:	48 8d 15 ab 77 ff ff 	lea    -0x8855(%rip),%rdx        # ffffffffc0000580 <_hpet_timer_irq_cb>
ffffffffc0008dd5:	ff 15 c5 c0 ff ff    	callq  *-0x3f3b(%rip)        # ffffffffc0004ea0 <.refptr.regiser_irq_handler>
ffffffffc0008ddb:	48 8b 0d a6 e5 ff ff 	mov    -0x1a5a(%rip),%rcx        # ffffffffc0007388 <_tm_ptr>
ffffffffc0008de2:	48 c7 81 f0 00 00 00 	movq   $0x0,0xf0(%rcx)
ffffffffc0008de9:	00 00 00 00 
ffffffffc0008ded:	48 8b 01             	mov    (%rcx),%rax
ffffffffc0008df0:	f6 c4 1f             	test   $0x1f,%ah
ffffffffc0008df3:	74 3b                	je     ffffffffc0008e30 <hpet_timer_init+0xd0>
ffffffffc0008df5:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffffc0008dfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc0008e00:	0f b7 c2             	movzwl %dx,%eax
ffffffffc0008e03:	83 c2 01             	add    $0x1,%edx
ffffffffc0008e06:	48 8d 04 85 20 00 00 	lea    0x20(,%rax,4),%rax
ffffffffc0008e0d:	00 
ffffffffc0008e0e:	44 0f b7 c2          	movzwl %dx,%r8d
ffffffffc0008e12:	48 8d 04 c1          	lea    (%rcx,%rax,8),%rax
ffffffffc0008e16:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffffc0008e1d:	48 8b 01             	mov    (%rcx),%rax
ffffffffc0008e20:	48 c1 e8 08          	shr    $0x8,%rax
ffffffffc0008e24:	83 e0 1f             	and    $0x1f,%eax
ffffffffc0008e27:	48 83 c0 01          	add    $0x1,%rax
ffffffffc0008e2b:	49 39 c0             	cmp    %rax,%r8
ffffffffc0008e2e:	72 d0                	jb     ffffffffc0008e00 <hpet_timer_init+0xa0>
ffffffffc0008e30:	48 b8 00 10 a5 d4 e8 	movabs $0xe8d4a51000,%rax
ffffffffc0008e37:	00 00 00 
ffffffffc0008e3a:	31 d2                	xor    %edx,%edx
ffffffffc0008e3c:	48 f7 35 3d e5 ff ff 	divq   -0x1ac3(%rip)        # ffffffffc0007380 <_tm_p>
ffffffffc0008e43:	48 89 81 08 01 00 00 	mov    %rax,0x108(%rcx)
ffffffffc0008e4a:	48 c7 81 00 01 00 00 	movq   $0xc,0x100(%rcx)
ffffffffc0008e51:	0c 00 00 00 
ffffffffc0008e55:	48 8b 41 10          	mov    0x10(%rcx),%rax
ffffffffc0008e59:	48 83 c8 01          	or     $0x1,%rax
ffffffffc0008e5d:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffffc0008e61:	48 83 c4 28          	add    $0x28,%rsp
ffffffffc0008e65:	5b                   	pop    %rbx
ffffffffc0008e66:	5e                   	pop    %rsi
ffffffffc0008e67:	c3                   	retq   
ffffffffc0008e68:	90                   	nop
ffffffffc0008e69:	90                   	nop
ffffffffc0008e6a:	90                   	nop
ffffffffc0008e6b:	90                   	nop
ffffffffc0008e6c:	90                   	nop
ffffffffc0008e6d:	90                   	nop
ffffffffc0008e6e:	90                   	nop
ffffffffc0008e6f:	90                   	nop

ffffffffc0008e70 <setup_idt>:
ffffffffc0008e70:	48 8b 41 38          	mov    0x38(%rcx),%rax
ffffffffc0008e74:	48 89 05 15 e5 ff ff 	mov    %rax,-0x1aeb(%rip)        # ffffffffc0007390 <idt_l>
ffffffffc0008e7b:	48 89 05 d0 dd ff ff 	mov    %rax,-0x2230(%rip)        # ffffffffc0006c52 <idt+0x2>
ffffffffc0008e82:	48 ff 25 27 c0 ff ff 	rex.W jmpq *-0x3fd9(%rip)        # ffffffffc0004eb0 <.refptr.asm_setup_idt>
ffffffffc0008e89:	90                   	nop
ffffffffc0008e8a:	90                   	nop
ffffffffc0008e8b:	90                   	nop
ffffffffc0008e8c:	90                   	nop
ffffffffc0008e8d:	90                   	nop
ffffffffc0008e8e:	90                   	nop
ffffffffc0008e8f:	90                   	nop

ffffffffc0008e90 <setup_irq>:
ffffffffc0008e90:	53                   	push   %rbx
ffffffffc0008e91:	48 83 ec 20          	sub    $0x20,%rsp
ffffffffc0008e95:	48 8b 1d e4 c2 ff ff 	mov    -0x3d1c(%rip),%rbx        # ffffffffc0005180 <.refptr.asm_port_out>
ffffffffc0008e9c:	ba 11 00 00 00       	mov    $0x11,%edx
ffffffffc0008ea1:	b9 20 00 00 00       	mov    $0x20,%ecx
ffffffffc0008ea6:	ff d3                	callq  *%rbx
ffffffffc0008ea8:	ba 11 00 00 00       	mov    $0x11,%edx
ffffffffc0008ead:	b9 a0 00 00 00       	mov    $0xa0,%ecx
ffffffffc0008eb2:	ff d3                	callq  *%rbx
ffffffffc0008eb4:	ba 20 00 00 00       	mov    $0x20,%edx
ffffffffc0008eb9:	b9 21 00 00 00       	mov    $0x21,%ecx
ffffffffc0008ebe:	ff d3                	callq  *%rbx
ffffffffc0008ec0:	ba 28 00 00 00       	mov    $0x28,%edx
ffffffffc0008ec5:	b9 a1 00 00 00       	mov    $0xa1,%ecx
ffffffffc0008eca:	ff d3                	callq  *%rbx
ffffffffc0008ecc:	ba 04 00 00 00       	mov    $0x4,%edx
ffffffffc0008ed1:	b9 21 00 00 00       	mov    $0x21,%ecx
ffffffffc0008ed6:	ff d3                	callq  *%rbx
ffffffffc0008ed8:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffffc0008edd:	b9 a1 00 00 00       	mov    $0xa1,%ecx
ffffffffc0008ee2:	ff d3                	callq  *%rbx
ffffffffc0008ee4:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffffc0008ee9:	b9 21 00 00 00       	mov    $0x21,%ecx
ffffffffc0008eee:	ff d3                	callq  *%rbx
ffffffffc0008ef0:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffffc0008ef5:	b9 a1 00 00 00       	mov    $0xa1,%ecx
ffffffffc0008efa:	ff d3                	callq  *%rbx
ffffffffc0008efc:	31 d2                	xor    %edx,%edx
ffffffffc0008efe:	b9 21 00 00 00       	mov    $0x21,%ecx
ffffffffc0008f03:	ff d3                	callq  *%rbx
ffffffffc0008f05:	31 d2                	xor    %edx,%edx
ffffffffc0008f07:	b9 a1 00 00 00       	mov    $0xa1,%ecx
ffffffffc0008f0c:	ff d3                	callq  *%rbx
ffffffffc0008f0e:	48 8b 1d 6b bb ff ff 	mov    -0x4495(%rip),%rbx        # ffffffffc0004a80 <.refptr.set_idt_entry>
ffffffffc0008f15:	48 8b 15 54 c2 ff ff 	mov    -0x3dac(%rip),%rdx        # ffffffffc0005170 <.refptr.asm_irq0>
ffffffffc0008f1c:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0008f22:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0008f28:	b9 20 00 00 00       	mov    $0x20,%ecx
ffffffffc0008f2d:	ff d3                	callq  *%rbx
ffffffffc0008f2f:	48 8b 15 2a c2 ff ff 	mov    -0x3dd6(%rip),%rdx        # ffffffffc0005160 <.refptr.asm_irq1>
ffffffffc0008f36:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0008f3c:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0008f42:	b9 21 00 00 00       	mov    $0x21,%ecx
ffffffffc0008f47:	ff d3                	callq  *%rbx
ffffffffc0008f49:	48 8b 15 00 c2 ff ff 	mov    -0x3e00(%rip),%rdx        # ffffffffc0005150 <.refptr.asm_irq2>
ffffffffc0008f50:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0008f56:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0008f5c:	b9 22 00 00 00       	mov    $0x22,%ecx
ffffffffc0008f61:	ff d3                	callq  *%rbx
ffffffffc0008f63:	48 8b 15 d6 c1 ff ff 	mov    -0x3e2a(%rip),%rdx        # ffffffffc0005140 <.refptr.asm_irq3>
ffffffffc0008f6a:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0008f70:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0008f76:	b9 23 00 00 00       	mov    $0x23,%ecx
ffffffffc0008f7b:	ff d3                	callq  *%rbx
ffffffffc0008f7d:	48 8b 15 ac c1 ff ff 	mov    -0x3e54(%rip),%rdx        # ffffffffc0005130 <.refptr.asm_irq4>
ffffffffc0008f84:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0008f8a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0008f90:	b9 24 00 00 00       	mov    $0x24,%ecx
ffffffffc0008f95:	ff d3                	callq  *%rbx
ffffffffc0008f97:	48 8b 15 82 c1 ff ff 	mov    -0x3e7e(%rip),%rdx        # ffffffffc0005120 <.refptr.asm_irq5>
ffffffffc0008f9e:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0008fa4:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0008faa:	b9 25 00 00 00       	mov    $0x25,%ecx
ffffffffc0008faf:	ff d3                	callq  *%rbx
ffffffffc0008fb1:	48 8b 15 58 c1 ff ff 	mov    -0x3ea8(%rip),%rdx        # ffffffffc0005110 <.refptr.asm_irq6>
ffffffffc0008fb8:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0008fbe:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0008fc4:	b9 26 00 00 00       	mov    $0x26,%ecx
ffffffffc0008fc9:	ff d3                	callq  *%rbx
ffffffffc0008fcb:	48 8b 15 2e c1 ff ff 	mov    -0x3ed2(%rip),%rdx        # ffffffffc0005100 <.refptr.asm_irq7>
ffffffffc0008fd2:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0008fd8:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0008fde:	b9 27 00 00 00       	mov    $0x27,%ecx
ffffffffc0008fe3:	ff d3                	callq  *%rbx
ffffffffc0008fe5:	48 8b 15 04 c1 ff ff 	mov    -0x3efc(%rip),%rdx        # ffffffffc00050f0 <.refptr.asm_irq8>
ffffffffc0008fec:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0008ff2:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0008ff8:	b9 28 00 00 00       	mov    $0x28,%ecx
ffffffffc0008ffd:	ff d3                	callq  *%rbx
ffffffffc0008fff:	48 8b 15 da c0 ff ff 	mov    -0x3f26(%rip),%rdx        # ffffffffc00050e0 <.refptr.asm_irq9>
ffffffffc0009006:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc000900c:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009012:	b9 29 00 00 00       	mov    $0x29,%ecx
ffffffffc0009017:	ff d3                	callq  *%rbx
ffffffffc0009019:	48 8b 15 b0 c0 ff ff 	mov    -0x3f50(%rip),%rdx        # ffffffffc00050d0 <.refptr.asm_irq10>
ffffffffc0009020:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0009026:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc000902c:	b9 2a 00 00 00       	mov    $0x2a,%ecx
ffffffffc0009031:	ff d3                	callq  *%rbx
ffffffffc0009033:	48 8b 15 86 c0 ff ff 	mov    -0x3f7a(%rip),%rdx        # ffffffffc00050c0 <.refptr.asm_irq11>
ffffffffc000903a:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0009040:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009046:	b9 2b 00 00 00       	mov    $0x2b,%ecx
ffffffffc000904b:	ff d3                	callq  *%rbx
ffffffffc000904d:	48 8b 15 5c c0 ff ff 	mov    -0x3fa4(%rip),%rdx        # ffffffffc00050b0 <.refptr.asm_irq12>
ffffffffc0009054:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc000905a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009060:	b9 2c 00 00 00       	mov    $0x2c,%ecx
ffffffffc0009065:	ff d3                	callq  *%rbx
ffffffffc0009067:	48 8b 15 32 c0 ff ff 	mov    -0x3fce(%rip),%rdx        # ffffffffc00050a0 <.refptr.asm_irq13>
ffffffffc000906e:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0009074:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc000907a:	b9 2d 00 00 00       	mov    $0x2d,%ecx
ffffffffc000907f:	ff d3                	callq  *%rbx
ffffffffc0009081:	48 8b 15 08 c0 ff ff 	mov    -0x3ff8(%rip),%rdx        # ffffffffc0005090 <.refptr.asm_irq14>
ffffffffc0009088:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc000908e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009094:	b9 2e 00 00 00       	mov    $0x2e,%ecx
ffffffffc0009099:	ff d3                	callq  *%rbx
ffffffffc000909b:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc00090a1:	b9 2f 00 00 00       	mov    $0x2f,%ecx
ffffffffc00090a6:	48 89 d8             	mov    %rbx,%rax
ffffffffc00090a9:	48 8b 15 d0 bf ff ff 	mov    -0x4030(%rip),%rdx        # ffffffffc0005080 <.refptr.asm_irq15>
ffffffffc00090b0:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc00090b6:	48 83 c4 20          	add    $0x20,%rsp
ffffffffc00090ba:	5b                   	pop    %rbx
ffffffffc00090bb:	48 ff e0             	rex.W jmpq *%rax
ffffffffc00090be:	90                   	nop
ffffffffc00090bf:	90                   	nop

ffffffffc00090c0 <setup_isr>:
ffffffffc00090c0:	53                   	push   %rbx
ffffffffc00090c1:	48 83 ec 20          	sub    $0x20,%rsp
ffffffffc00090c5:	48 8b 1d b4 b9 ff ff 	mov    -0x464c(%rip),%rbx        # ffffffffc0004a80 <.refptr.set_idt_entry>
ffffffffc00090cc:	31 c9                	xor    %ecx,%ecx
ffffffffc00090ce:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc00090d4:	48 8b 15 65 c6 ff ff 	mov    -0x399b(%rip),%rdx        # ffffffffc0005740 <.refptr.asm_isr0>
ffffffffc00090db:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc00090e1:	ff d3                	callq  *%rbx
ffffffffc00090e3:	48 8b 15 46 c6 ff ff 	mov    -0x39ba(%rip),%rdx        # ffffffffc0005730 <.refptr.asm_isr1>
ffffffffc00090ea:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc00090f0:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc00090f6:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffffc00090fb:	ff d3                	callq  *%rbx
ffffffffc00090fd:	48 8b 15 1c c6 ff ff 	mov    -0x39e4(%rip),%rdx        # ffffffffc0005720 <.refptr.asm_isr2>
ffffffffc0009104:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc000910a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009110:	b9 02 00 00 00       	mov    $0x2,%ecx
ffffffffc0009115:	ff d3                	callq  *%rbx
ffffffffc0009117:	48 8b 15 f2 c5 ff ff 	mov    -0x3a0e(%rip),%rdx        # ffffffffc0005710 <.refptr.asm_isr3>
ffffffffc000911e:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0009124:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc000912a:	b9 03 00 00 00       	mov    $0x3,%ecx
ffffffffc000912f:	ff d3                	callq  *%rbx
ffffffffc0009131:	48 8b 15 c8 c5 ff ff 	mov    -0x3a38(%rip),%rdx        # ffffffffc0005700 <.refptr.asm_isr4>
ffffffffc0009138:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc000913e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009144:	b9 04 00 00 00       	mov    $0x4,%ecx
ffffffffc0009149:	ff d3                	callq  *%rbx
ffffffffc000914b:	48 8b 15 9e c5 ff ff 	mov    -0x3a62(%rip),%rdx        # ffffffffc00056f0 <.refptr.asm_isr5>
ffffffffc0009152:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0009158:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc000915e:	b9 05 00 00 00       	mov    $0x5,%ecx
ffffffffc0009163:	ff d3                	callq  *%rbx
ffffffffc0009165:	48 8b 15 74 c5 ff ff 	mov    -0x3a8c(%rip),%rdx        # ffffffffc00056e0 <.refptr.asm_isr6>
ffffffffc000916c:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0009172:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009178:	b9 06 00 00 00       	mov    $0x6,%ecx
ffffffffc000917d:	ff d3                	callq  *%rbx
ffffffffc000917f:	48 8b 15 4a c5 ff ff 	mov    -0x3ab6(%rip),%rdx        # ffffffffc00056d0 <.refptr.asm_isr7>
ffffffffc0009186:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc000918c:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009192:	b9 07 00 00 00       	mov    $0x7,%ecx
ffffffffc0009197:	ff d3                	callq  *%rbx
ffffffffc0009199:	48 8b 15 20 c5 ff ff 	mov    -0x3ae0(%rip),%rdx        # ffffffffc00056c0 <.refptr.asm_isr8>
ffffffffc00091a0:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc00091a6:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc00091ac:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffffc00091b1:	ff d3                	callq  *%rbx
ffffffffc00091b3:	48 8b 15 f6 c4 ff ff 	mov    -0x3b0a(%rip),%rdx        # ffffffffc00056b0 <.refptr.asm_isr9>
ffffffffc00091ba:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc00091c0:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc00091c6:	b9 09 00 00 00       	mov    $0x9,%ecx
ffffffffc00091cb:	ff d3                	callq  *%rbx
ffffffffc00091cd:	48 8b 15 cc c4 ff ff 	mov    -0x3b34(%rip),%rdx        # ffffffffc00056a0 <.refptr.asm_isr10>
ffffffffc00091d4:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc00091da:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc00091e0:	b9 0a 00 00 00       	mov    $0xa,%ecx
ffffffffc00091e5:	ff d3                	callq  *%rbx
ffffffffc00091e7:	48 8b 15 a2 c4 ff ff 	mov    -0x3b5e(%rip),%rdx        # ffffffffc0005690 <.refptr.asm_isr11>
ffffffffc00091ee:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc00091f4:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc00091fa:	b9 0b 00 00 00       	mov    $0xb,%ecx
ffffffffc00091ff:	ff d3                	callq  *%rbx
ffffffffc0009201:	48 8b 15 78 c4 ff ff 	mov    -0x3b88(%rip),%rdx        # ffffffffc0005680 <.refptr.asm_isr12>
ffffffffc0009208:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc000920e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009214:	b9 0c 00 00 00       	mov    $0xc,%ecx
ffffffffc0009219:	ff d3                	callq  *%rbx
ffffffffc000921b:	48 8b 15 4e c4 ff ff 	mov    -0x3bb2(%rip),%rdx        # ffffffffc0005670 <.refptr.asm_isr13>
ffffffffc0009222:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0009228:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc000922e:	b9 0d 00 00 00       	mov    $0xd,%ecx
ffffffffc0009233:	ff d3                	callq  *%rbx
ffffffffc0009235:	48 8b 15 24 c4 ff ff 	mov    -0x3bdc(%rip),%rdx        # ffffffffc0005660 <.refptr.asm_isr14>
ffffffffc000923c:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0009242:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009248:	b9 0e 00 00 00       	mov    $0xe,%ecx
ffffffffc000924d:	ff d3                	callq  *%rbx
ffffffffc000924f:	48 8b 15 fa c3 ff ff 	mov    -0x3c06(%rip),%rdx        # ffffffffc0005650 <.refptr.asm_isr15>
ffffffffc0009256:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc000925c:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009262:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffffc0009267:	ff d3                	callq  *%rbx
ffffffffc0009269:	48 8b 15 d0 c3 ff ff 	mov    -0x3c30(%rip),%rdx        # ffffffffc0005640 <.refptr.asm_isr16>
ffffffffc0009270:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0009276:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc000927c:	b9 10 00 00 00       	mov    $0x10,%ecx
ffffffffc0009281:	ff d3                	callq  *%rbx
ffffffffc0009283:	48 8b 15 a6 c3 ff ff 	mov    -0x3c5a(%rip),%rdx        # ffffffffc0005630 <.refptr.asm_isr17>
ffffffffc000928a:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0009290:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009296:	b9 11 00 00 00       	mov    $0x11,%ecx
ffffffffc000929b:	ff d3                	callq  *%rbx
ffffffffc000929d:	48 8b 15 7c c3 ff ff 	mov    -0x3c84(%rip),%rdx        # ffffffffc0005620 <.refptr.asm_isr18>
ffffffffc00092a4:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc00092aa:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc00092b0:	b9 12 00 00 00       	mov    $0x12,%ecx
ffffffffc00092b5:	ff d3                	callq  *%rbx
ffffffffc00092b7:	48 8b 15 52 c3 ff ff 	mov    -0x3cae(%rip),%rdx        # ffffffffc0005610 <.refptr.asm_isr19>
ffffffffc00092be:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc00092c4:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc00092ca:	b9 13 00 00 00       	mov    $0x13,%ecx
ffffffffc00092cf:	ff d3                	callq  *%rbx
ffffffffc00092d1:	48 8b 15 28 c3 ff ff 	mov    -0x3cd8(%rip),%rdx        # ffffffffc0005600 <.refptr.asm_isr20>
ffffffffc00092d8:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc00092de:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc00092e4:	b9 14 00 00 00       	mov    $0x14,%ecx
ffffffffc00092e9:	ff d3                	callq  *%rbx
ffffffffc00092eb:	48 8b 15 fe c2 ff ff 	mov    -0x3d02(%rip),%rdx        # ffffffffc00055f0 <.refptr.asm_isr21>
ffffffffc00092f2:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc00092f8:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc00092fe:	b9 15 00 00 00       	mov    $0x15,%ecx
ffffffffc0009303:	ff d3                	callq  *%rbx
ffffffffc0009305:	48 8b 15 d4 c2 ff ff 	mov    -0x3d2c(%rip),%rdx        # ffffffffc00055e0 <.refptr.asm_isr22>
ffffffffc000930c:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0009312:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009318:	b9 16 00 00 00       	mov    $0x16,%ecx
ffffffffc000931d:	ff d3                	callq  *%rbx
ffffffffc000931f:	48 8b 15 aa c2 ff ff 	mov    -0x3d56(%rip),%rdx        # ffffffffc00055d0 <.refptr.asm_isr23>
ffffffffc0009326:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc000932c:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009332:	b9 17 00 00 00       	mov    $0x17,%ecx
ffffffffc0009337:	ff d3                	callq  *%rbx
ffffffffc0009339:	48 8b 15 80 c2 ff ff 	mov    -0x3d80(%rip),%rdx        # ffffffffc00055c0 <.refptr.asm_isr24>
ffffffffc0009340:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0009346:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc000934c:	b9 18 00 00 00       	mov    $0x18,%ecx
ffffffffc0009351:	ff d3                	callq  *%rbx
ffffffffc0009353:	48 8b 15 56 c2 ff ff 	mov    -0x3daa(%rip),%rdx        # ffffffffc00055b0 <.refptr.asm_isr25>
ffffffffc000935a:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0009360:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009366:	b9 19 00 00 00       	mov    $0x19,%ecx
ffffffffc000936b:	ff d3                	callq  *%rbx
ffffffffc000936d:	48 8b 15 2c c2 ff ff 	mov    -0x3dd4(%rip),%rdx        # ffffffffc00055a0 <.refptr.asm_isr26>
ffffffffc0009374:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc000937a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc0009380:	b9 1a 00 00 00       	mov    $0x1a,%ecx
ffffffffc0009385:	ff d3                	callq  *%rbx
ffffffffc0009387:	48 8b 15 02 c2 ff ff 	mov    -0x3dfe(%rip),%rdx        # ffffffffc0005590 <.refptr.asm_isr27>
ffffffffc000938e:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc0009394:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc000939a:	b9 1b 00 00 00       	mov    $0x1b,%ecx
ffffffffc000939f:	ff d3                	callq  *%rbx
ffffffffc00093a1:	48 8b 15 d8 c1 ff ff 	mov    -0x3e28(%rip),%rdx        # ffffffffc0005580 <.refptr.asm_isr28>
ffffffffc00093a8:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc00093ae:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc00093b4:	b9 1c 00 00 00       	mov    $0x1c,%ecx
ffffffffc00093b9:	ff d3                	callq  *%rbx
ffffffffc00093bb:	48 8b 15 ae c1 ff ff 	mov    -0x3e52(%rip),%rdx        # ffffffffc0005570 <.refptr.asm_isr29>
ffffffffc00093c2:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc00093c8:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc00093ce:	b9 1d 00 00 00       	mov    $0x1d,%ecx
ffffffffc00093d3:	ff d3                	callq  *%rbx
ffffffffc00093d5:	48 8b 15 84 c1 ff ff 	mov    -0x3e7c(%rip),%rdx        # ffffffffc0005560 <.refptr.asm_isr30>
ffffffffc00093dc:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc00093e2:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc00093e8:	b9 1e 00 00 00       	mov    $0x1e,%ecx
ffffffffc00093ed:	ff d3                	callq  *%rbx
ffffffffc00093ef:	41 b9 8e 00 00 00    	mov    $0x8e,%r9d
ffffffffc00093f5:	b9 1f 00 00 00       	mov    $0x1f,%ecx
ffffffffc00093fa:	48 89 d8             	mov    %rbx,%rax
ffffffffc00093fd:	48 8b 15 4c c1 ff ff 	mov    -0x3eb4(%rip),%rdx        # ffffffffc0005550 <.refptr.asm_isr31>
ffffffffc0009404:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffffc000940a:	48 83 c4 20          	add    $0x20,%rsp
ffffffffc000940e:	5b                   	pop    %rbx
ffffffffc000940f:	48 ff e0             	rex.W jmpq *%rax
ffffffffc0009412:	90                   	nop
ffffffffc0009413:	90                   	nop
ffffffffc0009414:	90                   	nop
ffffffffc0009415:	90                   	nop
ffffffffc0009416:	90                   	nop
ffffffffc0009417:	90                   	nop
ffffffffc0009418:	90                   	nop
ffffffffc0009419:	90                   	nop
ffffffffc000941a:	90                   	nop
ffffffffc000941b:	90                   	nop
ffffffffc000941c:	90                   	nop
ffffffffc000941d:	90                   	nop
ffffffffc000941e:	90                   	nop
ffffffffc000941f:	90                   	nop

ffffffffc0009420 <console_init>:
ffffffffc0009420:	48 83 ec 28          	sub    $0x28,%rsp
ffffffffc0009424:	48 8b 41 10          	mov    0x10(%rcx),%rax
ffffffffc0009428:	48 8b 51 18          	mov    0x18(%rcx),%rdx
ffffffffc000942c:	48 c1 e8 03          	shr    $0x3,%rax
ffffffffc0009430:	48 c1 ea 04          	shr    $0x4,%rdx
ffffffffc0009434:	48 89 05 fd e0 ff ff 	mov    %rax,-0x1f03(%rip)        # ffffffffc0007538 <_console_w>
ffffffffc000943b:	48 0f af c2          	imul   %rdx,%rax
ffffffffc000943f:	48 89 15 ea e0 ff ff 	mov    %rdx,-0x1f16(%rip)        # ffffffffc0007530 <_console_h>
ffffffffc0009446:	48 8d 0c 85 ff 0f 00 	lea    0xfff(,%rax,4),%rcx
ffffffffc000944d:	00 
ffffffffc000944e:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffffc0009452:	ff 15 68 b4 ff ff    	callq  *-0x4b98(%rip)        # ffffffffc00048c0 <.refptr.vm_commit>
ffffffffc0009458:	48 89 05 c9 e0 ff ff 	mov    %rax,-0x1f37(%rip)        # ffffffffc0007528 <_console_bf>
ffffffffc000945f:	ff 15 1b ca ff ff    	callq  *-0x35e5(%rip)        # ffffffffc0005e80 <.refptr.lock_create>
ffffffffc0009465:	48 8b 0d cc e0 ff ff 	mov    -0x1f34(%rip),%rcx        # ffffffffc0007538 <_console_w>
ffffffffc000946c:	48 0f af 0d bc e0 ff 	imul   -0x1f44(%rip),%rcx        # ffffffffc0007530 <_console_h>
ffffffffc0009473:	ff 
ffffffffc0009474:	48 89 05 a5 e0 ff ff 	mov    %rax,-0x1f5b(%rip)        # ffffffffc0007520 <_console_l>
ffffffffc000947b:	48 85 c9             	test   %rcx,%rcx
ffffffffc000947e:	74 72                	je     ffffffffc00094f2 <console_init+0xd2>
ffffffffc0009480:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
ffffffffc0009484:	4c 8b 05 9d e0 ff ff 	mov    -0x1f63(%rip),%r8        # ffffffffc0007528 <_console_bf>
ffffffffc000948b:	48 83 f8 02          	cmp    $0x2,%rax
ffffffffc000948f:	76 66                	jbe    ffffffffc00094f7 <console_init+0xd7>
ffffffffc0009491:	48 89 ca             	mov    %rcx,%rdx
ffffffffc0009494:	66 0f 6f 05 74 c9 ff 	movdqa -0x368c(%rip),%xmm0        # ffffffffc0005e10 <.refptr.asm_port_out32+0x10>
ffffffffc000949b:	ff 
ffffffffc000949c:	4c 89 c0             	mov    %r8,%rax
ffffffffc000949f:	48 c1 ea 02          	shr    $0x2,%rdx
ffffffffc00094a3:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffffc00094a7:	4c 01 c2             	add    %r8,%rdx
ffffffffc00094aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc00094b0:	0f 11 00             	movups %xmm0,(%rax)
ffffffffc00094b3:	48 83 c0 10          	add    $0x10,%rax
ffffffffc00094b7:	48 39 d0             	cmp    %rdx,%rax
ffffffffc00094ba:	75 f4                	jne    ffffffffc00094b0 <console_init+0x90>
ffffffffc00094bc:	48 89 c8             	mov    %rcx,%rax
ffffffffc00094bf:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffffc00094c3:	f6 c1 03             	test   $0x3,%cl
ffffffffc00094c6:	74 2a                	je     ffffffffc00094f2 <console_init+0xd2>
ffffffffc00094c8:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffffc00094cc:	41 c7 04 80 00 00 00 	movl   $0x20000000,(%r8,%rax,4)
ffffffffc00094d3:	20 
ffffffffc00094d4:	48 39 ca             	cmp    %rcx,%rdx
ffffffffc00094d7:	73 19                	jae    ffffffffc00094f2 <console_init+0xd2>
ffffffffc00094d9:	48 83 c0 02          	add    $0x2,%rax
ffffffffc00094dd:	41 c7 04 90 00 00 00 	movl   $0x20000000,(%r8,%rdx,4)
ffffffffc00094e4:	20 
ffffffffc00094e5:	48 39 c1             	cmp    %rax,%rcx
ffffffffc00094e8:	76 08                	jbe    ffffffffc00094f2 <console_init+0xd2>
ffffffffc00094ea:	41 c7 04 80 00 00 00 	movl   $0x20000000,(%r8,%rax,4)
ffffffffc00094f1:	20 
ffffffffc00094f2:	48 83 c4 28          	add    $0x28,%rsp
ffffffffc00094f6:	c3                   	retq   
ffffffffc00094f7:	31 c0                	xor    %eax,%eax
ffffffffc00094f9:	eb cd                	jmp    ffffffffc00094c8 <console_init+0xa8>
ffffffffc00094fb:	90                   	nop
ffffffffc00094fc:	90                   	nop
ffffffffc00094fd:	90                   	nop
ffffffffc00094fe:	90                   	nop
ffffffffc00094ff:	90                   	nop

ffffffffc0009500 <gfx_init>:
ffffffffc0009500:	4c 8b 01             	mov    (%rcx),%r8
ffffffffc0009503:	4c 89 05 5e e0 ff ff 	mov    %r8,-0x1fa2(%rip)        # ffffffffc0007568 <_gfx_vmem>
ffffffffc000950a:	48 89 c8             	mov    %rcx,%rax
ffffffffc000950d:	48 8b 49 08          	mov    0x8(%rcx),%rcx
ffffffffc0009511:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffffc0009515:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffffc0009519:	48 89 0d 40 e0 ff ff 	mov    %rcx,-0x1fc0(%rip)        # ffffffffc0007560 <_gfx_vmem_l>
ffffffffc0009520:	48 89 15 31 e0 ff ff 	mov    %rdx,-0x1fcf(%rip)        # ffffffffc0007558 <_gfx_vmem_w>
ffffffffc0009527:	48 89 05 22 e0 ff ff 	mov    %rax,-0x1fde(%rip)        # ffffffffc0007550 <_gfx_vmem_h>
ffffffffc000952e:	48 85 c9             	test   %rcx,%rcx
ffffffffc0009531:	74 67                	je     ffffffffc000959a <gfx_init+0x9a>
ffffffffc0009533:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
ffffffffc0009537:	48 83 f8 02          	cmp    $0x2,%rax
ffffffffc000953b:	76 5e                	jbe    ffffffffc000959b <gfx_init+0x9b>
ffffffffc000953d:	48 89 ca             	mov    %rcx,%rdx
ffffffffc0009540:	4c 89 c0             	mov    %r8,%rax
ffffffffc0009543:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffffc0009547:	48 c1 ea 02          	shr    $0x2,%rdx
ffffffffc000954b:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffffc000954f:	4c 01 c2             	add    %r8,%rdx
ffffffffc0009552:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc0009558:	0f 11 00             	movups %xmm0,(%rax)
ffffffffc000955b:	48 83 c0 10          	add    $0x10,%rax
ffffffffc000955f:	48 39 d0             	cmp    %rdx,%rax
ffffffffc0009562:	75 f4                	jne    ffffffffc0009558 <gfx_init+0x58>
ffffffffc0009564:	48 89 c8             	mov    %rcx,%rax
ffffffffc0009567:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffffc000956b:	f6 c1 03             	test   $0x3,%cl
ffffffffc000956e:	74 2a                	je     ffffffffc000959a <gfx_init+0x9a>
ffffffffc0009570:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffffc0009574:	41 c7 04 80 00 00 00 	movl   $0x0,(%r8,%rax,4)
ffffffffc000957b:	00 
ffffffffc000957c:	48 39 d1             	cmp    %rdx,%rcx
ffffffffc000957f:	76 19                	jbe    ffffffffc000959a <gfx_init+0x9a>
ffffffffc0009581:	48 83 c0 02          	add    $0x2,%rax
ffffffffc0009585:	41 c7 04 90 00 00 00 	movl   $0x0,(%r8,%rdx,4)
ffffffffc000958c:	00 
ffffffffc000958d:	48 39 c1             	cmp    %rax,%rcx
ffffffffc0009590:	76 08                	jbe    ffffffffc000959a <gfx_init+0x9a>
ffffffffc0009592:	41 c7 04 80 00 00 00 	movl   $0x0,(%r8,%rax,4)
ffffffffc0009599:	00 
ffffffffc000959a:	c3                   	retq   
ffffffffc000959b:	31 c0                	xor    %eax,%eax
ffffffffc000959d:	eb d1                	jmp    ffffffffc0009570 <gfx_init+0x70>
ffffffffc000959f:	90                   	nop

ffffffffc00095a0 <paging_init>:
ffffffffc00095a0:	48 8b 41 40          	mov    0x40(%rcx),%rax
ffffffffc00095a4:	48 89 05 dd df ff ff 	mov    %rax,-0x2023(%rip)        # ffffffffc0007588 <_pg_pml4>
ffffffffc00095ab:	48 8b 41 48          	mov    0x48(%rcx),%rax
ffffffffc00095af:	48 89 05 ca df ff ff 	mov    %rax,-0x2036(%rip)        # ffffffffc0007580 <_pg_t_pg>
ffffffffc00095b6:	48 8b 41 50          	mov    0x50(%rcx),%rax
ffffffffc00095ba:	48 89 05 b7 df ff ff 	mov    %rax,-0x2049(%rip)        # ffffffffc0007578 <_pg_u_pg>
ffffffffc00095c1:	48 8b 41 70          	mov    0x70(%rcx),%rax
ffffffffc00095c5:	48 89 05 a4 df ff ff 	mov    %rax,-0x205c(%rip)        # ffffffffc0007570 <_pg_va_to_pa>
ffffffffc00095cc:	c3                   	retq   
ffffffffc00095cd:	90                   	nop
ffffffffc00095ce:	90                   	nop
ffffffffc00095cf:	90                   	nop

ffffffffc00095d0 <pm_init>:
ffffffffc00095d0:	41 57                	push   %r15
ffffffffc00095d2:	41 56                	push   %r14
ffffffffc00095d4:	41 55                	push   %r13
ffffffffc00095d6:	41 54                	push   %r12
ffffffffc00095d8:	55                   	push   %rbp
ffffffffc00095d9:	57                   	push   %rdi
ffffffffc00095da:	56                   	push   %rsi
ffffffffc00095db:	53                   	push   %rbx
ffffffffc00095dc:	48 83 ec 48          	sub    $0x48,%rsp
ffffffffc00095e0:	0f 29 74 24 30       	movaps %xmm6,0x30(%rsp)
ffffffffc00095e5:	48 8b 1d e4 c9 ff ff 	mov    -0x361c(%rip),%rbx        # ffffffffc0005fd0 <.refptr.paging_map_page>
ffffffffc00095ec:	66 0f 6f 35 cc c9 ff 	movdqa -0x3634(%rip),%xmm6        # ffffffffc0005fc0 <.refptr.lock_create+0x140>
ffffffffc00095f3:	ff 
ffffffffc00095f4:	48 8d 35 9d c9 ff ff 	lea    -0x3663(%rip),%rsi        # ffffffffc0005f98 <.refptr.lock_create+0x118>
ffffffffc00095fb:	4c 8b 2d 5e b6 ff ff 	mov    -0x49a2(%rip),%r13        # ffffffffc0004c60 <.refptr.fatal_error_line>
ffffffffc0009602:	48 8b 81 80 00 00 00 	mov    0x80(%rcx),%rax
ffffffffc0009609:	48 c1 e0 04          	shl    $0x4,%rax
ffffffffc000960d:	48 01 c8             	add    %rcx,%rax
ffffffffc0009610:	48 89 cd             	mov    %rcx,%rbp
ffffffffc0009613:	48 8b 49 58          	mov    0x58(%rcx),%rcx
ffffffffc0009617:	48 8b 50 78          	mov    0x78(%rax),%rdx
ffffffffc000961b:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
ffffffffc0009622:	48 89 0d 67 df ff ff 	mov    %rcx,-0x2099(%rip)        # ffffffffc0007590 <_pg_dt>
ffffffffc0009629:	4c 8b 65 60          	mov    0x60(%rbp),%r12
ffffffffc000962d:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
ffffffffc0009631:	48 8d 84 02 fe 0f 00 	lea    0xffe(%rdx,%rax,1),%rax
ffffffffc0009638:	00 
ffffffffc0009639:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffffc000963d:	48 83 c0 3f          	add    $0x3f,%rax
ffffffffc0009641:	48 c1 e8 06          	shr    $0x6,%rax
ffffffffc0009645:	4c 8d 34 c5 1f 10 00 	lea    0x101f(,%rax,8),%r14
ffffffffc000964c:	00 
ffffffffc000964d:	49 c1 ee 0c          	shr    $0xc,%r14
ffffffffc0009651:	eb 12                	jmp    ffffffffc0009665 <pm_init+0x95>
ffffffffc0009653:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0009658:	4d 85 f6             	test   %r14,%r14
ffffffffc000965b:	0f 84 a7 00 00 00    	je     ffffffffc0009708 <pm_init+0x138>
ffffffffc0009661:	48 8b 4d 58          	mov    0x58(%rbp),%rcx
ffffffffc0009665:	4c 89 e2             	mov    %r12,%rdx
ffffffffc0009668:	49 83 ee 01          	sub    $0x1,%r14
ffffffffc000966c:	ff d3                	callq  *%rbx
ffffffffc000966e:	48 8b 7d 68          	mov    0x68(%rbp),%rdi
ffffffffc0009672:	f3 0f 6f 45 58       	movdqu 0x58(%rbp),%xmm0
ffffffffc0009677:	48 8b 45 60          	mov    0x60(%rbp),%rax
ffffffffc000967b:	48 89 fa             	mov    %rdi,%rdx
ffffffffc000967e:	66 0f d4 c6          	paddq  %xmm6,%xmm0
ffffffffc0009682:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffffc0009686:	0f 11 45 58          	movups %xmm0,0x58(%rbp)
ffffffffc000968a:	4c 8d a0 00 10 00 00 	lea    0x1000(%rax),%r12
ffffffffc0009691:	48 01 ea             	add    %rbp,%rdx
ffffffffc0009694:	48 8b 82 88 00 00 00 	mov    0x88(%rdx),%rax
ffffffffc000969b:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffffc000969f:	48 03 82 90 00 00 00 	add    0x90(%rdx),%rax
ffffffffc00096a6:	49 39 c4             	cmp    %rax,%r12
ffffffffc00096a9:	72 ad                	jb     ffffffffc0009658 <pm_init+0x88>
ffffffffc00096ab:	48 83 c7 01          	add    $0x1,%rdi
ffffffffc00096af:	4c 8d 3d 02 c9 ff ff 	lea    -0x36fe(%rip),%r15        # ffffffffc0005fb8 <.refptr.lock_create+0x138>
ffffffffc00096b6:	48 89 7d 68          	mov    %rdi,0x68(%rbp)
ffffffffc00096ba:	48 8b 95 80 00 00 00 	mov    0x80(%rbp),%rdx
ffffffffc00096c1:	eb 16                	jmp    ffffffffc00096d9 <pm_init+0x109>
ffffffffc00096c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc00096c8:	48 83 c7 01          	add    $0x1,%rdi
ffffffffc00096cc:	48 89 7d 68          	mov    %rdi,0x68(%rbp)
ffffffffc00096d0:	48 39 d7             	cmp    %rdx,%rdi
ffffffffc00096d3:	0f 83 9f 01 00 00    	jae    ffffffffc0009878 <pm_init+0x2a8>
ffffffffc00096d9:	48 89 f8             	mov    %rdi,%rax
ffffffffc00096dc:	48 c1 e0 04          	shl    $0x4,%rax
ffffffffc00096e0:	4c 8b a4 05 88 00 00 	mov    0x88(%rbp,%rax,1),%r12
ffffffffc00096e7:	00 
ffffffffc00096e8:	41 f6 c4 01          	test   $0x1,%r12b
ffffffffc00096ec:	75 da                	jne    ffffffffc00096c8 <pm_init+0xf8>
ffffffffc00096ee:	48 39 fa             	cmp    %rdi,%rdx
ffffffffc00096f1:	0f 86 c3 01 00 00    	jbe    ffffffffc00098ba <pm_init+0x2ea>
ffffffffc00096f7:	49 83 e4 fe          	and    $0xfffffffffffffffe,%r12
ffffffffc00096fb:	4c 89 65 60          	mov    %r12,0x60(%rbp)
ffffffffc00096ff:	4d 85 f6             	test   %r14,%r14
ffffffffc0009702:	0f 85 59 ff ff ff    	jne    ffffffffc0009661 <pm_init+0x91>
ffffffffc0009708:	4c 8b 8d 80 00 00 00 	mov    0x80(%rbp),%r9
ffffffffc000970f:	4c 89 c8             	mov    %r9,%rax
ffffffffc0009712:	48 c1 e0 04          	shl    $0x4,%rax
ffffffffc0009716:	48 01 e8             	add    %rbp,%rax
ffffffffc0009719:	48 8b 50 78          	mov    0x78(%rax),%rdx
ffffffffc000971d:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
ffffffffc0009724:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
ffffffffc0009728:	48 8d 84 02 fe 0f 00 	lea    0xffe(%rdx,%rax,1),%rax
ffffffffc000972f:	00 
ffffffffc0009730:	48 8b 15 59 de ff ff 	mov    -0x21a7(%rip),%rdx        # ffffffffc0007590 <_pg_dt>
ffffffffc0009737:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffffc000973b:	48 83 c0 3f          	add    $0x3f,%rax
ffffffffc000973f:	49 89 c2             	mov    %rax,%r10
ffffffffc0009742:	49 c1 ea 06          	shr    $0x6,%r10
ffffffffc0009746:	4c 89 12             	mov    %r10,(%rdx)
ffffffffc0009749:	74 44                	je     ffffffffc000978f <pm_init+0x1bf>
ffffffffc000974b:	49 83 fa 01          	cmp    $0x1,%r10
ffffffffc000974f:	0f 84 e3 01 00 00    	je     ffffffffc0009938 <pm_init+0x368>
ffffffffc0009755:	48 c1 e8 07          	shr    $0x7,%rax
ffffffffc0009759:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffffc000975d:	48 89 c1             	mov    %rax,%rcx
ffffffffc0009760:	48 89 d0             	mov    %rdx,%rax
ffffffffc0009763:	49 89 c8             	mov    %rcx,%r8
ffffffffc0009766:	49 c1 e0 04          	shl    $0x4,%r8
ffffffffc000976a:	49 01 d0             	add    %rdx,%r8
ffffffffc000976d:	0f 1f 00             	nopl   (%rax)
ffffffffc0009770:	0f 11 40 20          	movups %xmm0,0x20(%rax)
ffffffffc0009774:	48 83 c0 10          	add    $0x10,%rax
ffffffffc0009778:	4c 39 c0             	cmp    %r8,%rax
ffffffffc000977b:	75 f3                	jne    ffffffffc0009770 <pm_init+0x1a0>
ffffffffc000977d:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
ffffffffc0009781:	49 39 c2             	cmp    %rax,%r10
ffffffffc0009784:	74 09                	je     ffffffffc000978f <pm_init+0x1bf>
ffffffffc0009786:	48 c7 44 c2 20 00 00 	movq   $0x0,0x20(%rdx,%rax,8)
ffffffffc000978d:	00 00 
ffffffffc000978f:	48 8b 75 48          	mov    0x48(%rbp),%rsi
ffffffffc0009793:	48 8b 5d 40          	mov    0x40(%rbp),%rbx
ffffffffc0009797:	48 2b 5d 70          	sub    0x70(%rbp),%rbx
ffffffffc000979b:	48 c1 e6 0c          	shl    $0xc,%rsi
ffffffffc000979f:	48 01 de             	add    %rbx,%rsi
ffffffffc00097a2:	4c 39 e3             	cmp    %r12,%rbx
ffffffffc00097a5:	0f 86 4d 01 00 00    	jbe    ffffffffc00098f8 <pm_init+0x328>
ffffffffc00097ab:	4c 89 e0             	mov    %r12,%rax
ffffffffc00097ae:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffffc00097b4:	48 c1 e8 12          	shr    $0x12,%rax
ffffffffc00097b8:	48 89 42 10          	mov    %rax,0x10(%rdx)
ffffffffc00097bc:	4c 89 e0             	mov    %r12,%rax
ffffffffc00097bf:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffffc00097c3:	83 e0 3f             	and    $0x3f,%eax
ffffffffc00097c6:	88 42 18             	mov    %al,0x18(%rdx)
ffffffffc00097c9:	48 89 f8             	mov    %rdi,%rax
ffffffffc00097cc:	48 c1 e0 04          	shl    $0x4,%rax
ffffffffc00097d0:	48 01 e8             	add    %rbp,%rax
ffffffffc00097d3:	4c 8b 90 88 00 00 00 	mov    0x88(%rax),%r10
ffffffffc00097da:	4c 8b 98 90 00 00 00 	mov    0x90(%rax),%r11
ffffffffc00097e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc00097e8:	4c 89 e0             	mov    %r12,%rax
ffffffffc00097eb:	4c 89 e1             	mov    %r12,%rcx
ffffffffc00097ee:	4d 89 c7             	mov    %r8,%r15
ffffffffc00097f1:	49 83 c6 01          	add    $0x1,%r14
ffffffffc00097f5:	48 c1 e8 12          	shr    $0x12,%rax
ffffffffc00097f9:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffffc00097fd:	49 d3 e7             	shl    %cl,%r15
ffffffffc0009800:	4c 09 7c c2 20       	or     %r15,0x20(%rdx,%rax,8)
ffffffffc0009805:	0f 1f 00             	nopl   (%rax)
ffffffffc0009808:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
ffffffffc000980f:	4c 39 e3             	cmp    %r12,%rbx
ffffffffc0009812:	77 05                	ja     ffffffffc0009819 <pm_init+0x249>
ffffffffc0009814:	4c 39 e6             	cmp    %r12,%rsi
ffffffffc0009817:	77 ef                	ja     ffffffffc0009808 <pm_init+0x238>
ffffffffc0009819:	4c 89 d0             	mov    %r10,%rax
ffffffffc000981c:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffffc0009820:	4c 01 d8             	add    %r11,%rax
ffffffffc0009823:	4c 39 e0             	cmp    %r12,%rax
ffffffffc0009826:	77 c0                	ja     ffffffffc00097e8 <pm_init+0x218>
ffffffffc0009828:	48 83 c7 01          	add    $0x1,%rdi
ffffffffc000982c:	4d 85 c9             	test   %r9,%r9
ffffffffc000982f:	74 19                	je     ffffffffc000984a <pm_init+0x27a>
ffffffffc0009831:	48 89 f8             	mov    %rdi,%rax
ffffffffc0009834:	48 c1 e0 04          	shl    $0x4,%rax
ffffffffc0009838:	48 83 bc 28 88 00 00 	cmpq   $0x0,0x88(%rax,%rbp,1)
ffffffffc000983f:	00 00 
ffffffffc0009841:	74 07                	je     ffffffffc000984a <pm_init+0x27a>
ffffffffc0009843:	48 85 ff             	test   %rdi,%rdi
ffffffffc0009846:	49 0f 44 f8          	cmove  %r8,%rdi
ffffffffc000984a:	49 39 f9             	cmp    %rdi,%r9
ffffffffc000984d:	74 51                	je     ffffffffc00098a0 <pm_init+0x2d0>
ffffffffc000984f:	48 89 f8             	mov    %rdi,%rax
ffffffffc0009852:	48 c1 e0 04          	shl    $0x4,%rax
ffffffffc0009856:	48 01 e8             	add    %rbp,%rax
ffffffffc0009859:	4c 8b 90 88 00 00 00 	mov    0x88(%rax),%r10
ffffffffc0009860:	4c 8b 98 90 00 00 00 	mov    0x90(%rax),%r11
ffffffffc0009867:	4d 89 d4             	mov    %r10,%r12
ffffffffc000986a:	49 83 e4 fe          	and    $0xfffffffffffffffe,%r12
ffffffffc000986e:	e9 75 ff ff ff       	jmpq   ffffffffc00097e8 <pm_init+0x218>
ffffffffc0009873:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffffc0009878:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
ffffffffc000987d:	4d 89 f9             	mov    %r15,%r9
ffffffffc0009880:	41 b8 21 00 00 00    	mov    $0x21,%r8d
ffffffffc0009886:	48 8d 15 e3 c6 ff ff 	lea    -0x391d(%rip),%rdx        # ffffffffc0005f70 <.refptr.lock_create+0xf0>
ffffffffc000988d:	48 8d 0d f3 c6 ff ff 	lea    -0x390d(%rip),%rcx        # ffffffffc0005f87 <.refptr.lock_create+0x107>
ffffffffc0009894:	41 ff d5             	callq  *%r13
ffffffffc0009897:	48 8b 7d 68          	mov    0x68(%rbp),%rdi
ffffffffc000989b:	e9 1a fe ff ff       	jmpq   ffffffffc00096ba <pm_init+0xea>
ffffffffc00098a0:	4c 89 72 08          	mov    %r14,0x8(%rdx)
ffffffffc00098a4:	0f 28 74 24 30       	movaps 0x30(%rsp),%xmm6
ffffffffc00098a9:	48 83 c4 48          	add    $0x48,%rsp
ffffffffc00098ad:	5b                   	pop    %rbx
ffffffffc00098ae:	5e                   	pop    %rsi
ffffffffc00098af:	5f                   	pop    %rdi
ffffffffc00098b0:	5d                   	pop    %rbp
ffffffffc00098b1:	41 5c                	pop    %r12
ffffffffc00098b3:	41 5d                	pop    %r13
ffffffffc00098b5:	41 5e                	pop    %r14
ffffffffc00098b7:	41 5f                	pop    %r15
ffffffffc00098b9:	c3                   	retq   
ffffffffc00098ba:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
ffffffffc00098bf:	4c 8d 0d f2 c6 ff ff 	lea    -0x390e(%rip),%r9        # ffffffffc0005fb8 <.refptr.lock_create+0x138>
ffffffffc00098c6:	41 b8 23 00 00 00    	mov    $0x23,%r8d
ffffffffc00098cc:	48 8d 15 9d c6 ff ff 	lea    -0x3963(%rip),%rdx        # ffffffffc0005f70 <.refptr.lock_create+0xf0>
ffffffffc00098d3:	48 8d 0d ad c6 ff ff 	lea    -0x3953(%rip),%rcx        # ffffffffc0005f87 <.refptr.lock_create+0x107>
ffffffffc00098da:	ff 15 80 b3 ff ff    	callq  *-0x4c80(%rip)        # ffffffffc0004c60 <.refptr.fatal_error_line>
ffffffffc00098e0:	48 8b 7d 68          	mov    0x68(%rbp),%rdi
ffffffffc00098e4:	48 89 f8             	mov    %rdi,%rax
ffffffffc00098e7:	48 c1 e0 04          	shl    $0x4,%rax
ffffffffc00098eb:	4c 8b a4 28 88 00 00 	mov    0x88(%rax,%rbp,1),%r12
ffffffffc00098f2:	00 
ffffffffc00098f3:	e9 ff fd ff ff       	jmpq   ffffffffc00096f7 <pm_init+0x127>
ffffffffc00098f8:	48 8d 05 b1 c6 ff ff 	lea    -0x394f(%rip),%rax        # ffffffffc0005fb0 <.refptr.lock_create+0x130>
ffffffffc00098ff:	4c 8d 0d b2 c6 ff ff 	lea    -0x394e(%rip),%r9        # ffffffffc0005fb8 <.refptr.lock_create+0x138>
ffffffffc0009906:	41 b8 2f 00 00 00    	mov    $0x2f,%r8d
ffffffffc000990c:	48 8d 15 5d c6 ff ff 	lea    -0x39a3(%rip),%rdx        # ffffffffc0005f70 <.refptr.lock_create+0xf0>
ffffffffc0009913:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffffc0009918:	48 8d 0d 68 c6 ff ff 	lea    -0x3998(%rip),%rcx        # ffffffffc0005f87 <.refptr.lock_create+0x107>
ffffffffc000991f:	ff 15 3b b3 ff ff    	callq  *-0x4cc5(%rip)        # ffffffffc0004c60 <.refptr.fatal_error_line>
ffffffffc0009925:	48 8b 15 64 dc ff ff 	mov    -0x239c(%rip),%rdx        # ffffffffc0007590 <_pg_dt>
ffffffffc000992c:	4c 8b 8d 80 00 00 00 	mov    0x80(%rbp),%r9
ffffffffc0009933:	e9 73 fe ff ff       	jmpq   ffffffffc00097ab <pm_init+0x1db>
ffffffffc0009938:	31 c0                	xor    %eax,%eax
ffffffffc000993a:	e9 47 fe ff ff       	jmpq   ffffffffc0009786 <pm_init+0x1b6>
ffffffffc000993f:	90                   	nop

ffffffffc0009940 <vm_init>:
ffffffffc0009940:	41 54                	push   %r12
ffffffffc0009942:	55                   	push   %rbp
ffffffffc0009943:	57                   	push   %rdi
ffffffffc0009944:	56                   	push   %rsi
ffffffffc0009945:	53                   	push   %rbx
ffffffffc0009946:	48 83 ec 20          	sub    $0x20,%rsp
ffffffffc000994a:	48 8b 35 1f c7 ff ff 	mov    -0x38e1(%rip),%rsi        # ffffffffc0006070 <.refptr.pm_get_free>
ffffffffc0009951:	48 8b 3d 78 c6 ff ff 	mov    -0x3988(%rip),%rdi        # ffffffffc0005fd0 <.refptr.paging_map_page>
ffffffffc0009958:	bb 09 00 00 00       	mov    $0x9,%ebx
ffffffffc000995d:	48 8b 2d fc c6 ff ff 	mov    -0x3904(%rip),%rbp        # ffffffffc0006060 <.refptr.fatal_error>
ffffffffc0009964:	4c 8d 25 8a c6 ff ff 	lea    -0x3976(%rip),%r12        # ffffffffc0005ff5 <.refptr.paging_map_page+0x25>
ffffffffc000996b:	48 8b 41 58          	mov    0x58(%rcx),%rax
ffffffffc000996f:	48 89 05 32 dc ff ff 	mov    %rax,-0x23ce(%rip)        # ffffffffc00075a8 <_n_va>
ffffffffc0009976:	48 8b 05 23 dc ff ff 	mov    -0x23dd(%rip),%rax        # ffffffffc00075a0 <_vm_dt>
ffffffffc000997d:	48 8b 00             	mov    (%rax),%rax
ffffffffc0009980:	48 89 05 19 dc ff ff 	mov    %rax,-0x23e7(%rip)        # ffffffffc00075a0 <_vm_dt>
ffffffffc0009987:	eb 2a                	jmp    ffffffffc00099b3 <vm_init+0x73>
ffffffffc0009989:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0009990:	48 8b 0d 11 dc ff ff 	mov    -0x23ef(%rip),%rcx        # ffffffffc00075a8 <_n_va>
ffffffffc0009997:	ff d7                	callq  *%rdi
ffffffffc0009999:	48 8b 05 08 dc ff ff 	mov    -0x23f8(%rip),%rax        # ffffffffc00075a8 <_n_va>
ffffffffc00099a0:	48 05 00 10 00 00    	add    $0x1000,%rax
ffffffffc00099a6:	48 89 05 fb db ff ff 	mov    %rax,-0x2405(%rip)        # ffffffffc00075a8 <_n_va>
ffffffffc00099ad:	48 83 eb 01          	sub    $0x1,%rbx
ffffffffc00099b1:	74 13                	je     ffffffffc00099c6 <vm_init+0x86>
ffffffffc00099b3:	ff d6                	callq  *%rsi
ffffffffc00099b5:	48 89 c2             	mov    %rax,%rdx
ffffffffc00099b8:	48 85 c0             	test   %rax,%rax
ffffffffc00099bb:	75 d3                	jne    ffffffffc0009990 <vm_init+0x50>
ffffffffc00099bd:	4c 89 e1             	mov    %r12,%rcx
ffffffffc00099c0:	ff d5                	callq  *%rbp
ffffffffc00099c2:	31 d2                	xor    %edx,%edx
ffffffffc00099c4:	eb ca                	jmp    ffffffffc0009990 <vm_init+0x50>
ffffffffc00099c6:	48 8b 15 d3 db ff ff 	mov    -0x242d(%rip),%rdx        # ffffffffc00075a0 <_vm_dt>
ffffffffc00099cd:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffffc00099d1:	48 89 02             	mov    %rax,(%rdx)
ffffffffc00099d4:	48 8b 05 75 c6 ff ff 	mov    -0x398b(%rip),%rax        # ffffffffc0006050 <.refptr.___KERNEL_BASE_VA__>
ffffffffc00099db:	48 89 42 08          	mov    %rax,0x8(%rdx)
ffffffffc00099df:	48 8d 42 10          	lea    0x10(%rdx),%rax
ffffffffc00099e3:	48 81 c2 10 80 00 00 	add    $0x8010,%rdx
ffffffffc00099ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffffc00099f0:	0f 11 00             	movups %xmm0,(%rax)
ffffffffc00099f3:	48 83 c0 10          	add    $0x10,%rax
ffffffffc00099f7:	48 39 c2             	cmp    %rax,%rdx
ffffffffc00099fa:	75 f4                	jne    ffffffffc00099f0 <vm_init+0xb0>
ffffffffc00099fc:	48 8d 15 7d 85 ff ff 	lea    -0x7a83(%rip),%rdx        # ffffffffc0001f80 <_vm_pg_f_handler>
ffffffffc0009a03:	b9 0e 00 00 00       	mov    $0xe,%ecx
ffffffffc0009a08:	48 83 c4 20          	add    $0x20,%rsp
ffffffffc0009a0c:	5b                   	pop    %rbx
ffffffffc0009a0d:	5e                   	pop    %rsi
ffffffffc0009a0e:	5f                   	pop    %rdi
ffffffffc0009a0f:	5d                   	pop    %rbp
ffffffffc0009a10:	41 5c                	pop    %r12
ffffffffc0009a12:	48 ff 25 27 c6 ff ff 	rex.W jmpq *-0x39d9(%rip)        # ffffffffc0006040 <.refptr.regiser_isr_handler>
ffffffffc0009a19:	90                   	nop
ffffffffc0009a1a:	90                   	nop
ffffffffc0009a1b:	90                   	nop
ffffffffc0009a1c:	90                   	nop
ffffffffc0009a1d:	90                   	nop
ffffffffc0009a1e:	90                   	nop
ffffffffc0009a1f:	90                   	nop

ffffffffc0009a20 <lock_init>:
ffffffffc0009a20:	48 83 ec 28          	sub    $0x28,%rsp
ffffffffc0009a24:	b9 40 00 00 00       	mov    $0x40,%ecx
ffffffffc0009a29:	ff 15 91 ae ff ff    	callq  *-0x516f(%rip)        # ffffffffc00048c0 <.refptr.vm_commit>
ffffffffc0009a2f:	48 89 05 82 db ff ff 	mov    %rax,-0x247e(%rip)        # ffffffffc00075b8 <sl>
ffffffffc0009a36:	c6 00 ff             	movb   $0xff,(%rax)
ffffffffc0009a39:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffffc0009a3e:	66 90                	xchg   %ax,%ax
ffffffffc0009a40:	48 8b 15 71 db ff ff 	mov    -0x248f(%rip),%rdx        # ffffffffc00075b8 <sl>
ffffffffc0009a47:	c6 04 02 ff          	movb   $0xff,(%rdx,%rax,1)
ffffffffc0009a4b:	48 83 c0 01          	add    $0x1,%rax
ffffffffc0009a4f:	48 3d 00 80 00 00    	cmp    $0x8000,%rax
ffffffffc0009a55:	75 e9                	jne    ffffffffc0009a40 <lock_init+0x20>
ffffffffc0009a57:	41 b8 00 80 00 00    	mov    $0x8000,%r8d
ffffffffc0009a5d:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0009a62:	48 8d 0d 27 c6 ff ff 	lea    -0x39d9(%rip),%rcx        # ffffffffc0006090 <.refptr.asm_get_cr2+0x10>
ffffffffc0009a69:	48 83 c4 28          	add    $0x28,%rsp
ffffffffc0009a6d:	48 ff 25 5c ac ff ff 	rex.W jmpq *-0x53a4(%rip)        # ffffffffc00046d0 <.refptr._console_vprint>
ffffffffc0009a74:	90                   	nop
ffffffffc0009a75:	90                   	nop
ffffffffc0009a76:	90                   	nop
ffffffffc0009a77:	90                   	nop
ffffffffc0009a78:	90                   	nop
ffffffffc0009a79:	90                   	nop
ffffffffc0009a7a:	90                   	nop
ffffffffc0009a7b:	90                   	nop
ffffffffc0009a7c:	90                   	nop
ffffffffc0009a7d:	90                   	nop
ffffffffc0009a7e:	90                   	nop
ffffffffc0009a7f:	90                   	nop

ffffffffc0009a80 <process_init>:
ffffffffc0009a80:	53                   	push   %rbx
ffffffffc0009a81:	48 83 ec 20          	sub    $0x20,%rsp
ffffffffc0009a85:	b9 40 00 00 00       	mov    $0x40,%ecx
ffffffffc0009a8a:	ff 15 30 ae ff ff    	callq  *-0x51d0(%rip)        # ffffffffc00048c0 <.refptr.vm_commit>
ffffffffc0009a90:	31 d2                	xor    %edx,%edx
ffffffffc0009a92:	48 89 05 37 db ff ff 	mov    %rax,-0x24c9(%rip)        # ffffffffc00075d0 <pl>
ffffffffc0009a99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0009aa0:	89 50 04             	mov    %edx,0x4(%rax)
ffffffffc0009aa3:	83 c2 01             	add    $0x1,%edx
ffffffffc0009aa6:	48 05 10 08 00 00    	add    $0x810,%rax
ffffffffc0009aac:	c6 80 f0 f7 ff ff 00 	movb   $0x0,-0x810(%rax)
ffffffffc0009ab3:	83 fa 7f             	cmp    $0x7f,%edx
ffffffffc0009ab6:	75 e8                	jne    ffffffffc0009aa0 <process_init+0x20>
ffffffffc0009ab8:	41 b8 7e 00 00 00    	mov    $0x7e,%r8d
ffffffffc0009abe:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0009ac3:	48 8d 0d f6 c5 ff ff 	lea    -0x3a0a(%rip),%rcx        # ffffffffc00060c0 <.refptr.asm_get_cr2+0x40>
ffffffffc0009aca:	ff 15 00 ac ff ff    	callq  *-0x5400(%rip)        # ffffffffc00046d0 <.refptr._console_vprint>
ffffffffc0009ad0:	8b 05 f2 da ff ff    	mov    -0x250e(%rip),%eax        # ffffffffc00075c8 <_npi>
ffffffffc0009ad6:	4c 8b 05 f3 da ff ff 	mov    -0x250d(%rip),%r8        # ffffffffc00075d0 <pl>
ffffffffc0009add:	48 89 c3             	mov    %rax,%rbx
ffffffffc0009ae0:	48 89 c2             	mov    %rax,%rdx
ffffffffc0009ae3:	48 c1 e3 07          	shl    $0x7,%rbx
ffffffffc0009ae7:	83 c2 01             	add    $0x1,%edx
ffffffffc0009aea:	48 01 c3             	add    %rax,%rbx
ffffffffc0009aed:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffffc0009af1:	4c 01 c3             	add    %r8,%rbx
ffffffffc0009af4:	80 0b 01             	orb    $0x1,(%rbx)
ffffffffc0009af7:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%rbx)
ffffffffc0009afe:	89 15 c4 da ff ff    	mov    %edx,-0x253c(%rip)        # ffffffffc00075c8 <_npi>
ffffffffc0009b04:	45 31 c9             	xor    %r9d,%r9d
ffffffffc0009b07:	eb 15                	jmp    ffffffffc0009b1e <process_init+0x9e>
ffffffffc0009b09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffffc0009b10:	83 c2 01             	add    $0x1,%edx
ffffffffc0009b13:	41 b9 01 00 00 00    	mov    $0x1,%r9d
ffffffffc0009b19:	83 fa 7e             	cmp    $0x7e,%edx
ffffffffc0009b1c:	77 2f                	ja     ffffffffc0009b4d <process_init+0xcd>
ffffffffc0009b1e:	89 d1                	mov    %edx,%ecx
ffffffffc0009b20:	48 89 c8             	mov    %rcx,%rax
ffffffffc0009b23:	48 c1 e0 07          	shl    $0x7,%rax
ffffffffc0009b27:	48 01 c8             	add    %rcx,%rax
ffffffffc0009b2a:	48 c1 e0 04          	shl    $0x4,%rax
ffffffffc0009b2e:	41 f6 04 00 01       	testb  $0x1,(%r8,%rax,1)
ffffffffc0009b33:	75 db                	jne    ffffffffc0009b10 <process_init+0x90>
ffffffffc0009b35:	45 84 c9             	test   %r9b,%r9b
ffffffffc0009b38:	74 06                	je     ffffffffc0009b40 <process_init+0xc0>
ffffffffc0009b3a:	89 15 88 da ff ff    	mov    %edx,-0x2578(%rip)        # ffffffffc00075c8 <_npi>
ffffffffc0009b40:	48 89 1d 79 da ff ff 	mov    %rbx,-0x2587(%rip)        # ffffffffc00075c0 <kernel_process>
ffffffffc0009b47:	48 83 c4 20          	add    $0x20,%rsp
ffffffffc0009b4b:	5b                   	pop    %rbx
ffffffffc0009b4c:	c3                   	retq   
ffffffffc0009b4d:	89 15 75 da ff ff    	mov    %edx,-0x258b(%rip)        # ffffffffc00075c8 <_npi>
ffffffffc0009b53:	48 8d 0d 7c c5 ff ff 	lea    -0x3a84(%rip),%rcx        # ffffffffc00060d6 <.refptr.asm_get_cr2+0x56>
ffffffffc0009b5a:	ff 15 00 c5 ff ff    	callq  *-0x3b00(%rip)        # ffffffffc0006060 <.refptr.fatal_error>
ffffffffc0009b60:	8b 15 62 da ff ff    	mov    -0x259e(%rip),%edx        # ffffffffc00075c8 <_npi>
ffffffffc0009b66:	4c 8b 05 63 da ff ff 	mov    -0x259d(%rip),%r8        # ffffffffc00075d0 <pl>
ffffffffc0009b6d:	eb 95                	jmp    ffffffffc0009b04 <process_init+0x84>
ffffffffc0009b6f:	90                   	nop

ffffffffc0009b70 <scheduler_init>:
ffffffffc0009b70:	c3                   	retq   
ffffffffc0009b71:	90                   	nop
ffffffffc0009b72:	90                   	nop
ffffffffc0009b73:	90                   	nop
ffffffffc0009b74:	90                   	nop
ffffffffc0009b75:	90                   	nop
ffffffffc0009b76:	90                   	nop
ffffffffc0009b77:	90                   	nop
ffffffffc0009b78:	90                   	nop
ffffffffc0009b79:	90                   	nop
ffffffffc0009b7a:	90                   	nop
ffffffffc0009b7b:	90                   	nop
ffffffffc0009b7c:	90                   	nop
ffffffffc0009b7d:	90                   	nop
ffffffffc0009b7e:	90                   	nop
ffffffffc0009b7f:	90                   	nop

ffffffffc0009b80 <thread_init>:
ffffffffc0009b80:	48 83 ec 28          	sub    $0x28,%rsp
ffffffffc0009b84:	b9 40 00 00 00       	mov    $0x40,%ecx
ffffffffc0009b89:	ff 15 31 ad ff ff    	callq  *-0x52cf(%rip)        # ffffffffc00048c0 <.refptr.vm_commit>
ffffffffc0009b8f:	31 d2                	xor    %edx,%edx
ffffffffc0009b91:	48 89 05 60 da ff ff 	mov    %rax,-0x25a0(%rip)        # ffffffffc00075f8 <tl>
ffffffffc0009b98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffffc0009b9f:	00 
ffffffffc0009ba0:	89 50 04             	mov    %edx,0x4(%rax)
ffffffffc0009ba3:	83 c2 01             	add    $0x1,%edx
ffffffffc0009ba6:	48 05 b0 00 00 00    	add    $0xb0,%rax
ffffffffc0009bac:	c6 80 50 ff ff ff 00 	movb   $0x0,-0xb0(%rax)
ffffffffc0009bb3:	81 fa d1 05 00 00    	cmp    $0x5d1,%edx
ffffffffc0009bb9:	75 e5                	jne    ffffffffc0009ba0 <thread_init+0x20>
ffffffffc0009bbb:	41 b8 d0 05 00 00    	mov    $0x5d0,%r8d
ffffffffc0009bc1:	ba e6 e6 e6 00       	mov    $0xe6e6e6,%edx
ffffffffc0009bc6:	48 8d 0d 53 c5 ff ff 	lea    -0x3aad(%rip),%rcx        # ffffffffc0006120 <.refptr.hpet_timer_get_us+0x10>
ffffffffc0009bcd:	48 83 c4 28          	add    $0x28,%rsp
ffffffffc0009bd1:	48 ff 25 f8 aa ff ff 	rex.W jmpq *-0x5508(%rip)        # ffffffffc00046d0 <.refptr._console_vprint>
ffffffffc0009bd8:	90                   	nop
ffffffffc0009bd9:	90                   	nop
ffffffffc0009bda:	90                   	nop
ffffffffc0009bdb:	90                   	nop
ffffffffc0009bdc:	90                   	nop
ffffffffc0009bdd:	90                   	nop
ffffffffc0009bde:	90                   	nop
ffffffffc0009bdf:	90                   	nop
